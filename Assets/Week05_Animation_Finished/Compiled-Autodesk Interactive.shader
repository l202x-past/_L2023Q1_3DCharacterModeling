// Compiled shader for Current graphics device

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Autodesk Interactive Cull Off" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo", 2D) = "white" { }
 _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
 _Glossiness ("Roughness", Range(0.000000,1.000000)) = 0.500000
 _SpecGlossMap ("Roughness Map", 2D) = "white" { }
 _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
 _MetallicGlossMap ("Metallic", 2D) = "white" { }
[ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
[ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
 _BumpScale ("Scale", Float) = 1.000000
[Normal]  _BumpMap ("Normal Map", 2D) = "bump" { }
 _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
 _ParallaxMap ("Height Map", 2D) = "black" { }
 _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
 _OcclusionMap ("Occlusion", 2D) = "white" { }
 _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
 _EmissionMap ("Emission", 2D) = "white" { }
 _DetailMask ("Detail Mask", 2D) = "white" { }
 _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
 _DetailNormalMapScale ("Scale", Float) = 1.000000
[Normal]  _DetailNormalMap ("Normal Map", 2D) = "bump" { }
[Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
[HideInInspector]  _Mode ("__mode", Float) = 0.000000
[HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
[HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
[HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
}
SubShader { 
 LOD 300
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
 Cull Off

 // Stats for Vertex shader:
 //        d3d11: 36 avg math (22..65)
 // Stats for Fragment shader:
 //        d3d11: 162 avg math (137..189), 5 avg texture (3..9), 7 avg branch (6..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 14 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: eq r3.w, cb3[0].x, l(1.000000)
  14: if_nz r3.w
  15:   eq r3.w, cb3[0].y, l(1.000000)
  16:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  18:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  20:   mov r5.y, v3.w
  21:   mov r5.z, v4.w
  22:   mov r5.w, v5.w
  23:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  24:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  26:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r3.w, r4.y
  29:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  34: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  35: add r4.x, -cb0[9].y, l(1.000000)
  36: mad r4.x, r4.y, cb0[9].y, r4.x
  37: add r4.y, -r0.x, l(1.000000)
  38: dp3 r4.z, r3.xyzx, r2.xyzx
  39: add r4.z, r4.z, r4.z
  40: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  41: mul r6.xyz, r3.wwww, cb0[2].xyzx
  42: lt r3.w, l(0.000000), cb2[2].w
  43: if_nz r3.w
  44:   dp3 r3.w, r5.xyzx, r5.xyzx
  45:   rsq r3.w, r3.w
  46:   mul r7.xyz, r3.wwww, r5.xyzx
  47:   mov r8.x, v3.w
  48:   mov r8.y, v4.w
  49:   mov r8.z, v5.w
  50:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  51:   div r9.xyz, r9.xyzx, r7.xyzx
  52:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  53:   div r10.xyz, r10.xyzx, r7.xyzx
  54:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  55:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  56:   min r3.w, r9.y, r9.x
  57:   min r3.w, r9.z, r3.w
  58:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  59:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  60: else 
  61:   mov r7.xyz, r5.xyzx
  62: endif 
  63: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  64: mul r3.w, r3.w, r4.y
  65: mul r3.w, r3.w, l(6.000000)
  66: sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r3.w
  67: add r4.z, r7.w, l(-1.000000)
  68: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  69: mul r4.z, r4.z, cb2[3].x
  70: mul r8.xyz, r7.xyzx, r4.zzzz
  71: lt r4.w, cb2[1].w, l(0.999990)
  72: if_nz r4.w
  73:   lt r4.w, l(0.000000), cb2[6].w
  74:   if_nz r4.w
  75:     dp3 r4.w, r5.xyzx, r5.xyzx
  76:     rsq r4.w, r4.w
  77:     mul r9.xyz, r4.wwww, r5.xyzx
  78:     mov r10.x, v3.w
  79:     mov r10.y, v4.w
  80:     mov r10.z, v5.w
  81:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  82:     div r11.xyz, r11.xyzx, r9.xyzx
  83:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  84:     div r12.xyz, r12.xyzx, r9.xyzx
  85:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  86:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  87:     min r4.w, r11.y, r11.x
  88:     min r4.w, r11.z, r4.w
  89:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
  90:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
  91:   endif 
  92:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r3.w
  93:   add r3.w, r5.w, l(-1.000000)
  94:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
  95:   mul r3.w, r3.w, cb2[7].x
  96:   mul r5.xyz, r5.xyzx, r3.wwww
  97:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
  98:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
  99: endif 
 100: mul r4.xzw, r4.xxxx, r8.xxyz
 101: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 102: dp3 r2.w, r5.xyzx, r5.xyzx
 103: max r2.w, r2.w, l(0.001000)
 104: rsq r2.w, r2.w
 105: mul r5.xyz, r2.wwww, r5.xyzx
 106: dp3 r2.w, r2.xyzx, -r3.xyzx
 107: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 108: dp3_sat r2.x, r2.xyzx, r5.xyzx
 109: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 110: mul r2.z, r2.y, r2.y
 111: dp2 r2.z, r2.zzzz, r4.yyyy
 112: add r2.z, r2.z, l(-0.500000)
 113: add r3.y, -r3.x, l(1.000000)
 114: mul r3.z, r3.y, r3.y
 115: mul r3.z, r3.z, r3.z
 116: mul r3.y, r3.y, r3.z
 117: mad r3.y, r2.z, r3.y, l(1.000000)
 118: add r3.z, -|r2.w|, l(1.000000)
 119: mul r3.w, r3.z, r3.z
 120: mul r3.w, r3.w, r3.w
 121: mul r3.z, r3.z, r3.w
 122: mad r2.z, r2.z, r3.z, l(1.000000)
 123: mul r2.z, r2.z, r3.y
 124: mul r3.y, r4.y, r4.y
 125: max r3.y, r3.y, l(0.002000)
 126: add r3.w, -r3.y, l(1.000000)
 127: mad r5.x, |r2.w|, r3.w, r3.y
 128: mad r3.w, r3.x, r3.w, r3.y
 129: mul r2.w, |r2.w|, r3.w
 130: mad r2.w, r3.x, r5.x, r2.w
 131: add r2.w, r2.w, l(0.000010)
 132: div r2.w, l(0.500000), r2.w
 133: mul r3.w, r3.y, r3.y
 134: mad r5.x, r2.x, r3.w, -r2.x
 135: mad r2.x, r5.x, r2.x, l(1.000000)
 136: mul r3.w, r3.w, l(0.318310)
 137: mad r2.x, r2.x, r2.x, l(0.000000)
 138: div r2.x, r3.w, r2.x
 139: mul r2.x, r2.x, r2.w
 140: mul r2.x, r2.x, l(3.141593)
 141: max r2.x, r2.x, l(0.000100)
 142: sqrt r2.x, r2.x
 143: mul r2.xz, r3.xxxx, r2.xxzx
 144: mul r2.w, r3.y, l(0.280000)
 145: mad r2.w, -r2.w, r4.y, l(1.000000)
 146: dp3 r3.x, r1.xyzx, r1.xyzx
 147: ne r3.x, r3.x, l(0.000000)
 148: and r3.x, r3.x, l(0x3f800000)
 149: mul r2.x, r2.x, r3.x
 150: add r0.x, r0.x, -r1.w
 151: add_sat r0.x, r0.x, l(1.000000)
 152: mul r3.xyw, r2.zzzz, r6.xyxz
 153: mul r5.xyz, r6.xyzx, r2.xxxx
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.x, r1.w, r1.w
 156: mul r2.x, r2.x, r2.x
 157: mul r1.w, r1.w, r2.x
 158: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 160: mul r2.xyz, r2.xyzx, r5.xyzx
 161: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 162: mul r2.xyz, r4.xzwx, r2.wwww
 163: add r3.xyw, -r1.xyxz, r0.xxxx
 164: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 165: mad o0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 166: mov o0.w, l(1.000000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 166 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: eq r4.x, cb3[0].x, l(1.000000)
  14: if_nz r4.x
  15:   eq r4.y, cb3[0].y, l(1.000000)
  16:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  18:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  19:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  20:   mov r6.y, v3.w
  21:   mov r6.z, v4.w
  22:   mov r6.w, v5.w
  23:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  24:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  25:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  26:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  27:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r4.z, r4.y
  29:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  34: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  35: add r4.z, -cb0[9].y, l(1.000000)
  36: mad r4.z, r5.y, cb0[9].y, r4.z
  37: add r4.w, -r0.x, l(1.000000)
  38: dp3 r5.x, r3.yzwy, r2.xyzx
  39: add r5.x, r5.x, r5.x
  40: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  41: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  42: if_nz r4.x
  43:   eq r4.x, cb3[0].y, l(1.000000)
  44:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  45:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  46:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  47:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  48:   mov r8.y, v3.w
  49:   mov r8.z, v4.w
  50:   mov r8.w, v5.w
  51:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  52:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  53:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  54:   mul r4.x, r7.y, l(0.250000)
  55:   mul r4.y, cb3[0].z, l(0.500000)
  56:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  57:   max r4.x, r4.y, r4.x
  58:   min r7.x, r5.w, r4.x
  59:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  60:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  61:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  62:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  63:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  64:   mov r2.w, l(1.000000)
  65:   dp4 r8.x, r8.xyzw, r2.xyzw
  66:   dp4 r8.y, r9.xyzw, r2.xyzw
  67:   dp4 r8.z, r7.xyzw, r2.xyzw
  68: else 
  69:   mov r2.w, l(1.000000)
  70:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  71:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  72:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  73: endif 
  74: add r7.xyz, r8.xyzx, v6.xyzx
  75: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: log r7.xyz, r7.xyzx
  77: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  78: exp r7.xyz, r7.xyzx
  79: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  80: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  81: lt r2.w, l(0.000000), cb2[2].w
  82: if_nz r2.w
  83:   dp3 r2.w, r5.xyzx, r5.xyzx
  84:   rsq r2.w, r2.w
  85:   mul r8.xyz, r2.wwww, r5.xyzx
  86:   mov r9.x, v3.w
  87:   mov r9.y, v4.w
  88:   mov r9.z, v5.w
  89:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  90:   div r10.xyz, r10.xyzx, r8.xyzx
  91:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  92:   div r11.xyz, r11.xyzx, r8.xyzx
  93:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  94:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  95:   min r2.w, r10.y, r10.x
  96:   min r2.w, r10.z, r2.w
  97:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  98:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  99: else 
 100:   mov r8.xyz, r5.xyzx
 101: endif 
 102: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 103: mul r2.w, r2.w, r4.w
 104: mul r2.w, r2.w, l(6.000000)
 105: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r2.w
 106: add r4.x, r8.w, l(-1.000000)
 107: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 108: mul r4.x, r4.x, cb2[3].x
 109: mul r9.xyz, r8.xyzx, r4.xxxx
 110: lt r4.y, cb2[1].w, l(0.999990)
 111: if_nz r4.y
 112:   lt r4.y, l(0.000000), cb2[6].w
 113:   if_nz r4.y
 114:     dp3 r4.y, r5.xyzx, r5.xyzx
 115:     rsq r4.y, r4.y
 116:     mul r10.xyz, r4.yyyy, r5.xyzx
 117:     mov r11.x, v3.w
 118:     mov r11.y, v4.w
 119:     mov r11.z, v5.w
 120:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 121:     div r12.xyz, r12.xyzx, r10.xyzx
 122:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 123:     div r13.xyz, r13.xyzx, r10.xyzx
 124:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 125:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 126:     min r4.y, r12.y, r12.x
 127:     min r4.y, r12.z, r4.y
 128:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 129:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 130:   endif 
 131:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 132:   add r2.w, r5.w, l(-1.000000)
 133:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 134:   mul r2.w, r2.w, cb2[7].x
 135:   mul r5.xyz, r5.xyzx, r2.wwww
 136:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 137:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 138: endif 
 139: mul r5.xyz, r4.zzzz, r9.xyzx
 140: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 141: dp3 r2.w, r8.xyzx, r8.xyzx
 142: max r2.w, r2.w, l(0.001000)
 143: rsq r2.w, r2.w
 144: mul r8.xyz, r2.wwww, r8.xyzx
 145: dp3 r2.w, r2.xyzx, -r3.yzwy
 146: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 147: dp3_sat r2.x, r2.xyzx, r8.xyzx
 148: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 149: mul r2.z, r2.y, r2.y
 150: dp2 r2.z, r2.zzzz, r4.wwww
 151: add r2.z, r2.z, l(-0.500000)
 152: add r3.y, -r3.x, l(1.000000)
 153: mul r3.z, r3.y, r3.y
 154: mul r3.z, r3.z, r3.z
 155: mul r3.y, r3.y, r3.z
 156: mad r3.y, r2.z, r3.y, l(1.000000)
 157: add r3.z, -|r2.w|, l(1.000000)
 158: mul r3.w, r3.z, r3.z
 159: mul r3.w, r3.w, r3.w
 160: mul r3.z, r3.z, r3.w
 161: mad r2.z, r2.z, r3.z, l(1.000000)
 162: mul r2.z, r2.z, r3.y
 163: mul r3.y, r4.w, r4.w
 164: max r3.y, r3.y, l(0.002000)
 165: add r3.w, -r3.y, l(1.000000)
 166: mad r4.x, |r2.w|, r3.w, r3.y
 167: mad r3.w, r3.x, r3.w, r3.y
 168: mul r2.w, |r2.w|, r3.w
 169: mad r2.w, r3.x, r4.x, r2.w
 170: add r2.w, r2.w, l(0.000010)
 171: div r2.w, l(0.500000), r2.w
 172: mul r3.w, r3.y, r3.y
 173: mad r4.x, r2.x, r3.w, -r2.x
 174: mad r2.x, r4.x, r2.x, l(1.000000)
 175: mul r3.w, r3.w, l(0.318310)
 176: mad r2.x, r2.x, r2.x, l(0.000000)
 177: div r2.x, r3.w, r2.x
 178: mul r2.x, r2.x, r2.w
 179: mul r2.x, r2.x, l(3.141593)
 180: max r2.x, r2.x, l(0.000100)
 181: sqrt r2.x, r2.x
 182: mul r2.xz, r3.xxxx, r2.xxzx
 183: mul r2.w, r3.y, l(0.280000)
 184: mad r2.w, -r2.w, r4.w, l(1.000000)
 185: dp3 r3.x, r1.xyzx, r1.xyzx
 186: ne r3.x, r3.x, l(0.000000)
 187: and r3.x, r3.x, l(0x3f800000)
 188: mul r2.x, r2.x, r3.x
 189: add r1.w, -r1.w, l(1.000000)
 190: add_sat r0.x, r0.x, r1.w
 191: mul r3.xyw, r2.zzzz, r6.xyxz
 192: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 193: mul r4.xyz, r6.xyzx, r2.xxxx
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.x, r1.w, r1.w
 196: mul r2.x, r2.x, r2.x
 197: mul r1.w, r1.w, r2.x
 198: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 199: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 200: mul r2.xyz, r2.xyzx, r4.xyzx
 201: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 202: mul r2.xyz, r5.xyzx, r2.wwww
 203: add r3.xyw, -r1.xyxz, r0.xxxx
 204: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 205: mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 206: sample r1.xyzw, v1.xyxx, t2.xyzw, s4
 207: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 208: mov o0.w, l(1.000000)
 209: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: mov o5.xyz, r0.xyzx
  29: mul r0.w, r0.y, r0.y
  30: mad r0.w, r0.x, r0.x, -r0.w
  31: mul r1.xyzw, r0.yzzx, r0.xyzz
  32: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  34: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  36: mov o6.w, l(0)
  37: mov o7.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 167 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: dp3 r3.x, v2.xyzx, v2.xyzx
  14: rsq r3.x, r3.x
  15: mul r3.yzw, r3.xxxx, v2.xxyz
  16: eq r4.x, cb3[0].x, l(1.000000)
  17: if_nz r4.x
  18:   eq r4.y, cb3[0].y, l(1.000000)
  19:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  20:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  21:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  23:   mov r6.y, v3.w
  24:   mov r6.z, v4.w
  25:   mov r6.w, v5.w
  26:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  27:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  28:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  29:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  30:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  31:   max r5.x, r4.z, r4.y
  32:   sample r5.xyzw, r5.xzwx, t4.xyzw, s1
  33: else 
  34:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  35: endif 
  36: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  37: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  38: add r4.z, -cb0[9].y, l(1.000000)
  39: mad r4.z, r5.y, cb0[9].y, r4.z
  40: add r4.w, -r0.w, l(1.000000)
  41: dp3 r5.x, r3.yzwy, r2.xyzx
  42: add r5.x, r5.x, r5.x
  43: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  44: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  45: if_nz r4.x
  46:   eq r4.x, cb3[0].y, l(1.000000)
  47:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  48:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  49:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  50:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  51:   mov r8.y, v3.w
  52:   mov r8.z, v4.w
  53:   mov r8.w, v5.w
  54:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  55:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  56:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  57:   mul r4.x, r7.y, l(0.250000)
  58:   mul r4.y, cb3[0].z, l(0.500000)
  59:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  60:   max r4.x, r4.y, r4.x
  61:   min r7.x, r5.w, r4.x
  62:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  63:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  64:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  65:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  66:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  67:   mov r2.w, l(1.000000)
  68:   dp4 r8.x, r8.xyzw, r2.xyzw
  69:   dp4 r8.y, r9.xyzw, r2.xyzw
  70:   dp4 r8.z, r7.xyzw, r2.xyzw
  71: else 
  72:   mov r2.w, l(1.000000)
  73:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  74:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  75:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  76: endif 
  77: add r7.xyz, r8.xyzx, v6.xyzx
  78: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  79: log r7.xyz, r7.xyzx
  80: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  81: exp r7.xyz, r7.xyzx
  82: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  83: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  84: lt r2.w, l(0.000000), cb2[2].w
  85: if_nz r2.w
  86:   dp3 r2.w, r5.xyzx, r5.xyzx
  87:   rsq r2.w, r2.w
  88:   mul r8.xyz, r2.wwww, r5.xyzx
  89:   mov r9.x, v3.w
  90:   mov r9.y, v4.w
  91:   mov r9.z, v5.w
  92:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  93:   div r10.xyz, r10.xyzx, r8.xyzx
  94:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  95:   div r11.xyz, r11.xyzx, r8.xyzx
  96:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  97:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  98:   min r2.w, r10.y, r10.x
  99:   min r2.w, r10.z, r2.w
 100:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
 101:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
 102: else 
 103:   mov r8.xyz, r5.xyzx
 104: endif 
 105: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 106: mul r2.w, r2.w, r4.w
 107: mul r2.w, r2.w, l(6.000000)
 108: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 109: add r4.x, r8.w, l(-1.000000)
 110: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 111: mul r4.x, r4.x, cb2[3].x
 112: mul r9.xyz, r8.xyzx, r4.xxxx
 113: lt r4.y, cb2[1].w, l(0.999990)
 114: if_nz r4.y
 115:   lt r4.y, l(0.000000), cb2[6].w
 116:   if_nz r4.y
 117:     dp3 r4.y, r5.xyzx, r5.xyzx
 118:     rsq r4.y, r4.y
 119:     mul r10.xyz, r4.yyyy, r5.xyzx
 120:     mov r11.x, v3.w
 121:     mov r11.y, v4.w
 122:     mov r11.z, v5.w
 123:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 124:     div r12.xyz, r12.xyzx, r10.xyzx
 125:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 126:     div r13.xyz, r13.xyzx, r10.xyzx
 127:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 128:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 129:     min r4.y, r12.y, r12.x
 130:     min r4.y, r12.z, r4.y
 131:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 132:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 133:   endif 
 134:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 135:   add r2.w, r5.w, l(-1.000000)
 136:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 137:   mul r2.w, r2.w, cb2[7].x
 138:   mul r5.xyz, r5.xyzx, r2.wwww
 139:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 140:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 141: endif 
 142: mul r5.xyz, r4.zzzz, r9.xyzx
 143: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 144: dp3 r2.w, r8.xyzx, r8.xyzx
 145: max r2.w, r2.w, l(0.001000)
 146: rsq r2.w, r2.w
 147: mul r8.xyz, r2.wwww, r8.xyzx
 148: dp3 r2.w, r2.xyzx, -r3.yzwy
 149: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 150: dp3_sat r2.x, r2.xyzx, r8.xyzx
 151: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 152: mul r2.z, r2.y, r2.y
 153: dp2 r2.z, r2.zzzz, r4.wwww
 154: add r2.z, r2.z, l(-0.500000)
 155: add r3.y, -r3.x, l(1.000000)
 156: mul r3.z, r3.y, r3.y
 157: mul r3.z, r3.z, r3.z
 158: mul r3.y, r3.y, r3.z
 159: mad r3.y, r2.z, r3.y, l(1.000000)
 160: add r3.z, -|r2.w|, l(1.000000)
 161: mul r3.w, r3.z, r3.z
 162: mul r3.w, r3.w, r3.w
 163: mul r3.z, r3.z, r3.w
 164: mad r2.z, r2.z, r3.z, l(1.000000)
 165: mul r2.z, r2.z, r3.y
 166: mul r3.y, r4.w, r4.w
 167: max r3.y, r3.y, l(0.002000)
 168: add r3.w, -r3.y, l(1.000000)
 169: mad r4.x, |r2.w|, r3.w, r3.y
 170: mad r3.w, r3.x, r3.w, r3.y
 171: mul r2.w, |r2.w|, r3.w
 172: mad r2.w, r3.x, r4.x, r2.w
 173: add r2.w, r2.w, l(0.000010)
 174: div r2.w, l(0.500000), r2.w
 175: mul r3.w, r3.y, r3.y
 176: mad r4.x, r2.x, r3.w, -r2.x
 177: mad r2.x, r4.x, r2.x, l(1.000000)
 178: mul r3.w, r3.w, l(0.318310)
 179: mad r2.x, r2.x, r2.x, l(0.000000)
 180: div r2.x, r3.w, r2.x
 181: mul r2.x, r2.x, r2.w
 182: mul r2.x, r2.x, l(3.141593)
 183: max r2.x, r2.x, l(0.000100)
 184: sqrt r2.x, r2.x
 185: mul r2.xz, r3.xxxx, r2.xxzx
 186: mul r2.w, r3.y, l(0.280000)
 187: mad r2.w, -r2.w, r4.w, l(1.000000)
 188: dp3 r3.x, r0.xyzx, r0.xyzx
 189: ne r3.x, r3.x, l(0.000000)
 190: and r3.x, r3.x, l(0x3f800000)
 191: mul r2.x, r2.x, r3.x
 192: add r1.w, -r1.w, l(1.000000)
 193: add_sat r0.w, r0.w, r1.w
 194: mul r3.xyw, r2.zzzz, r6.xyxz
 195: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 196: mul r4.xyz, r6.xyzx, r2.xxxx
 197: add r1.w, -r2.y, l(1.000000)
 198: mul r2.x, r1.w, r1.w
 199: mul r2.x, r2.x, r2.x
 200: mul r1.w, r1.w, r2.x
 201: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 202: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 203: mul r2.xyz, r2.xyzx, r4.xyzx
 204: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 205: mul r2.xyz, r5.xyzx, r2.wwww
 206: add r3.xyw, -r0.xyxz, r0.wwww
 207: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 208: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 209: mov o0.w, l(1.000000)
 210: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: mov o4.w, r0.y
  27: mov o5.w, r0.z
  28: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r0.w, r0.xyzx, r0.xyzx
  32: rsq r0.w, r0.w
  33: mul r0.xyz, r0.wwww, r0.xyzx
  34: mul r2.xyz, r1.yzxy, r0.zxyz
  35: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  36: mul r0.w, v4.w, cb3[9].w
  37: mul o4.xyz, r0.wwww, r1.xyzx
  38: mov o5.xyz, r0.xyzx
  39: mul r0.w, r0.y, r0.y
  40: mad r0.w, r0.x, r0.x, -r0.w
  41: mul r1.xyzw, r0.yzzx, r0.xyzz
  42: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  43: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  44: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  45: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  46: mov o6.w, l(0)
  47: mov o7.xyzw, l(0,0,0,0)
  48: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 177 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r3.x, v2.xyzx, v2.xyzx
  25: rsq r3.x, r3.x
  26: mul r3.yzw, r3.xxxx, v2.xxyz
  27: eq r4.x, cb3[0].x, l(1.000000)
  28: if_nz r4.x
  29:   eq r4.y, cb3[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  31:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  34:   mov r6.y, v3.w
  35:   mov r6.z, v4.w
  36:   mov r6.w, v5.w
  37:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  38:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  39:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  40:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  41:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r4.z, r4.y
  43:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  48: sample r5.xyzw, v1.xyxx, t2.xyzw, s4
  49: add r4.z, -cb0[9].y, l(1.000000)
  50: mad r4.z, r5.y, cb0[9].y, r4.z
  51: add r4.w, -r0.w, l(1.000000)
  52: dp3 r5.x, r3.yzwy, r2.xyzx
  53: add r5.x, r5.x, r5.x
  54: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  55: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  56: if_nz r4.x
  57:   eq r4.x, cb3[0].y, l(1.000000)
  58:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  59:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  60:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  61:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  62:   mov r8.y, v3.w
  63:   mov r8.z, v4.w
  64:   mov r8.w, v5.w
  65:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  66:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  67:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  68:   mul r4.x, r7.y, l(0.250000)
  69:   mul r4.y, cb3[0].z, l(0.500000)
  70:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  71:   max r4.x, r4.y, r4.x
  72:   min r7.x, r5.w, r4.x
  73:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  74:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  75:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  76:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  77:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  78:   mov r2.w, l(1.000000)
  79:   dp4 r8.x, r8.xyzw, r2.xyzw
  80:   dp4 r8.y, r9.xyzw, r2.xyzw
  81:   dp4 r8.z, r7.xyzw, r2.xyzw
  82: else 
  83:   mov r2.w, l(1.000000)
  84:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  85:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  86:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  87: endif 
  88: add r7.xyz, r8.xyzx, v6.xyzx
  89: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: log r7.xyz, r7.xyzx
  91: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  92: exp r7.xyz, r7.xyzx
  93: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  94: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  95: lt r2.w, l(0.000000), cb2[2].w
  96: if_nz r2.w
  97:   dp3 r2.w, r5.xyzx, r5.xyzx
  98:   rsq r2.w, r2.w
  99:   mul r8.xyz, r2.wwww, r5.xyzx
 100:   mov r9.x, v3.w
 101:   mov r9.y, v4.w
 102:   mov r9.z, v5.w
 103:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
 104:   div r10.xyz, r10.xyzx, r8.xyzx
 105:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
 106:   div r11.xyz, r11.xyzx, r8.xyzx
 107:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 108:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 109:   min r2.w, r10.y, r10.x
 110:   min r2.w, r10.z, r2.w
 111:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
 112:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
 113: else 
 114:   mov r8.xyz, r5.xyzx
 115: endif 
 116: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 117: mul r2.w, r2.w, r4.w
 118: mul r2.w, r2.w, l(6.000000)
 119: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r2.w
 120: add r4.x, r8.w, l(-1.000000)
 121: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 122: mul r4.x, r4.x, cb2[3].x
 123: mul r9.xyz, r8.xyzx, r4.xxxx
 124: lt r4.y, cb2[1].w, l(0.999990)
 125: if_nz r4.y
 126:   lt r4.y, l(0.000000), cb2[6].w
 127:   if_nz r4.y
 128:     dp3 r4.y, r5.xyzx, r5.xyzx
 129:     rsq r4.y, r4.y
 130:     mul r10.xyz, r4.yyyy, r5.xyzx
 131:     mov r11.x, v3.w
 132:     mov r11.y, v4.w
 133:     mov r11.z, v5.w
 134:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 135:     div r12.xyz, r12.xyzx, r10.xyzx
 136:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 137:     div r13.xyz, r13.xyzx, r10.xyzx
 138:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 139:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 140:     min r4.y, r12.y, r12.x
 141:     min r4.y, r12.z, r4.y
 142:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 143:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 144:   endif 
 145:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 146:   add r2.w, r5.w, l(-1.000000)
 147:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 148:   mul r2.w, r2.w, cb2[7].x
 149:   mul r5.xyz, r5.xyzx, r2.wwww
 150:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 151:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 152: endif 
 153: mul r5.xyz, r4.zzzz, r9.xyzx
 154: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 155: dp3 r2.w, r8.xyzx, r8.xyzx
 156: max r2.w, r2.w, l(0.001000)
 157: rsq r2.w, r2.w
 158: mul r8.xyz, r2.wwww, r8.xyzx
 159: dp3 r2.w, r2.xyzx, -r3.yzwy
 160: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 161: dp3_sat r2.x, r2.xyzx, r8.xyzx
 162: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 163: mul r2.z, r2.y, r2.y
 164: dp2 r2.z, r2.zzzz, r4.wwww
 165: add r2.z, r2.z, l(-0.500000)
 166: add r3.y, -r3.x, l(1.000000)
 167: mul r3.z, r3.y, r3.y
 168: mul r3.z, r3.z, r3.z
 169: mul r3.y, r3.y, r3.z
 170: mad r3.y, r2.z, r3.y, l(1.000000)
 171: add r3.z, -|r2.w|, l(1.000000)
 172: mul r3.w, r3.z, r3.z
 173: mul r3.w, r3.w, r3.w
 174: mul r3.z, r3.z, r3.w
 175: mad r2.z, r2.z, r3.z, l(1.000000)
 176: mul r2.z, r2.z, r3.y
 177: mul r3.y, r4.w, r4.w
 178: max r3.y, r3.y, l(0.002000)
 179: add r3.w, -r3.y, l(1.000000)
 180: mad r4.x, |r2.w|, r3.w, r3.y
 181: mad r3.w, r3.x, r3.w, r3.y
 182: mul r2.w, |r2.w|, r3.w
 183: mad r2.w, r3.x, r4.x, r2.w
 184: add r2.w, r2.w, l(0.000010)
 185: div r2.w, l(0.500000), r2.w
 186: mul r3.w, r3.y, r3.y
 187: mad r4.x, r2.x, r3.w, -r2.x
 188: mad r2.x, r4.x, r2.x, l(1.000000)
 189: mul r3.w, r3.w, l(0.318310)
 190: mad r2.x, r2.x, r2.x, l(0.000000)
 191: div r2.x, r3.w, r2.x
 192: mul r2.x, r2.x, r2.w
 193: mul r2.x, r2.x, l(3.141593)
 194: max r2.x, r2.x, l(0.000100)
 195: sqrt r2.x, r2.x
 196: mul r2.xz, r3.xxxx, r2.xxzx
 197: mul r2.w, r3.y, l(0.280000)
 198: mad r2.w, -r2.w, r4.w, l(1.000000)
 199: dp3 r3.x, r0.xyzx, r0.xyzx
 200: ne r3.x, r3.x, l(0.000000)
 201: and r3.x, r3.x, l(0x3f800000)
 202: mul r2.x, r2.x, r3.x
 203: add r0.w, r0.w, -r1.w
 204: add_sat r0.w, r0.w, l(1.000000)
 205: mul r3.xyw, r2.zzzz, r6.xyxz
 206: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 207: mul r4.xyz, r6.xyzx, r2.xxxx
 208: add r1.w, -r2.y, l(1.000000)
 209: mul r2.x, r1.w, r1.w
 210: mul r2.x, r2.x, r2.x
 211: mul r1.w, r1.w, r2.x
 212: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 213: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 214: mul r2.xyz, r2.xyzx, r4.xyzx
 215: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 216: mul r2.xyz, r5.xyzx, r2.wwww
 217: add r3.xyw, -r0.xyxz, r0.wwww
 218: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 219: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 220: mov o0.w, l(1.000000)
 221: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: mov o5.xyz, r0.xyzx
  29: mul r0.w, r0.y, r0.y
  30: mad r0.w, r0.x, r0.x, -r0.w
  31: mul r1.xyzw, r0.yzzx, r0.xyzz
  32: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  34: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  36: mov o6.w, l(0)
  37: mov o7.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: mov o4.w, r1.y
  28: mov o5.w, r1.z
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r3.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  37: mul r1.w, v4.w, cb3[9].w
  38: mul o4.xyz, r1.wwww, r2.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.w, r1.y, r1.y
  41: mad r1.w, r1.x, r1.x, -r1.w
  42: mul r2.xyzw, r1.yzzx, r1.xyzz
  43: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  44: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  45: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  46: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  47: mov o6.w, l(0)
  48: mul r0.y, r0.y, cb1[5].x
  49: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  50: mov o7.zw, r0.zzzw
  51: add o7.xy, r1.zzzz, r1.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r3.x, v2.xyzx, v2.xyzx
  25: rsq r3.x, r3.x
  26: mul r3.yzw, r3.xxxx, v2.xxyz
  27: eq r4.x, cb3[0].x, l(1.000000)
  28: if_nz r4.x
  29:   eq r4.y, cb3[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  31:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  34:   mov r6.y, v3.w
  35:   mov r6.z, v4.w
  36:   mov r6.w, v5.w
  37:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  38:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  39:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  40:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  41:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r4.z, r4.y
  43:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  48: sample r5.xyzw, v1.xyxx, t2.xyzw, s4
  49: add r4.z, -cb0[9].y, l(1.000000)
  50: mad r4.z, r5.y, cb0[9].y, r4.z
  51: add r4.w, -r0.w, l(1.000000)
  52: dp3 r5.x, r3.yzwy, r2.xyzx
  53: add r5.x, r5.x, r5.x
  54: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  55: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  56: if_nz r4.x
  57:   eq r4.x, cb3[0].y, l(1.000000)
  58:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  59:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  60:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  61:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  62:   mov r8.y, v3.w
  63:   mov r8.z, v4.w
  64:   mov r8.w, v5.w
  65:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  66:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  67:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  68:   mul r4.x, r7.y, l(0.250000)
  69:   mul r4.y, cb3[0].z, l(0.500000)
  70:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  71:   max r4.x, r4.y, r4.x
  72:   min r7.x, r5.w, r4.x
  73:   sample r8.xyzw, r7.xzwx, t6.xyzw, s1
  74:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  75:   sample r9.xyzw, r9.xyzx, t6.xyzw, s1
  76:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  77:   sample r7.xyzw, r7.xyzx, t6.xyzw, s1
  78:   mov r2.w, l(1.000000)
  79:   dp4 r8.x, r8.xyzw, r2.xyzw
  80:   dp4 r8.y, r9.xyzw, r2.xyzw
  81:   dp4 r8.z, r7.xyzw, r2.xyzw
  82: else 
  83:   mov r2.w, l(1.000000)
  84:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  85:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  86:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  87: endif 
  88: add r7.xyz, r8.xyzx, v6.xyzx
  89: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: log r7.xyz, r7.xyzx
  91: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  92: exp r7.xyz, r7.xyzx
  93: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  94: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  95: lt r2.w, l(0.000000), cb2[2].w
  96: if_nz r2.w
  97:   dp3 r2.w, r5.xyzx, r5.xyzx
  98:   rsq r2.w, r2.w
  99:   mul r8.xyz, r2.wwww, r5.xyzx
 100:   mov r9.x, v3.w
 101:   mov r9.y, v4.w
 102:   mov r9.z, v5.w
 103:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
 104:   div r10.xyz, r10.xyzx, r8.xyzx
 105:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
 106:   div r11.xyz, r11.xyzx, r8.xyzx
 107:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 108:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 109:   min r2.w, r10.y, r10.x
 110:   min r2.w, r10.z, r2.w
 111:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
 112:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
 113: else 
 114:   mov r8.xyz, r5.xyzx
 115: endif 
 116: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 117: mul r2.w, r2.w, r4.w
 118: mul r2.w, r2.w, l(6.000000)
 119: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r2.w
 120: add r4.x, r8.w, l(-1.000000)
 121: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 122: mul r4.x, r4.x, cb2[3].x
 123: mul r9.xyz, r8.xyzx, r4.xxxx
 124: lt r4.y, cb2[1].w, l(0.999990)
 125: if_nz r4.y
 126:   lt r4.y, l(0.000000), cb2[6].w
 127:   if_nz r4.y
 128:     dp3 r4.y, r5.xyzx, r5.xyzx
 129:     rsq r4.y, r4.y
 130:     mul r10.xyz, r4.yyyy, r5.xyzx
 131:     mov r11.x, v3.w
 132:     mov r11.y, v4.w
 133:     mov r11.z, v5.w
 134:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 135:     div r12.xyz, r12.xyzx, r10.xyzx
 136:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 137:     div r13.xyz, r13.xyzx, r10.xyzx
 138:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 139:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 140:     min r4.y, r12.y, r12.x
 141:     min r4.y, r12.z, r4.y
 142:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 143:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 144:   endif 
 145:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
 146:   add r2.w, r5.w, l(-1.000000)
 147:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 148:   mul r2.w, r2.w, cb2[7].x
 149:   mul r5.xyz, r5.xyzx, r2.wwww
 150:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 151:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 152: endif 
 153: mul r5.xyz, r4.zzzz, r9.xyzx
 154: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 155: dp3 r2.w, r8.xyzx, r8.xyzx
 156: max r2.w, r2.w, l(0.001000)
 157: rsq r2.w, r2.w
 158: mul r8.xyz, r2.wwww, r8.xyzx
 159: dp3 r2.w, r2.xyzx, -r3.yzwy
 160: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 161: dp3_sat r2.x, r2.xyzx, r8.xyzx
 162: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 163: mul r2.z, r2.y, r2.y
 164: dp2 r2.z, r2.zzzz, r4.wwww
 165: add r2.z, r2.z, l(-0.500000)
 166: add r3.y, -r3.x, l(1.000000)
 167: mul r3.z, r3.y, r3.y
 168: mul r3.z, r3.z, r3.z
 169: mul r3.y, r3.y, r3.z
 170: mad r3.y, r2.z, r3.y, l(1.000000)
 171: add r3.z, -|r2.w|, l(1.000000)
 172: mul r3.w, r3.z, r3.z
 173: mul r3.w, r3.w, r3.w
 174: mul r3.z, r3.z, r3.w
 175: mad r2.z, r2.z, r3.z, l(1.000000)
 176: mul r2.z, r2.z, r3.y
 177: mul r3.y, r4.w, r4.w
 178: max r3.y, r3.y, l(0.002000)
 179: add r3.w, -r3.y, l(1.000000)
 180: mad r4.x, |r2.w|, r3.w, r3.y
 181: mad r3.w, r3.x, r3.w, r3.y
 182: mul r2.w, |r2.w|, r3.w
 183: mad r2.w, r3.x, r4.x, r2.w
 184: add r2.w, r2.w, l(0.000010)
 185: div r2.w, l(0.500000), r2.w
 186: mul r3.w, r3.y, r3.y
 187: mad r4.x, r2.x, r3.w, -r2.x
 188: mad r2.x, r4.x, r2.x, l(1.000000)
 189: mul r3.w, r3.w, l(0.318310)
 190: mad r2.x, r2.x, r2.x, l(0.000000)
 191: div r2.x, r3.w, r2.x
 192: mul r2.x, r2.x, r2.w
 193: mul r2.x, r2.x, l(3.141593)
 194: max r2.x, r2.x, l(0.000100)
 195: sqrt r2.x, r2.x
 196: mul r2.xz, r3.xxxx, r2.xxzx
 197: mul r2.w, r3.y, l(0.280000)
 198: mad r2.w, -r2.w, r4.w, l(1.000000)
 199: dp3 r3.x, r0.xyzx, r0.xyzx
 200: ne r3.x, r3.x, l(0.000000)
 201: and r3.x, r3.x, l(0x3f800000)
 202: mul r2.x, r2.x, r3.x
 203: add r0.w, r0.w, -r1.w
 204: add_sat r0.w, r0.w, l(1.000000)
 205: mul r3.xyw, r2.zzzz, r6.xyxz
 206: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 207: mul r4.xyz, r6.xyzx, r2.xxxx
 208: add r1.w, -r2.y, l(1.000000)
 209: mul r2.x, r1.w, r1.w
 210: mul r2.x, r2.x, r2.x
 211: mul r1.w, r1.w, r2.x
 212: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 213: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 214: mul r2.xyz, r2.xyzx, r4.xyzx
 215: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 216: mul r2.xyz, r5.xyzx, r2.wwww
 217: add r3.xyw, -r0.xyxz, r0.wwww
 218: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 219: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 220: sample r1.xyzw, v1.xyxx, t3.xyzw, s5
 221: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 222: mov o0.w, l(1.000000)
 223: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 165 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: eq r4.x, cb3[0].x, l(1.000000)
  14: if_nz r4.x
  15:   eq r4.y, cb3[0].y, l(1.000000)
  16:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  18:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  19:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  20:   mov r6.y, v3.w
  21:   mov r6.z, v4.w
  22:   mov r6.w, v5.w
  23:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  24:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  25:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  26:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  27:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r4.z, r4.y
  29:   sample r5.xyzw, r5.xzwx, t4.xyzw, s1
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  34: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  35: add r4.z, -cb0[9].y, l(1.000000)
  36: mad r4.z, r5.y, cb0[9].y, r4.z
  37: add r4.w, -r0.x, l(1.000000)
  38: dp3 r5.x, r3.yzwy, r2.xyzx
  39: add r5.x, r5.x, r5.x
  40: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  41: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  42: if_nz r4.x
  43:   eq r4.x, cb3[0].y, l(1.000000)
  44:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  45:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  46:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  47:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  48:   mov r8.y, v3.w
  49:   mov r8.z, v4.w
  50:   mov r8.w, v5.w
  51:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  52:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  53:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  54:   mul r4.x, r7.y, l(0.250000)
  55:   mul r4.y, cb3[0].z, l(0.500000)
  56:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  57:   max r4.x, r4.y, r4.x
  58:   min r7.x, r5.w, r4.x
  59:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  60:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  61:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  62:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  63:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  64:   mov r2.w, l(1.000000)
  65:   dp4 r8.x, r8.xyzw, r2.xyzw
  66:   dp4 r8.y, r9.xyzw, r2.xyzw
  67:   dp4 r8.z, r7.xyzw, r2.xyzw
  68: else 
  69:   mov r2.w, l(1.000000)
  70:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  71:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  72:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  73: endif 
  74: add r7.xyz, r8.xyzx, v6.xyzx
  75: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: log r7.xyz, r7.xyzx
  77: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  78: exp r7.xyz, r7.xyzx
  79: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  80: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  81: lt r2.w, l(0.000000), cb2[2].w
  82: if_nz r2.w
  83:   dp3 r2.w, r5.xyzx, r5.xyzx
  84:   rsq r2.w, r2.w
  85:   mul r8.xyz, r2.wwww, r5.xyzx
  86:   mov r9.x, v3.w
  87:   mov r9.y, v4.w
  88:   mov r9.z, v5.w
  89:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  90:   div r10.xyz, r10.xyzx, r8.xyzx
  91:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  92:   div r11.xyz, r11.xyzx, r8.xyzx
  93:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  94:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  95:   min r2.w, r10.y, r10.x
  96:   min r2.w, r10.z, r2.w
  97:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  98:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  99: else 
 100:   mov r8.xyz, r5.xyzx
 101: endif 
 102: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 103: mul r2.w, r2.w, r4.w
 104: mul r2.w, r2.w, l(6.000000)
 105: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 106: add r4.x, r8.w, l(-1.000000)
 107: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 108: mul r4.x, r4.x, cb2[3].x
 109: mul r9.xyz, r8.xyzx, r4.xxxx
 110: lt r4.y, cb2[1].w, l(0.999990)
 111: if_nz r4.y
 112:   lt r4.y, l(0.000000), cb2[6].w
 113:   if_nz r4.y
 114:     dp3 r4.y, r5.xyzx, r5.xyzx
 115:     rsq r4.y, r4.y
 116:     mul r10.xyz, r4.yyyy, r5.xyzx
 117:     mov r11.x, v3.w
 118:     mov r11.y, v4.w
 119:     mov r11.z, v5.w
 120:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 121:     div r12.xyz, r12.xyzx, r10.xyzx
 122:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 123:     div r13.xyz, r13.xyzx, r10.xyzx
 124:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 125:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 126:     min r4.y, r12.y, r12.x
 127:     min r4.y, r12.z, r4.y
 128:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 129:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 130:   endif 
 131:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 132:   add r2.w, r5.w, l(-1.000000)
 133:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 134:   mul r2.w, r2.w, cb2[7].x
 135:   mul r5.xyz, r5.xyzx, r2.wwww
 136:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 137:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 138: endif 
 139: mul r5.xyz, r4.zzzz, r9.xyzx
 140: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 141: dp3 r2.w, r8.xyzx, r8.xyzx
 142: max r2.w, r2.w, l(0.001000)
 143: rsq r2.w, r2.w
 144: mul r8.xyz, r2.wwww, r8.xyzx
 145: dp3 r2.w, r2.xyzx, -r3.yzwy
 146: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 147: dp3_sat r2.x, r2.xyzx, r8.xyzx
 148: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 149: mul r2.z, r2.y, r2.y
 150: dp2 r2.z, r2.zzzz, r4.wwww
 151: add r2.z, r2.z, l(-0.500000)
 152: add r3.y, -r3.x, l(1.000000)
 153: mul r3.z, r3.y, r3.y
 154: mul r3.z, r3.z, r3.z
 155: mul r3.y, r3.y, r3.z
 156: mad r3.y, r2.z, r3.y, l(1.000000)
 157: add r3.z, -|r2.w|, l(1.000000)
 158: mul r3.w, r3.z, r3.z
 159: mul r3.w, r3.w, r3.w
 160: mul r3.z, r3.z, r3.w
 161: mad r2.z, r2.z, r3.z, l(1.000000)
 162: mul r2.z, r2.z, r3.y
 163: mul r3.y, r4.w, r4.w
 164: max r3.y, r3.y, l(0.002000)
 165: add r3.w, -r3.y, l(1.000000)
 166: mad r4.x, |r2.w|, r3.w, r3.y
 167: mad r3.w, r3.x, r3.w, r3.y
 168: mul r2.w, |r2.w|, r3.w
 169: mad r2.w, r3.x, r4.x, r2.w
 170: add r2.w, r2.w, l(0.000010)
 171: div r2.w, l(0.500000), r2.w
 172: mul r3.w, r3.y, r3.y
 173: mad r4.x, r2.x, r3.w, -r2.x
 174: mad r2.x, r4.x, r2.x, l(1.000000)
 175: mul r3.w, r3.w, l(0.318310)
 176: mad r2.x, r2.x, r2.x, l(0.000000)
 177: div r2.x, r3.w, r2.x
 178: mul r2.x, r2.x, r2.w
 179: mul r2.x, r2.x, l(3.141593)
 180: max r2.x, r2.x, l(0.000100)
 181: sqrt r2.x, r2.x
 182: mul r2.xz, r3.xxxx, r2.xxzx
 183: mul r2.w, r3.y, l(0.280000)
 184: mad r2.w, -r2.w, r4.w, l(1.000000)
 185: dp3 r3.x, r1.xyzx, r1.xyzx
 186: ne r3.x, r3.x, l(0.000000)
 187: and r3.x, r3.x, l(0x3f800000)
 188: mul r2.x, r2.x, r3.x
 189: add r1.w, -r1.w, l(1.000000)
 190: add_sat r0.x, r0.x, r1.w
 191: mul r3.xyw, r2.zzzz, r6.xyxz
 192: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 193: mul r4.xyz, r6.xyzx, r2.xxxx
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.x, r1.w, r1.w
 196: mul r2.x, r2.x, r2.x
 197: mul r1.w, r1.w, r2.x
 198: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 199: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 200: mul r2.xyz, r2.xyzx, r4.xyzx
 201: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 202: mul r2.xyz, r5.xyzx, r2.wwww
 203: add r3.xyw, -r1.xyxz, r0.xxxx
 204: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 205: mad o0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r3.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r4.w, r5.xyzx, r5.xyzx
  23: sqrt r4.w, r4.w
  24: add r4.w, -r3.w, r4.w
  25: mad r3.w, cb3[25].w, r4.w, r3.w
  26: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  27: eq r4.w, cb6[0].x, l(1.000000)
  28: if_nz r4.w
  29:   eq r4.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s5
  47: add r4.w, r4.w, -r5.x
  48: mad r3.w, r3.w, r4.w, r5.x
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r4.w, -cb0[9].y, l(1.000000)
  51: mad r4.w, r5.y, cb0[9].y, r4.w
  52: add r5.x, -r0.x, l(1.000000)
  53: dp3 r5.y, r3.xyzx, r2.xyzx
  54: add r5.y, r5.y, r5.y
  55: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  56: mul r6.xyz, r3.wwww, cb0[2].xyzx
  57: lt r3.w, l(0.000000), cb5[2].w
  58: if_nz r3.w
  59:   dp3 r3.w, r5.yzwy, r5.yzwy
  60:   rsq r3.w, r3.w
  61:   mul r7.xyz, r3.wwww, r5.yzwy
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r3.w, r8.y, r8.x
  69:   min r3.w, r8.z, r3.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.yzwy
  74: endif 
  75: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  76: mul r3.w, r3.w, r5.x
  77: mul r3.w, r3.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  79: add r6.w, r7.w, l(-1.000000)
  80: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  81: mul r6.w, r6.w, cb5[3].x
  82: mul r8.xyz, r7.xyzx, r6.wwww
  83: lt r7.w, cb5[1].w, l(0.999990)
  84: if_nz r7.w
  85:   lt r7.w, l(0.000000), cb5[6].w
  86:   if_nz r7.w
  87:     dp3 r7.w, r5.yzwy, r5.yzwy
  88:     rsq r7.w, r7.w
  89:     mul r9.xyz, r5.yzwy, r7.wwww
  90:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  91:     div r10.xyz, r10.xyzx, r9.xyzx
  92:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  93:     div r11.xyz, r11.xyzx, r9.xyzx
  94:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  95:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  96:     min r7.w, r10.y, r10.x
  97:     min r7.w, r10.z, r7.w
  98:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
  99:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 100:   endif 
 101:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 102:   add r3.w, r9.w, l(-1.000000)
 103:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 104:   mul r3.w, r3.w, cb5[7].x
 105:   mul r4.xyz, r9.xyzx, r3.wwww
 106:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 107:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 108: endif 
 109: mul r4.xyz, r4.wwww, r8.xyzx
 110: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 111: dp3 r2.w, r5.yzwy, r5.yzwy
 112: max r2.w, r2.w, l(0.001000)
 113: rsq r2.w, r2.w
 114: mul r5.yzw, r2.wwww, r5.yyzw
 115: dp3 r2.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r5.yzwy
 118: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r5.xxxx
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.y, -r3.x, l(1.000000)
 123: mul r3.z, r3.y, r3.y
 124: mul r3.z, r3.z, r3.z
 125: mul r3.y, r3.y, r3.z
 126: mad r3.y, r2.z, r3.y, l(1.000000)
 127: add r3.z, -|r2.w|, l(1.000000)
 128: mul r3.w, r3.z, r3.z
 129: mul r3.w, r3.w, r3.w
 130: mul r3.z, r3.z, r3.w
 131: mad r2.z, r2.z, r3.z, l(1.000000)
 132: mul r2.z, r2.z, r3.y
 133: mul r3.y, r5.x, r5.x
 134: max r3.y, r3.y, l(0.002000)
 135: add r3.w, -r3.y, l(1.000000)
 136: mad r4.w, |r2.w|, r3.w, r3.y
 137: mad r3.w, r3.x, r3.w, r3.y
 138: mul r2.w, |r2.w|, r3.w
 139: mad r2.w, r3.x, r4.w, r2.w
 140: add r2.w, r2.w, l(0.000010)
 141: div r2.w, l(0.500000), r2.w
 142: mul r3.w, r3.y, r3.y
 143: mad r4.w, r2.x, r3.w, -r2.x
 144: mad r2.x, r4.w, r2.x, l(1.000000)
 145: mul r3.w, r3.w, l(0.318310)
 146: mad r2.x, r2.x, r2.x, l(0.000000)
 147: div r2.x, r3.w, r2.x
 148: mul r2.x, r2.x, r2.w
 149: mul r2.x, r2.x, l(3.141593)
 150: max r2.x, r2.x, l(0.000100)
 151: sqrt r2.x, r2.x
 152: mul r2.xz, r3.xxxx, r2.xxzx
 153: mul r2.w, r3.y, l(0.280000)
 154: mad r2.w, -r2.w, r5.x, l(1.000000)
 155: dp3 r3.x, r1.xyzx, r1.xyzx
 156: ne r3.x, r3.x, l(0.000000)
 157: and r3.x, r3.x, l(0x3f800000)
 158: mul r2.x, r2.x, r3.x
 159: add r0.x, r0.x, -r1.w
 160: add_sat r0.x, r0.x, l(1.000000)
 161: mul r3.xyw, r2.zzzz, r6.xyxz
 162: mul r5.xyz, r6.xyzx, r2.xxxx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.x, r1.w, r1.w
 165: mul r2.x, r2.x, r2.x
 166: mul r1.w, r1.w, r2.x
 167: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 169: mul r2.xyz, r2.xyzx, r5.xyzx
 170: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 171: mul r2.xyz, r4.xyzx, r2.wwww
 172: add r3.xyw, -r1.xyxz, r0.xxxx
 173: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 174: mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 175: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 176: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: dp3 r2.w, v2.xyzx, v2.xyzx
  14: rsq r2.w, r2.w
  15: mul r3.xyz, r2.wwww, v2.xyzx
  16: mov r4.x, v3.w
  17: mov r4.y, v4.w
  18: mov r4.z, v5.w
  19: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r3.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  25: dp3 r4.w, r5.xyzx, r5.xyzx
  26: sqrt r4.w, r4.w
  27: add r4.w, -r3.w, r4.w
  28: mad r3.w, cb3[25].w, r4.w, r3.w
  29: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  30: eq r4.w, cb6[0].x, l(1.000000)
  31: if_nz r4.w
  32:   eq r4.w, cb6[0].y, l(1.000000)
  33:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  34:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  35:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  37:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  38:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  40:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r4.w, r5.y
  43:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  48: div r5.xy, v7.xyxx, v7.wwww
  49: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  50: add r4.w, r4.w, -r5.x
  51: mad r3.w, r3.w, r4.w, r5.x
  52: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r4.w, -cb0[9].y, l(1.000000)
  54: mad r4.w, r5.y, cb0[9].y, r4.w
  55: add r5.x, -r0.w, l(1.000000)
  56: dp3 r5.y, r3.xyzx, r2.xyzx
  57: add r5.y, r5.y, r5.y
  58: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  59: mul r6.xyz, r3.wwww, cb0[2].xyzx
  60: lt r3.w, l(0.000000), cb5[2].w
  61: if_nz r3.w
  62:   dp3 r3.w, r5.yzwy, r5.yzwy
  63:   rsq r3.w, r3.w
  64:   mul r7.xyz, r3.wwww, r5.yzwy
  65:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  66:   div r8.xyz, r8.xyzx, r7.xyzx
  67:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  68:   div r9.xyz, r9.xyzx, r7.xyzx
  69:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  70:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  71:   min r3.w, r8.y, r8.x
  72:   min r3.w, r8.z, r3.w
  73:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  74:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  75: else 
  76:   mov r7.xyz, r5.yzwy
  77: endif 
  78: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  79: mul r3.w, r3.w, r5.x
  80: mul r3.w, r3.w, l(6.000000)
  81: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  82: add r6.w, r7.w, l(-1.000000)
  83: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  84: mul r6.w, r6.w, cb5[3].x
  85: mul r8.xyz, r7.xyzx, r6.wwww
  86: lt r7.w, cb5[1].w, l(0.999990)
  87: if_nz r7.w
  88:   lt r7.w, l(0.000000), cb5[6].w
  89:   if_nz r7.w
  90:     dp3 r7.w, r5.yzwy, r5.yzwy
  91:     rsq r7.w, r7.w
  92:     mul r9.xyz, r5.yzwy, r7.wwww
  93:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  94:     div r10.xyz, r10.xyzx, r9.xyzx
  95:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:     min r7.w, r10.y, r10.x
 100:     min r7.w, r10.z, r7.w
 101:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 102:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 103:   endif 
 104:   sample_l r9.xyzw, r5.yzwy, t4.xyzw, s0, r3.w
 105:   add r3.w, r9.w, l(-1.000000)
 106:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 107:   mul r3.w, r3.w, cb5[7].x
 108:   mul r4.xyz, r9.xyzx, r3.wwww
 109:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 110:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 111: endif 
 112: mul r4.xyz, r4.wwww, r8.xyzx
 113: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 114: dp3 r2.w, r5.yzwy, r5.yzwy
 115: max r2.w, r2.w, l(0.001000)
 116: rsq r2.w, r2.w
 117: mul r5.yzw, r2.wwww, r5.yyzw
 118: dp3 r2.w, r2.xyzx, -r3.xyzx
 119: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 120: dp3_sat r2.x, r2.xyzx, r5.yzwy
 121: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 122: mul r2.z, r2.y, r2.y
 123: dp2 r2.z, r2.zzzz, r5.xxxx
 124: add r2.z, r2.z, l(-0.500000)
 125: add r3.y, -r3.x, l(1.000000)
 126: mul r3.z, r3.y, r3.y
 127: mul r3.z, r3.z, r3.z
 128: mul r3.y, r3.y, r3.z
 129: mad r3.y, r2.z, r3.y, l(1.000000)
 130: add r3.z, -|r2.w|, l(1.000000)
 131: mul r3.w, r3.z, r3.z
 132: mul r3.w, r3.w, r3.w
 133: mul r3.z, r3.z, r3.w
 134: mad r2.z, r2.z, r3.z, l(1.000000)
 135: mul r2.z, r2.z, r3.y
 136: mul r3.y, r5.x, r5.x
 137: max r3.y, r3.y, l(0.002000)
 138: add r3.w, -r3.y, l(1.000000)
 139: mad r4.w, |r2.w|, r3.w, r3.y
 140: mad r3.w, r3.x, r3.w, r3.y
 141: mul r2.w, |r2.w|, r3.w
 142: mad r2.w, r3.x, r4.w, r2.w
 143: add r2.w, r2.w, l(0.000010)
 144: div r2.w, l(0.500000), r2.w
 145: mul r3.w, r3.y, r3.y
 146: mad r4.w, r2.x, r3.w, -r2.x
 147: mad r2.x, r4.w, r2.x, l(1.000000)
 148: mul r3.w, r3.w, l(0.318310)
 149: mad r2.x, r2.x, r2.x, l(0.000000)
 150: div r2.x, r3.w, r2.x
 151: mul r2.x, r2.x, r2.w
 152: mul r2.x, r2.x, l(3.141593)
 153: max r2.x, r2.x, l(0.000100)
 154: sqrt r2.x, r2.x
 155: mul r2.xz, r3.xxxx, r2.xxzx
 156: mul r2.w, r3.y, l(0.280000)
 157: mad r2.w, -r2.w, r5.x, l(1.000000)
 158: dp3 r3.x, r0.xyzx, r0.xyzx
 159: ne r3.x, r3.x, l(0.000000)
 160: and r3.x, r3.x, l(0x3f800000)
 161: mul r2.x, r2.x, r3.x
 162: add r0.w, r0.w, -r1.w
 163: add_sat r0.w, r0.w, l(1.000000)
 164: mul r3.xyw, r2.zzzz, r6.xyxz
 165: mul r5.xyz, r6.xyzx, r2.xxxx
 166: add r1.w, -r2.y, l(1.000000)
 167: mul r2.x, r1.w, r1.w
 168: mul r2.x, r2.x, r2.x
 169: mul r1.w, r1.w, r2.x
 170: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 172: mul r2.xyz, r2.xyzx, r5.xyzx
 173: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 174: mul r2.xyz, r4.xyzx, r2.wwww
 175: add r3.xyw, -r0.xyxz, r0.wwww
 176: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 177: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 178: mov o0.w, l(1.000000)
 179: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r2.w, v2.xyzx, v2.xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, v2.xyzx
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r3.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r4.w, r5.xyzx, r5.xyzx
  37: sqrt r4.w, r4.w
  38: add r4.w, -r3.w, r4.w
  39: mad r3.w, cb3[25].w, r4.w, r3.w
  40: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  41: eq r4.w, cb6[0].x, l(1.000000)
  42: if_nz r4.w
  43:   eq r4.w, cb6[0].y, l(1.000000)
  44:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  46:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  48:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  49:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  51:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r4.w, r5.y
  54:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  59: div r5.xy, v7.xyxx, v7.wwww
  60: sample r5.xyzw, r5.xyxx, t2.xyzw, s5
  61: add r4.w, r4.w, -r5.x
  62: mad r3.w, r3.w, r4.w, r5.x
  63: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r4.w, -cb0[9].y, l(1.000000)
  65: mad r4.w, r5.y, cb0[9].y, r4.w
  66: add r5.x, -r0.w, l(1.000000)
  67: dp3 r5.y, r3.xyzx, r2.xyzx
  68: add r5.y, r5.y, r5.y
  69: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  70: mul r6.xyz, r3.wwww, cb0[2].xyzx
  71: lt r3.w, l(0.000000), cb5[2].w
  72: if_nz r3.w
  73:   dp3 r3.w, r5.yzwy, r5.yzwy
  74:   rsq r3.w, r3.w
  75:   mul r7.xyz, r3.wwww, r5.yzwy
  76:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  77:   div r8.xyz, r8.xyzx, r7.xyzx
  78:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  79:   div r9.xyz, r9.xyzx, r7.xyzx
  80:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  81:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  82:   min r3.w, r8.y, r8.x
  83:   min r3.w, r8.z, r3.w
  84:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  85:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  86: else 
  87:   mov r7.xyz, r5.yzwy
  88: endif 
  89: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  90: mul r3.w, r3.w, r5.x
  91: mul r3.w, r3.w, l(6.000000)
  92: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  93: add r6.w, r7.w, l(-1.000000)
  94: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  95: mul r6.w, r6.w, cb5[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb5[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb5[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 116:   add r3.w, r9.w, l(-1.000000)
 117:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 118:   mul r3.w, r3.w, cb5[7].x
 119:   mul r4.xyz, r9.xyzx, r3.wwww
 120:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 121:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 122: endif 
 123: mul r4.xyz, r4.wwww, r8.xyzx
 124: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 125: dp3 r2.w, r5.yzwy, r5.yzwy
 126: max r2.w, r2.w, l(0.001000)
 127: rsq r2.w, r2.w
 128: mul r5.yzw, r2.wwww, r5.yyzw
 129: dp3 r2.w, r2.xyzx, -r3.xyzx
 130: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 131: dp3_sat r2.x, r2.xyzx, r5.yzwy
 132: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 133: mul r2.z, r2.y, r2.y
 134: dp2 r2.z, r2.zzzz, r5.xxxx
 135: add r2.z, r2.z, l(-0.500000)
 136: add r3.y, -r3.x, l(1.000000)
 137: mul r3.z, r3.y, r3.y
 138: mul r3.z, r3.z, r3.z
 139: mul r3.y, r3.y, r3.z
 140: mad r3.y, r2.z, r3.y, l(1.000000)
 141: add r3.z, -|r2.w|, l(1.000000)
 142: mul r3.w, r3.z, r3.z
 143: mul r3.w, r3.w, r3.w
 144: mul r3.z, r3.z, r3.w
 145: mad r2.z, r2.z, r3.z, l(1.000000)
 146: mul r2.z, r2.z, r3.y
 147: mul r3.y, r5.x, r5.x
 148: max r3.y, r3.y, l(0.002000)
 149: add r3.w, -r3.y, l(1.000000)
 150: mad r4.w, |r2.w|, r3.w, r3.y
 151: mad r3.w, r3.x, r3.w, r3.y
 152: mul r2.w, |r2.w|, r3.w
 153: mad r2.w, r3.x, r4.w, r2.w
 154: add r2.w, r2.w, l(0.000010)
 155: div r2.w, l(0.500000), r2.w
 156: mul r3.w, r3.y, r3.y
 157: mad r4.w, r2.x, r3.w, -r2.x
 158: mad r2.x, r4.w, r2.x, l(1.000000)
 159: mul r3.w, r3.w, l(0.318310)
 160: mad r2.x, r2.x, r2.x, l(0.000000)
 161: div r2.x, r3.w, r2.x
 162: mul r2.x, r2.x, r2.w
 163: mul r2.x, r2.x, l(3.141593)
 164: max r2.x, r2.x, l(0.000100)
 165: sqrt r2.x, r2.x
 166: mul r2.xz, r3.xxxx, r2.xxzx
 167: mul r2.w, r3.y, l(0.280000)
 168: mad r2.w, -r2.w, r5.x, l(1.000000)
 169: dp3 r3.x, r0.xyzx, r0.xyzx
 170: ne r3.x, r3.x, l(0.000000)
 171: and r3.x, r3.x, l(0x3f800000)
 172: mul r2.x, r2.x, r3.x
 173: add r0.w, r0.w, -r1.w
 174: add_sat r0.w, r0.w, l(1.000000)
 175: mul r3.xyw, r2.zzzz, r6.xyxz
 176: mul r5.xyz, r6.xyzx, r2.xxxx
 177: add r1.w, -r2.y, l(1.000000)
 178: mul r2.x, r1.w, r1.w
 179: mul r2.x, r2.x, r2.x
 180: mul r1.w, r1.w, r2.x
 181: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 182: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 183: mul r2.xyz, r2.xyzx, r5.xyzx
 184: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 185: mul r2.xyz, r4.xyzx, r2.wwww
 186: add r3.xyw, -r0.xyxz, r0.wwww
 187: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 188: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 189: mov o0.w, l(1.000000)
 190: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 161 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "_EmissionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r2.w, v2.xyzx, v2.xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, v2.xyzx
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r3.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r4.w, r5.xyzx, r5.xyzx
  37: sqrt r4.w, r4.w
  38: add r4.w, -r3.w, r4.w
  39: mad r3.w, cb3[25].w, r4.w, r3.w
  40: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  41: eq r4.w, cb6[0].x, l(1.000000)
  42: if_nz r4.w
  43:   eq r4.w, cb6[0].y, l(1.000000)
  44:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  46:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  48:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  49:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  51:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r4.w, r5.y
  54:   sample r5.xyzw, r5.xzwx, t7.xyzw, s1
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  59: div r5.xy, v7.xyxx, v7.wwww
  60: sample r5.xyzw, r5.xyxx, t2.xyzw, s6
  61: add r4.w, r4.w, -r5.x
  62: mad r3.w, r3.w, r4.w, r5.x
  63: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r4.w, -cb0[9].y, l(1.000000)
  65: mad r4.w, r5.y, cb0[9].y, r4.w
  66: add r5.x, -r0.w, l(1.000000)
  67: dp3 r5.y, r3.xyzx, r2.xyzx
  68: add r5.y, r5.y, r5.y
  69: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  70: mul r6.xyz, r3.wwww, cb0[2].xyzx
  71: lt r3.w, l(0.000000), cb5[2].w
  72: if_nz r3.w
  73:   dp3 r3.w, r5.yzwy, r5.yzwy
  74:   rsq r3.w, r3.w
  75:   mul r7.xyz, r3.wwww, r5.yzwy
  76:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  77:   div r8.xyz, r8.xyzx, r7.xyzx
  78:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  79:   div r9.xyz, r9.xyzx, r7.xyzx
  80:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  81:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  82:   min r3.w, r8.y, r8.x
  83:   min r3.w, r8.z, r3.w
  84:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  85:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  86: else 
  87:   mov r7.xyz, r5.yzwy
  88: endif 
  89: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  90: mul r3.w, r3.w, r5.x
  91: mul r3.w, r3.w, l(6.000000)
  92: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
  93: add r6.w, r7.w, l(-1.000000)
  94: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  95: mul r6.w, r6.w, cb5[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb5[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb5[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
 116:   add r3.w, r9.w, l(-1.000000)
 117:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 118:   mul r3.w, r3.w, cb5[7].x
 119:   mul r4.xyz, r9.xyzx, r3.wwww
 120:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 121:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 122: endif 
 123: mul r4.xyz, r4.wwww, r8.xyzx
 124: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 125: dp3 r2.w, r5.yzwy, r5.yzwy
 126: max r2.w, r2.w, l(0.001000)
 127: rsq r2.w, r2.w
 128: mul r5.yzw, r2.wwww, r5.yyzw
 129: dp3 r2.w, r2.xyzx, -r3.xyzx
 130: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 131: dp3_sat r2.x, r2.xyzx, r5.yzwy
 132: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 133: mul r2.z, r2.y, r2.y
 134: dp2 r2.z, r2.zzzz, r5.xxxx
 135: add r2.z, r2.z, l(-0.500000)
 136: add r3.y, -r3.x, l(1.000000)
 137: mul r3.z, r3.y, r3.y
 138: mul r3.z, r3.z, r3.z
 139: mul r3.y, r3.y, r3.z
 140: mad r3.y, r2.z, r3.y, l(1.000000)
 141: add r3.z, -|r2.w|, l(1.000000)
 142: mul r3.w, r3.z, r3.z
 143: mul r3.w, r3.w, r3.w
 144: mul r3.z, r3.z, r3.w
 145: mad r2.z, r2.z, r3.z, l(1.000000)
 146: mul r2.z, r2.z, r3.y
 147: mul r3.y, r5.x, r5.x
 148: max r3.y, r3.y, l(0.002000)
 149: add r3.w, -r3.y, l(1.000000)
 150: mad r4.w, |r2.w|, r3.w, r3.y
 151: mad r3.w, r3.x, r3.w, r3.y
 152: mul r2.w, |r2.w|, r3.w
 153: mad r2.w, r3.x, r4.w, r2.w
 154: add r2.w, r2.w, l(0.000010)
 155: div r2.w, l(0.500000), r2.w
 156: mul r3.w, r3.y, r3.y
 157: mad r4.w, r2.x, r3.w, -r2.x
 158: mad r2.x, r4.w, r2.x, l(1.000000)
 159: mul r3.w, r3.w, l(0.318310)
 160: mad r2.x, r2.x, r2.x, l(0.000000)
 161: div r2.x, r3.w, r2.x
 162: mul r2.x, r2.x, r2.w
 163: mul r2.x, r2.x, l(3.141593)
 164: max r2.x, r2.x, l(0.000100)
 165: sqrt r2.x, r2.x
 166: mul r2.xz, r3.xxxx, r2.xxzx
 167: mul r2.w, r3.y, l(0.280000)
 168: mad r2.w, -r2.w, r5.x, l(1.000000)
 169: dp3 r3.x, r0.xyzx, r0.xyzx
 170: ne r3.x, r3.x, l(0.000000)
 171: and r3.x, r3.x, l(0x3f800000)
 172: mul r2.x, r2.x, r3.x
 173: add r0.w, r0.w, -r1.w
 174: add_sat r0.w, r0.w, l(1.000000)
 175: mul r3.xyw, r2.zzzz, r6.xyxz
 176: mul r5.xyz, r6.xyzx, r2.xxxx
 177: add r1.w, -r2.y, l(1.000000)
 178: mul r2.x, r1.w, r1.w
 179: mul r2.x, r2.x, r2.x
 180: mul r1.w, r1.w, r2.x
 181: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 182: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 183: mul r2.xyz, r2.xyzx, r5.xyzx
 184: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 185: mul r2.xyz, r4.xyzx, r2.wwww
 186: add r3.xyw, -r0.xyxz, r0.wwww
 187: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 188: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 189: sample r1.xyzw, v1.xyxx, t4.xyzw, s5
 190: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 148 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r3.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r4.w, r5.xyzx, r5.xyzx
  23: sqrt r4.w, r4.w
  24: add r4.w, -r3.w, r4.w
  25: mad r3.w, cb3[25].w, r4.w, r3.w
  26: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  27: eq r4.w, cb6[0].x, l(1.000000)
  28: if_nz r4.w
  29:   eq r4.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  47: add r4.w, r4.w, -r5.x
  48: mad r3.w, r3.w, r4.w, r5.x
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r4.w, -cb0[9].y, l(1.000000)
  51: mad r4.w, r5.y, cb0[9].y, r4.w
  52: add r5.x, -r0.x, l(1.000000)
  53: dp3 r5.y, r3.xyzx, r2.xyzx
  54: add r5.y, r5.y, r5.y
  55: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  56: mul r6.xyz, r3.wwww, cb0[2].xyzx
  57: lt r3.w, l(0.000000), cb5[2].w
  58: if_nz r3.w
  59:   dp3 r3.w, r5.yzwy, r5.yzwy
  60:   rsq r3.w, r3.w
  61:   mul r7.xyz, r3.wwww, r5.yzwy
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r3.w, r8.y, r8.x
  69:   min r3.w, r8.z, r3.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.yzwy
  74: endif 
  75: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  76: mul r3.w, r3.w, r5.x
  77: mul r3.w, r3.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  79: add r6.w, r7.w, l(-1.000000)
  80: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  81: mul r6.w, r6.w, cb5[3].x
  82: mul r8.xyz, r7.xyzx, r6.wwww
  83: lt r7.w, cb5[1].w, l(0.999990)
  84: if_nz r7.w
  85:   lt r7.w, l(0.000000), cb5[6].w
  86:   if_nz r7.w
  87:     dp3 r7.w, r5.yzwy, r5.yzwy
  88:     rsq r7.w, r7.w
  89:     mul r9.xyz, r5.yzwy, r7.wwww
  90:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  91:     div r10.xyz, r10.xyzx, r9.xyzx
  92:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  93:     div r11.xyz, r11.xyzx, r9.xyzx
  94:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  95:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  96:     min r7.w, r10.y, r10.x
  97:     min r7.w, r10.z, r7.w
  98:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
  99:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 100:   endif 
 101:   sample_l r9.xyzw, r5.yzwy, t4.xyzw, s0, r3.w
 102:   add r3.w, r9.w, l(-1.000000)
 103:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 104:   mul r3.w, r3.w, cb5[7].x
 105:   mul r4.xyz, r9.xyzx, r3.wwww
 106:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 107:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 108: endif 
 109: mul r4.xyz, r4.wwww, r8.xyzx
 110: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 111: dp3 r2.w, r5.yzwy, r5.yzwy
 112: max r2.w, r2.w, l(0.001000)
 113: rsq r2.w, r2.w
 114: mul r5.yzw, r2.wwww, r5.yyzw
 115: dp3 r2.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r5.yzwy
 118: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r5.xxxx
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.y, -r3.x, l(1.000000)
 123: mul r3.z, r3.y, r3.y
 124: mul r3.z, r3.z, r3.z
 125: mul r3.y, r3.y, r3.z
 126: mad r3.y, r2.z, r3.y, l(1.000000)
 127: add r3.z, -|r2.w|, l(1.000000)
 128: mul r3.w, r3.z, r3.z
 129: mul r3.w, r3.w, r3.w
 130: mul r3.z, r3.z, r3.w
 131: mad r2.z, r2.z, r3.z, l(1.000000)
 132: mul r2.z, r2.z, r3.y
 133: mul r3.y, r5.x, r5.x
 134: max r3.y, r3.y, l(0.002000)
 135: add r3.w, -r3.y, l(1.000000)
 136: mad r4.w, |r2.w|, r3.w, r3.y
 137: mad r3.w, r3.x, r3.w, r3.y
 138: mul r2.w, |r2.w|, r3.w
 139: mad r2.w, r3.x, r4.w, r2.w
 140: add r2.w, r2.w, l(0.000010)
 141: div r2.w, l(0.500000), r2.w
 142: mul r3.w, r3.y, r3.y
 143: mad r4.w, r2.x, r3.w, -r2.x
 144: mad r2.x, r4.w, r2.x, l(1.000000)
 145: mul r3.w, r3.w, l(0.318310)
 146: mad r2.x, r2.x, r2.x, l(0.000000)
 147: div r2.x, r3.w, r2.x
 148: mul r2.x, r2.x, r2.w
 149: mul r2.x, r2.x, l(3.141593)
 150: max r2.x, r2.x, l(0.000100)
 151: sqrt r2.x, r2.x
 152: mul r2.xz, r3.xxxx, r2.xxzx
 153: mul r2.w, r3.y, l(0.280000)
 154: mad r2.w, -r2.w, r5.x, l(1.000000)
 155: dp3 r3.x, r1.xyzx, r1.xyzx
 156: ne r3.x, r3.x, l(0.000000)
 157: and r3.x, r3.x, l(0x3f800000)
 158: mul r2.x, r2.x, r3.x
 159: add r0.x, r0.x, -r1.w
 160: add_sat r0.x, r0.x, l(1.000000)
 161: mul r3.xyw, r2.zzzz, r6.xyxz
 162: mul r5.xyz, r6.xyzx, r2.xxxx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.x, r1.w, r1.w
 165: mul r2.x, r2.x, r2.x
 166: mul r1.w, r1.w, r2.x
 167: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 169: mul r2.xyz, r2.xyzx, r5.xyzx
 170: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 171: mul r2.xyz, r4.xyzx, r2.wwww
 172: add r3.xyw, -r1.xyxz, r0.xxxx
 173: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 174: mad o0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 177 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r4.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r5.x, r5.xyzx, r5.xyzx
  23: sqrt r5.x, r5.x
  24: add r5.x, -r4.w, r5.x
  25: mad r4.w, cb3[25].w, r5.x, r4.w
  26: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  27: eq r5.x, cb6[0].x, l(1.000000)
  28: if_nz r5.x
  29:   eq r5.y, cb6[0].y, l(1.000000)
  30:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  32:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  33:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  34:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  35:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  36:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  37:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  38:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r6.x, r5.z, r5.y
  40:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  45: div r5.zw, v7.xxxy, v7.wwww
  46: sample r6.xyzw, r5.zwzz, t1.xyzw, s5
  47: add r5.y, r5.y, -r6.x
  48: mad r4.w, r4.w, r5.y, r6.x
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: add r5.z, -r0.x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: max r3.y, r3.y, l(0.002000)
 171: add r3.w, -r3.y, l(1.000000)
 172: mad r4.w, |r2.w|, r3.w, r3.y
 173: mad r3.w, r3.x, r3.w, r3.y
 174: mul r2.w, |r2.w|, r3.w
 175: mad r2.w, r3.x, r4.w, r2.w
 176: add r2.w, r2.w, l(0.000010)
 177: div r2.w, l(0.500000), r2.w
 178: mul r3.w, r3.y, r3.y
 179: mad r4.w, r2.x, r3.w, -r2.x
 180: mad r2.x, r4.w, r2.x, l(1.000000)
 181: mul r3.w, r3.w, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.w, r2.x
 184: mul r2.x, r2.x, r2.w
 185: mul r2.x, r2.x, l(3.141593)
 186: max r2.x, r2.x, l(0.000100)
 187: sqrt r2.x, r2.x
 188: mul r2.xz, r3.xxxx, r2.xxzx
 189: mul r2.w, r3.y, l(0.280000)
 190: mad r2.w, -r2.w, r5.z, l(1.000000)
 191: dp3 r3.x, r1.xyzx, r1.xyzx
 192: ne r3.x, r3.x, l(0.000000)
 193: and r3.x, r3.x, l(0x3f800000)
 194: mul r2.x, r2.x, r3.x
 195: add r0.x, r0.x, -r1.w
 196: add_sat r0.x, r0.x, l(1.000000)
 197: mul r3.xyw, r2.zzzz, r7.xyxz
 198: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 199: mul r5.xyz, r7.xyzx, r2.xxxx
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.x, r1.w, r1.w
 202: mul r2.x, r2.x, r2.x
 203: mul r1.w, r1.w, r2.x
 204: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 206: mul r2.xyz, r2.xyzx, r5.xyzx
 207: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 208: mul r2.xyz, r4.xyzx, r2.wwww
 209: add r3.xyw, -r1.xyxz, r0.xxxx
 210: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 211: mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 212: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 213: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: dp3 r3.x, v2.xyzx, v2.xyzx
  14: rsq r3.x, r3.x
  15: mul r3.yzw, r3.xxxx, v2.xxyz
  16: mov r4.x, v3.w
  17: mov r4.y, v4.w
  18: mov r4.z, v5.w
  19: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r4.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  25: dp3 r5.x, r5.xyzx, r5.xyzx
  26: sqrt r5.x, r5.x
  27: add r5.x, -r4.w, r5.x
  28: mad r4.w, cb3[25].w, r5.x, r4.w
  29: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  30: eq r5.x, cb6[0].x, l(1.000000)
  31: if_nz r5.x
  32:   eq r5.y, cb6[0].y, l(1.000000)
  33:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  34:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  35:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  36:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  37:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  38:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  39:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  40:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  41:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  42:   max r6.x, r5.z, r5.y
  43:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  44: else 
  45:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  48: div r5.zw, v7.xxxy, v7.wwww
  49: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  50: add r5.y, r5.y, -r6.x
  51: mad r4.w, r4.w, r5.y, r6.x
  52: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r5.y, -cb0[9].y, l(1.000000)
  54: mad r5.y, r6.y, cb0[9].y, r5.y
  55: add r5.z, -r0.w, l(1.000000)
  56: dp3 r5.w, r3.yzwy, r2.xyzx
  57: add r5.w, r5.w, r5.w
  58: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  59: mul r7.xyz, r4.wwww, cb0[2].xyzx
  60: if_nz r5.x
  61:   eq r4.w, cb6[0].y, l(1.000000)
  62:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  63:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  64:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  65:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  66:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  67:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  68:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  69:   mul r4.w, r8.y, l(0.250000)
  70:   mul r5.x, cb6[0].z, l(0.500000)
  71:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  72:   max r4.w, r4.w, r5.x
  73:   min r8.x, r5.w, r4.w
  74:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  75:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  76:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  77:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  78:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  79:   mov r2.w, l(1.000000)
  80:   dp4 r9.x, r9.xyzw, r2.xyzw
  81:   dp4 r9.y, r10.xyzw, r2.xyzw
  82:   dp4 r9.z, r8.xyzw, r2.xyzw
  83: else 
  84:   mov r2.w, l(1.000000)
  85:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  86:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  87:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  88: endif 
  89: add r8.xyz, r9.xyzx, v6.xyzx
  90: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  91: log r8.xyz, r8.xyzx
  92: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  93: exp r8.xyz, r8.xyzx
  94: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  95: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  96: lt r2.w, l(0.000000), cb5[2].w
  97: if_nz r2.w
  98:   dp3 r2.w, r6.xyzx, r6.xyzx
  99:   rsq r2.w, r2.w
 100:   mul r9.xyz, r2.wwww, r6.xyzx
 101:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 102:   div r10.xyz, r10.xyzx, r9.xyzx
 103:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 104:   div r11.xyz, r11.xyzx, r9.xyzx
 105:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 106:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 107:   min r2.w, r10.y, r10.x
 108:   min r2.w, r10.z, r2.w
 109:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 110:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 111: else 
 112:   mov r9.xyz, r6.xyzx
 113: endif 
 114: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 115: mul r2.w, r2.w, r5.z
 116: mul r2.w, r2.w, l(6.000000)
 117: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 118: add r4.w, r9.w, l(-1.000000)
 119: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 120: mul r4.w, r4.w, cb5[3].x
 121: mul r10.xyz, r9.xyzx, r4.wwww
 122: lt r5.x, cb5[1].w, l(0.999990)
 123: if_nz r5.x
 124:   lt r5.x, l(0.000000), cb5[6].w
 125:   if_nz r5.x
 126:     dp3 r5.x, r6.xyzx, r6.xyzx
 127:     rsq r5.x, r5.x
 128:     mul r11.xyz, r5.xxxx, r6.xyzx
 129:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 130:     div r12.xyz, r12.xyzx, r11.xyzx
 131:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 132:     div r13.xyz, r13.xyzx, r11.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r5.x, r12.y, r12.x
 136:     min r5.x, r12.z, r5.x
 137:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 138:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 139:   endif 
 140:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 141:   add r2.w, r6.w, l(-1.000000)
 142:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 143:   mul r2.w, r2.w, cb5[7].x
 144:   mul r4.xyz, r6.xyzx, r2.wwww
 145:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 146:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 147: endif 
 148: mul r4.xyz, r5.yyyy, r10.xyzx
 149: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 150: dp3 r2.w, r6.xyzx, r6.xyzx
 151: max r2.w, r2.w, l(0.001000)
 152: rsq r2.w, r2.w
 153: mul r6.xyz, r2.wwww, r6.xyzx
 154: dp3 r2.w, r2.xyzx, -r3.yzwy
 155: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 156: dp3_sat r2.x, r2.xyzx, r6.xyzx
 157: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 158: mul r2.z, r2.y, r2.y
 159: dp2 r2.z, r2.zzzz, r5.zzzz
 160: add r2.z, r2.z, l(-0.500000)
 161: add r3.y, -r3.x, l(1.000000)
 162: mul r3.z, r3.y, r3.y
 163: mul r3.z, r3.z, r3.z
 164: mul r3.y, r3.y, r3.z
 165: mad r3.y, r2.z, r3.y, l(1.000000)
 166: add r3.z, -|r2.w|, l(1.000000)
 167: mul r3.w, r3.z, r3.z
 168: mul r3.w, r3.w, r3.w
 169: mul r3.z, r3.z, r3.w
 170: mad r2.z, r2.z, r3.z, l(1.000000)
 171: mul r2.z, r2.z, r3.y
 172: mul r3.y, r5.z, r5.z
 173: max r3.y, r3.y, l(0.002000)
 174: add r3.w, -r3.y, l(1.000000)
 175: mad r4.w, |r2.w|, r3.w, r3.y
 176: mad r3.w, r3.x, r3.w, r3.y
 177: mul r2.w, |r2.w|, r3.w
 178: mad r2.w, r3.x, r4.w, r2.w
 179: add r2.w, r2.w, l(0.000010)
 180: div r2.w, l(0.500000), r2.w
 181: mul r3.w, r3.y, r3.y
 182: mad r4.w, r2.x, r3.w, -r2.x
 183: mad r2.x, r4.w, r2.x, l(1.000000)
 184: mul r3.w, r3.w, l(0.318310)
 185: mad r2.x, r2.x, r2.x, l(0.000000)
 186: div r2.x, r3.w, r2.x
 187: mul r2.x, r2.x, r2.w
 188: mul r2.x, r2.x, l(3.141593)
 189: max r2.x, r2.x, l(0.000100)
 190: sqrt r2.x, r2.x
 191: mul r2.xz, r3.xxxx, r2.xxzx
 192: mul r2.w, r3.y, l(0.280000)
 193: mad r2.w, -r2.w, r5.z, l(1.000000)
 194: dp3 r3.x, r0.xyzx, r0.xyzx
 195: ne r3.x, r3.x, l(0.000000)
 196: and r3.x, r3.x, l(0x3f800000)
 197: mul r2.x, r2.x, r3.x
 198: add r0.w, r0.w, -r1.w
 199: add_sat r0.w, r0.w, l(1.000000)
 200: mul r3.xyw, r2.zzzz, r7.xyxz
 201: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 202: mul r5.xyz, r7.xyzx, r2.xxxx
 203: add r1.w, -r2.y, l(1.000000)
 204: mul r2.x, r1.w, r1.w
 205: mul r2.x, r2.x, r2.x
 206: mul r1.w, r1.w, r2.x
 207: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 209: mul r2.xyz, r2.xyzx, r5.xyzx
 210: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 211: mul r2.xyz, r4.xyzx, r2.wwww
 212: add r3.xyw, -r0.xyxz, r0.wwww
 213: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 214: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 215: mov o0.w, l(1.000000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r3.x, v2.xyzx, v2.xyzx
  25: rsq r3.x, r3.x
  26: mul r3.yzw, r3.xxxx, v2.xxyz
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r4.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r5.x, r5.xyzx, r5.xyzx
  37: sqrt r5.x, r5.x
  38: add r5.x, -r4.w, r5.x
  39: mad r4.w, cb3[25].w, r5.x, r4.w
  40: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  41: eq r5.x, cb6[0].x, l(1.000000)
  42: if_nz r5.x
  43:   eq r5.y, cb6[0].y, l(1.000000)
  44:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  46:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  47:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  48:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  49:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  50:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  51:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  52:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r6.x, r5.z, r5.y
  54:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  55: else 
  56:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  59: div r5.zw, v7.xxxy, v7.wwww
  60: sample r6.xyzw, r5.zwzz, t2.xyzw, s5
  61: add r5.y, r5.y, -r6.x
  62: mad r4.w, r4.w, r5.y, r6.x
  63: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r5.y, -cb0[9].y, l(1.000000)
  65: mad r5.y, r6.y, cb0[9].y, r5.y
  66: add r5.z, -r0.w, l(1.000000)
  67: dp3 r5.w, r3.yzwy, r2.xyzx
  68: add r5.w, r5.w, r5.w
  69: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  70: mul r7.xyz, r4.wwww, cb0[2].xyzx
  71: if_nz r5.x
  72:   eq r4.w, cb6[0].y, l(1.000000)
  73:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  74:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  75:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  76:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  77:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  78:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  79:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  80:   mul r4.w, r8.y, l(0.250000)
  81:   mul r5.x, cb6[0].z, l(0.500000)
  82:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  83:   max r4.w, r4.w, r5.x
  84:   min r8.x, r5.w, r4.w
  85:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  86:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  87:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  88:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  89:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  90:   mov r2.w, l(1.000000)
  91:   dp4 r9.x, r9.xyzw, r2.xyzw
  92:   dp4 r9.y, r10.xyzw, r2.xyzw
  93:   dp4 r9.z, r8.xyzw, r2.xyzw
  94: else 
  95:   mov r2.w, l(1.000000)
  96:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  97:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  98:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  99: endif 
 100: add r8.xyz, r9.xyzx, v6.xyzx
 101: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 102: log r8.xyz, r8.xyzx
 103: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
 104: exp r8.xyz, r8.xyzx
 105: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
 106: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: lt r2.w, l(0.000000), cb5[2].w
 108: if_nz r2.w
 109:   dp3 r2.w, r6.xyzx, r6.xyzx
 110:   rsq r2.w, r2.w
 111:   mul r9.xyz, r2.wwww, r6.xyzx
 112:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 113:   div r10.xyz, r10.xyzx, r9.xyzx
 114:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 115:   div r11.xyz, r11.xyzx, r9.xyzx
 116:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 117:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 118:   min r2.w, r10.y, r10.x
 119:   min r2.w, r10.z, r2.w
 120:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 121:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 122: else 
 123:   mov r9.xyz, r6.xyzx
 124: endif 
 125: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 126: mul r2.w, r2.w, r5.z
 127: mul r2.w, r2.w, l(6.000000)
 128: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 129: add r4.w, r9.w, l(-1.000000)
 130: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 131: mul r4.w, r4.w, cb5[3].x
 132: mul r10.xyz, r9.xyzx, r4.wwww
 133: lt r5.x, cb5[1].w, l(0.999990)
 134: if_nz r5.x
 135:   lt r5.x, l(0.000000), cb5[6].w
 136:   if_nz r5.x
 137:     dp3 r5.x, r6.xyzx, r6.xyzx
 138:     rsq r5.x, r5.x
 139:     mul r11.xyz, r5.xxxx, r6.xyzx
 140:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 141:     div r12.xyz, r12.xyzx, r11.xyzx
 142:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 143:     div r13.xyz, r13.xyzx, r11.xyzx
 144:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 145:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 146:     min r5.x, r12.y, r12.x
 147:     min r5.x, r12.z, r5.x
 148:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 149:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 150:   endif 
 151:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 152:   add r2.w, r6.w, l(-1.000000)
 153:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 154:   mul r2.w, r2.w, cb5[7].x
 155:   mul r4.xyz, r6.xyzx, r2.wwww
 156:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 157:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 158: endif 
 159: mul r4.xyz, r5.yyyy, r10.xyzx
 160: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 161: dp3 r2.w, r6.xyzx, r6.xyzx
 162: max r2.w, r2.w, l(0.001000)
 163: rsq r2.w, r2.w
 164: mul r6.xyz, r2.wwww, r6.xyzx
 165: dp3 r2.w, r2.xyzx, -r3.yzwy
 166: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 167: dp3_sat r2.x, r2.xyzx, r6.xyzx
 168: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 169: mul r2.z, r2.y, r2.y
 170: dp2 r2.z, r2.zzzz, r5.zzzz
 171: add r2.z, r2.z, l(-0.500000)
 172: add r3.y, -r3.x, l(1.000000)
 173: mul r3.z, r3.y, r3.y
 174: mul r3.z, r3.z, r3.z
 175: mul r3.y, r3.y, r3.z
 176: mad r3.y, r2.z, r3.y, l(1.000000)
 177: add r3.z, -|r2.w|, l(1.000000)
 178: mul r3.w, r3.z, r3.z
 179: mul r3.w, r3.w, r3.w
 180: mul r3.z, r3.z, r3.w
 181: mad r2.z, r2.z, r3.z, l(1.000000)
 182: mul r2.z, r2.z, r3.y
 183: mul r3.y, r5.z, r5.z
 184: max r3.y, r3.y, l(0.002000)
 185: add r3.w, -r3.y, l(1.000000)
 186: mad r4.w, |r2.w|, r3.w, r3.y
 187: mad r3.w, r3.x, r3.w, r3.y
 188: mul r2.w, |r2.w|, r3.w
 189: mad r2.w, r3.x, r4.w, r2.w
 190: add r2.w, r2.w, l(0.000010)
 191: div r2.w, l(0.500000), r2.w
 192: mul r3.w, r3.y, r3.y
 193: mad r4.w, r2.x, r3.w, -r2.x
 194: mad r2.x, r4.w, r2.x, l(1.000000)
 195: mul r3.w, r3.w, l(0.318310)
 196: mad r2.x, r2.x, r2.x, l(0.000000)
 197: div r2.x, r3.w, r2.x
 198: mul r2.x, r2.x, r2.w
 199: mul r2.x, r2.x, l(3.141593)
 200: max r2.x, r2.x, l(0.000100)
 201: sqrt r2.x, r2.x
 202: mul r2.xz, r3.xxxx, r2.xxzx
 203: mul r2.w, r3.y, l(0.280000)
 204: mad r2.w, -r2.w, r5.z, l(1.000000)
 205: dp3 r3.x, r0.xyzx, r0.xyzx
 206: ne r3.x, r3.x, l(0.000000)
 207: and r3.x, r3.x, l(0x3f800000)
 208: mul r2.x, r2.x, r3.x
 209: add r0.w, r0.w, -r1.w
 210: add_sat r0.w, r0.w, l(1.000000)
 211: mul r3.xyw, r2.zzzz, r7.xyxz
 212: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 213: mul r5.xyz, r7.xyzx, r2.xxxx
 214: add r1.w, -r2.y, l(1.000000)
 215: mul r2.x, r1.w, r1.w
 216: mul r2.x, r2.x, r2.x
 217: mul r1.w, r1.w, r2.x
 218: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 219: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 220: mul r2.xyz, r2.xyzx, r5.xyzx
 221: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 222: mul r2.xyz, r4.xyzx, r2.wwww
 223: add r3.xyw, -r0.xyxz, r0.wwww
 224: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 225: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 226: mov o0.w, l(1.000000)
 227: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 189 math, 15 temp registers, 9 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "_EmissionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r3.x, v2.xyzx, v2.xyzx
  25: rsq r3.x, r3.x
  26: mul r3.yzw, r3.xxxx, v2.xxyz
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r4.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r5.x, r5.xyzx, r5.xyzx
  37: sqrt r5.x, r5.x
  38: add r5.x, -r4.w, r5.x
  39: mad r4.w, cb3[25].w, r5.x, r4.w
  40: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  41: eq r5.x, cb6[0].x, l(1.000000)
  42: if_nz r5.x
  43:   eq r5.y, cb6[0].y, l(1.000000)
  44:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  46:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  47:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  48:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  49:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  50:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  51:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  52:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r6.x, r5.z, r5.y
  54:   sample r6.xyzw, r6.xzwx, t7.xyzw, s1
  55: else 
  56:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  59: div r5.zw, v7.xxxy, v7.wwww
  60: sample r6.xyzw, r5.zwzz, t2.xyzw, s6
  61: add r5.y, r5.y, -r6.x
  62: mad r4.w, r4.w, r5.y, r6.x
  63: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r5.y, -cb0[9].y, l(1.000000)
  65: mad r5.y, r6.y, cb0[9].y, r5.y
  66: add r5.z, -r0.w, l(1.000000)
  67: dp3 r5.w, r3.yzwy, r2.xyzx
  68: add r5.w, r5.w, r5.w
  69: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  70: mul r7.xyz, r4.wwww, cb0[2].xyzx
  71: if_nz r5.x
  72:   eq r4.w, cb6[0].y, l(1.000000)
  73:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  74:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  75:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  76:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  77:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  78:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  79:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  80:   mul r4.w, r8.y, l(0.250000)
  81:   mul r5.x, cb6[0].z, l(0.500000)
  82:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  83:   max r4.w, r4.w, r5.x
  84:   min r8.x, r5.w, r4.w
  85:   sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  86:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  87:   sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  88:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  89:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  90:   mov r2.w, l(1.000000)
  91:   dp4 r9.x, r9.xyzw, r2.xyzw
  92:   dp4 r9.y, r10.xyzw, r2.xyzw
  93:   dp4 r9.z, r8.xyzw, r2.xyzw
  94: else 
  95:   mov r2.w, l(1.000000)
  96:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  97:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  98:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  99: endif 
 100: add r8.xyz, r9.xyzx, v6.xyzx
 101: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 102: log r8.xyz, r8.xyzx
 103: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
 104: exp r8.xyz, r8.xyzx
 105: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
 106: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: lt r2.w, l(0.000000), cb5[2].w
 108: if_nz r2.w
 109:   dp3 r2.w, r6.xyzx, r6.xyzx
 110:   rsq r2.w, r2.w
 111:   mul r9.xyz, r2.wwww, r6.xyzx
 112:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 113:   div r10.xyz, r10.xyzx, r9.xyzx
 114:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 115:   div r11.xyz, r11.xyzx, r9.xyzx
 116:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 117:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 118:   min r2.w, r10.y, r10.x
 119:   min r2.w, r10.z, r2.w
 120:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 121:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 122: else 
 123:   mov r9.xyz, r6.xyzx
 124: endif 
 125: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 126: mul r2.w, r2.w, r5.z
 127: mul r2.w, r2.w, l(6.000000)
 128: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
 129: add r4.w, r9.w, l(-1.000000)
 130: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 131: mul r4.w, r4.w, cb5[3].x
 132: mul r10.xyz, r9.xyzx, r4.wwww
 133: lt r5.x, cb5[1].w, l(0.999990)
 134: if_nz r5.x
 135:   lt r5.x, l(0.000000), cb5[6].w
 136:   if_nz r5.x
 137:     dp3 r5.x, r6.xyzx, r6.xyzx
 138:     rsq r5.x, r5.x
 139:     mul r11.xyz, r5.xxxx, r6.xyzx
 140:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 141:     div r12.xyz, r12.xyzx, r11.xyzx
 142:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 143:     div r13.xyz, r13.xyzx, r11.xyzx
 144:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 145:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 146:     min r5.x, r12.y, r12.x
 147:     min r5.x, r12.z, r5.x
 148:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 149:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 150:   endif 
 151:   sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
 152:   add r2.w, r6.w, l(-1.000000)
 153:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 154:   mul r2.w, r2.w, cb5[7].x
 155:   mul r4.xyz, r6.xyzx, r2.wwww
 156:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 157:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 158: endif 
 159: mul r4.xyz, r5.yyyy, r10.xyzx
 160: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 161: dp3 r2.w, r6.xyzx, r6.xyzx
 162: max r2.w, r2.w, l(0.001000)
 163: rsq r2.w, r2.w
 164: mul r6.xyz, r2.wwww, r6.xyzx
 165: dp3 r2.w, r2.xyzx, -r3.yzwy
 166: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 167: dp3_sat r2.x, r2.xyzx, r6.xyzx
 168: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 169: mul r2.z, r2.y, r2.y
 170: dp2 r2.z, r2.zzzz, r5.zzzz
 171: add r2.z, r2.z, l(-0.500000)
 172: add r3.y, -r3.x, l(1.000000)
 173: mul r3.z, r3.y, r3.y
 174: mul r3.z, r3.z, r3.z
 175: mul r3.y, r3.y, r3.z
 176: mad r3.y, r2.z, r3.y, l(1.000000)
 177: add r3.z, -|r2.w|, l(1.000000)
 178: mul r3.w, r3.z, r3.z
 179: mul r3.w, r3.w, r3.w
 180: mul r3.z, r3.z, r3.w
 181: mad r2.z, r2.z, r3.z, l(1.000000)
 182: mul r2.z, r2.z, r3.y
 183: mul r3.y, r5.z, r5.z
 184: max r3.y, r3.y, l(0.002000)
 185: add r3.w, -r3.y, l(1.000000)
 186: mad r4.w, |r2.w|, r3.w, r3.y
 187: mad r3.w, r3.x, r3.w, r3.y
 188: mul r2.w, |r2.w|, r3.w
 189: mad r2.w, r3.x, r4.w, r2.w
 190: add r2.w, r2.w, l(0.000010)
 191: div r2.w, l(0.500000), r2.w
 192: mul r3.w, r3.y, r3.y
 193: mad r4.w, r2.x, r3.w, -r2.x
 194: mad r2.x, r4.w, r2.x, l(1.000000)
 195: mul r3.w, r3.w, l(0.318310)
 196: mad r2.x, r2.x, r2.x, l(0.000000)
 197: div r2.x, r3.w, r2.x
 198: mul r2.x, r2.x, r2.w
 199: mul r2.x, r2.x, l(3.141593)
 200: max r2.x, r2.x, l(0.000100)
 201: sqrt r2.x, r2.x
 202: mul r2.xz, r3.xxxx, r2.xxzx
 203: mul r2.w, r3.y, l(0.280000)
 204: mad r2.w, -r2.w, r5.z, l(1.000000)
 205: dp3 r3.x, r0.xyzx, r0.xyzx
 206: ne r3.x, r3.x, l(0.000000)
 207: and r3.x, r3.x, l(0x3f800000)
 208: mul r2.x, r2.x, r3.x
 209: add r0.w, r0.w, -r1.w
 210: add_sat r0.w, r0.w, l(1.000000)
 211: mul r3.xyw, r2.zzzz, r7.xyxz
 212: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 213: mul r5.xyz, r7.xyzx, r2.xxxx
 214: add r1.w, -r2.y, l(1.000000)
 215: mul r2.x, r1.w, r1.w
 216: mul r2.x, r2.x, r2.x
 217: mul r1.w, r1.w, r2.x
 218: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 219: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 220: mul r2.xyz, r2.xyzx, r5.xyzx
 221: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 222: mul r2.xyz, r4.xyzx, r2.wwww
 223: add r3.xyw, -r0.xyxz, r0.wwww
 224: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 225: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 226: sample r1.xyzw, v1.xyxx, t4.xyzw, s5
 227: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 228: mov o0.w, l(1.000000)
 229: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 176 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r4.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r5.x, r5.xyzx, r5.xyzx
  23: sqrt r5.x, r5.x
  24: add r5.x, -r4.w, r5.x
  25: mad r4.w, cb3[25].w, r5.x, r4.w
  26: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  27: eq r5.x, cb6[0].x, l(1.000000)
  28: if_nz r5.x
  29:   eq r5.y, cb6[0].y, l(1.000000)
  30:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  32:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  33:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  34:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  35:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  36:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  37:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  38:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r6.x, r5.z, r5.y
  40:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  41: else 
  42:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  45: div r5.zw, v7.xxxy, v7.wwww
  46: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  47: add r5.y, r5.y, -r6.x
  48: mad r4.w, r4.w, r5.y, r6.x
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: add r5.z, -r0.x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: max r3.y, r3.y, l(0.002000)
 171: add r3.w, -r3.y, l(1.000000)
 172: mad r4.w, |r2.w|, r3.w, r3.y
 173: mad r3.w, r3.x, r3.w, r3.y
 174: mul r2.w, |r2.w|, r3.w
 175: mad r2.w, r3.x, r4.w, r2.w
 176: add r2.w, r2.w, l(0.000010)
 177: div r2.w, l(0.500000), r2.w
 178: mul r3.w, r3.y, r3.y
 179: mad r4.w, r2.x, r3.w, -r2.x
 180: mad r2.x, r4.w, r2.x, l(1.000000)
 181: mul r3.w, r3.w, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.w, r2.x
 184: mul r2.x, r2.x, r2.w
 185: mul r2.x, r2.x, l(3.141593)
 186: max r2.x, r2.x, l(0.000100)
 187: sqrt r2.x, r2.x
 188: mul r2.xz, r3.xxxx, r2.xxzx
 189: mul r2.w, r3.y, l(0.280000)
 190: mad r2.w, -r2.w, r5.z, l(1.000000)
 191: dp3 r3.x, r1.xyzx, r1.xyzx
 192: ne r3.x, r3.x, l(0.000000)
 193: and r3.x, r3.x, l(0x3f800000)
 194: mul r2.x, r2.x, r3.x
 195: add r0.x, r0.x, -r1.w
 196: add_sat r0.x, r0.x, l(1.000000)
 197: mul r3.xyw, r2.zzzz, r7.xyxz
 198: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 199: mul r5.xyz, r7.xyzx, r2.xxxx
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.x, r1.w, r1.w
 202: mul r2.x, r2.x, r2.x
 203: mul r1.w, r1.w, r2.x
 204: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 206: mul r2.xyz, r2.xyzx, r5.xyzx
 207: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 208: mul r2.xyz, r4.xyzx, r2.wwww
 209: add r3.xyw, -r1.xyxz, r0.xxxx
 210: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 211: mad o0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 138 math, 14 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: eq r3.w, cb3[0].x, l(1.000000)
  14: if_nz r3.w
  15:   eq r3.w, cb3[0].y, l(1.000000)
  16:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  18:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  20:   mov r5.y, v3.w
  21:   mov r5.z, v4.w
  22:   mov r5.w, v5.w
  23:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  24:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  26:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r3.w, r4.y
  29:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  34: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  35: add r4.x, -cb0[9].y, l(1.000000)
  36: mad r4.x, r4.y, cb0[9].y, r4.x
  37: add r4.y, -r0.x, l(1.000000)
  38: dp3 r4.z, r3.xyzx, r2.xyzx
  39: add r4.z, r4.z, r4.z
  40: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  41: mul r6.xyz, r3.wwww, cb0[2].xyzx
  42: lt r3.w, l(0.000000), cb2[2].w
  43: if_nz r3.w
  44:   dp3 r3.w, r5.xyzx, r5.xyzx
  45:   rsq r3.w, r3.w
  46:   mul r7.xyz, r3.wwww, r5.xyzx
  47:   mov r8.x, v3.w
  48:   mov r8.y, v4.w
  49:   mov r8.z, v5.w
  50:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  51:   div r9.xyz, r9.xyzx, r7.xyzx
  52:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  53:   div r10.xyz, r10.xyzx, r7.xyzx
  54:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  55:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  56:   min r3.w, r9.y, r9.x
  57:   min r3.w, r9.z, r3.w
  58:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  59:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  60: else 
  61:   mov r7.xyz, r5.xyzx
  62: endif 
  63: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  64: mul r3.w, r3.w, r4.y
  65: mul r3.w, r3.w, l(6.000000)
  66: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  67: add r4.z, r7.w, l(-1.000000)
  68: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  69: mul r4.z, r4.z, cb2[3].x
  70: mul r8.xyz, r7.xyzx, r4.zzzz
  71: lt r4.w, cb2[1].w, l(0.999990)
  72: if_nz r4.w
  73:   lt r4.w, l(0.000000), cb2[6].w
  74:   if_nz r4.w
  75:     dp3 r4.w, r5.xyzx, r5.xyzx
  76:     rsq r4.w, r4.w
  77:     mul r9.xyz, r4.wwww, r5.xyzx
  78:     mov r10.x, v3.w
  79:     mov r10.y, v4.w
  80:     mov r10.z, v5.w
  81:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  82:     div r11.xyz, r11.xyzx, r9.xyzx
  83:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  84:     div r12.xyz, r12.xyzx, r9.xyzx
  85:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  86:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  87:     min r4.w, r11.y, r11.x
  88:     min r4.w, r11.z, r4.w
  89:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
  90:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
  91:   endif 
  92:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r3.w
  93:   add r3.w, r5.w, l(-1.000000)
  94:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
  95:   mul r3.w, r3.w, cb2[7].x
  96:   mul r5.xyz, r5.xyzx, r3.wwww
  97:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
  98:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
  99: endif 
 100: mul r4.xzw, r4.xxxx, r8.xxyz
 101: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 102: dp3 r2.w, r5.xyzx, r5.xyzx
 103: max r2.w, r2.w, l(0.001000)
 104: rsq r2.w, r2.w
 105: mul r5.xyz, r2.wwww, r5.xyzx
 106: dp3 r2.w, r2.xyzx, -r3.xyzx
 107: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 108: dp3_sat r2.x, r2.xyzx, r5.xyzx
 109: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 110: mul r2.z, r2.y, r2.y
 111: dp2 r2.z, r2.zzzz, r4.yyyy
 112: add r2.z, r2.z, l(-0.500000)
 113: add r3.y, -r3.x, l(1.000000)
 114: mul r3.z, r3.y, r3.y
 115: mul r3.z, r3.z, r3.z
 116: mul r3.y, r3.y, r3.z
 117: mad r3.y, r2.z, r3.y, l(1.000000)
 118: add r3.z, -|r2.w|, l(1.000000)
 119: mul r3.w, r3.z, r3.z
 120: mul r3.w, r3.w, r3.w
 121: mul r3.z, r3.z, r3.w
 122: mad r2.z, r2.z, r3.z, l(1.000000)
 123: mul r2.z, r2.z, r3.y
 124: mul r3.y, r4.y, r4.y
 125: max r3.y, r3.y, l(0.002000)
 126: add r3.w, -r3.y, l(1.000000)
 127: mad r5.x, |r2.w|, r3.w, r3.y
 128: mad r3.w, r3.x, r3.w, r3.y
 129: mul r2.w, |r2.w|, r3.w
 130: mad r2.w, r3.x, r5.x, r2.w
 131: add r2.w, r2.w, l(0.000010)
 132: div r2.w, l(0.500000), r2.w
 133: mul r3.w, r3.y, r3.y
 134: mad r5.x, r2.x, r3.w, -r2.x
 135: mad r2.x, r5.x, r2.x, l(1.000000)
 136: mul r3.w, r3.w, l(0.318310)
 137: mad r2.x, r2.x, r2.x, l(0.000000)
 138: div r2.x, r3.w, r2.x
 139: mul r2.x, r2.x, r2.w
 140: mul r2.x, r2.x, l(3.141593)
 141: max r2.x, r2.x, l(0.000100)
 142: sqrt r2.x, r2.x
 143: mul r2.xz, r3.xxxx, r2.xxzx
 144: mul r2.w, r3.y, l(0.280000)
 145: mad r2.w, -r2.w, r4.y, l(1.000000)
 146: dp3 r3.x, r1.xyzx, r1.xyzx
 147: ne r3.x, r3.x, l(0.000000)
 148: and r3.x, r3.x, l(0x3f800000)
 149: mul r2.x, r2.x, r3.x
 150: add r0.x, r0.x, -r1.w
 151: add_sat r0.x, r0.x, l(1.000000)
 152: mul r3.xyw, r2.zzzz, r6.xyxz
 153: mul r5.xyz, r6.xyzx, r2.xxxx
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.x, r1.w, r1.w
 156: mul r2.x, r2.x, r2.x
 157: mul r1.w, r1.w, r2.x
 158: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 160: mul r2.xyz, r2.xyzx, r5.xyzx
 161: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 162: mul r2.xyz, r4.xzwx, r2.wwww
 163: add r3.xyw, -r1.xyxz, r0.xxxx
 164: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 165: mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 166: sample r1.xyzw, v1.xyxx, t2.xyzw, s4
 167: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 168: mov o0.w, l(1.000000)
 169: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 139 math, 14 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: dp3 r2.w, v2.xyzx, v2.xyzx
  14: rsq r2.w, r2.w
  15: mul r3.xyz, r2.wwww, v2.xyzx
  16: eq r3.w, cb3[0].x, l(1.000000)
  17: if_nz r3.w
  18:   eq r3.w, cb3[0].y, l(1.000000)
  19:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  20:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  21:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  23:   mov r5.y, v3.w
  24:   mov r5.z, v4.w
  25:   mov r5.w, v5.w
  26:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  27:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  28:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  29:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  30:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  31:   max r4.x, r3.w, r4.y
  32:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  33: else 
  34:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  35: endif 
  36: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  37: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  38: add r4.x, -cb0[9].y, l(1.000000)
  39: mad r4.x, r4.y, cb0[9].y, r4.x
  40: add r4.y, -r0.w, l(1.000000)
  41: dp3 r4.z, r3.xyzx, r2.xyzx
  42: add r4.z, r4.z, r4.z
  43: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  44: mul r6.xyz, r3.wwww, cb0[2].xyzx
  45: lt r3.w, l(0.000000), cb2[2].w
  46: if_nz r3.w
  47:   dp3 r3.w, r5.xyzx, r5.xyzx
  48:   rsq r3.w, r3.w
  49:   mul r7.xyz, r3.wwww, r5.xyzx
  50:   mov r8.x, v3.w
  51:   mov r8.y, v4.w
  52:   mov r8.z, v5.w
  53:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  54:   div r9.xyz, r9.xyzx, r7.xyzx
  55:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  56:   div r10.xyz, r10.xyzx, r7.xyzx
  57:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  58:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  59:   min r3.w, r9.y, r9.x
  60:   min r3.w, r9.z, r3.w
  61:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  62:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  63: else 
  64:   mov r7.xyz, r5.xyzx
  65: endif 
  66: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  67: mul r3.w, r3.w, r4.y
  68: mul r3.w, r3.w, l(6.000000)
  69: sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r3.w
  70: add r4.z, r7.w, l(-1.000000)
  71: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  72: mul r4.z, r4.z, cb2[3].x
  73: mul r8.xyz, r7.xyzx, r4.zzzz
  74: lt r4.w, cb2[1].w, l(0.999990)
  75: if_nz r4.w
  76:   lt r4.w, l(0.000000), cb2[6].w
  77:   if_nz r4.w
  78:     dp3 r4.w, r5.xyzx, r5.xyzx
  79:     rsq r4.w, r4.w
  80:     mul r9.xyz, r4.wwww, r5.xyzx
  81:     mov r10.x, v3.w
  82:     mov r10.y, v4.w
  83:     mov r10.z, v5.w
  84:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  85:     div r11.xyz, r11.xyzx, r9.xyzx
  86:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  87:     div r12.xyz, r12.xyzx, r9.xyzx
  88:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  89:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  90:     min r4.w, r11.y, r11.x
  91:     min r4.w, r11.z, r4.w
  92:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
  93:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
  94:   endif 
  95:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r3.w
  96:   add r3.w, r5.w, l(-1.000000)
  97:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
  98:   mul r3.w, r3.w, cb2[7].x
  99:   mul r5.xyz, r5.xyzx, r3.wwww
 100:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 101:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 102: endif 
 103: mul r4.xzw, r4.xxxx, r8.xxyz
 104: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 105: dp3 r2.w, r5.xyzx, r5.xyzx
 106: max r2.w, r2.w, l(0.001000)
 107: rsq r2.w, r2.w
 108: mul r5.xyz, r2.wwww, r5.xyzx
 109: dp3 r2.w, r2.xyzx, -r3.xyzx
 110: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 111: dp3_sat r2.x, r2.xyzx, r5.xyzx
 112: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 113: mul r2.z, r2.y, r2.y
 114: dp2 r2.z, r2.zzzz, r4.yyyy
 115: add r2.z, r2.z, l(-0.500000)
 116: add r3.y, -r3.x, l(1.000000)
 117: mul r3.z, r3.y, r3.y
 118: mul r3.z, r3.z, r3.z
 119: mul r3.y, r3.y, r3.z
 120: mad r3.y, r2.z, r3.y, l(1.000000)
 121: add r3.z, -|r2.w|, l(1.000000)
 122: mul r3.w, r3.z, r3.z
 123: mul r3.w, r3.w, r3.w
 124: mul r3.z, r3.z, r3.w
 125: mad r2.z, r2.z, r3.z, l(1.000000)
 126: mul r2.z, r2.z, r3.y
 127: mul r3.y, r4.y, r4.y
 128: max r3.y, r3.y, l(0.002000)
 129: add r3.w, -r3.y, l(1.000000)
 130: mad r5.x, |r2.w|, r3.w, r3.y
 131: mad r3.w, r3.x, r3.w, r3.y
 132: mul r2.w, |r2.w|, r3.w
 133: mad r2.w, r3.x, r5.x, r2.w
 134: add r2.w, r2.w, l(0.000010)
 135: div r2.w, l(0.500000), r2.w
 136: mul r3.w, r3.y, r3.y
 137: mad r5.x, r2.x, r3.w, -r2.x
 138: mad r2.x, r5.x, r2.x, l(1.000000)
 139: mul r3.w, r3.w, l(0.318310)
 140: mad r2.x, r2.x, r2.x, l(0.000000)
 141: div r2.x, r3.w, r2.x
 142: mul r2.x, r2.x, r2.w
 143: mul r2.x, r2.x, l(3.141593)
 144: max r2.x, r2.x, l(0.000100)
 145: sqrt r2.x, r2.x
 146: mul r2.xz, r3.xxxx, r2.xxzx
 147: mul r2.w, r3.y, l(0.280000)
 148: mad r2.w, -r2.w, r4.y, l(1.000000)
 149: dp3 r3.x, r0.xyzx, r0.xyzx
 150: ne r3.x, r3.x, l(0.000000)
 151: and r3.x, r3.x, l(0x3f800000)
 152: mul r2.x, r2.x, r3.x
 153: add r0.w, r0.w, -r1.w
 154: add_sat r0.w, r0.w, l(1.000000)
 155: mul r3.xyw, r2.zzzz, r6.xyxz
 156: mul r5.xyz, r6.xyzx, r2.xxxx
 157: add r1.w, -r2.y, l(1.000000)
 158: mul r2.x, r1.w, r1.w
 159: mul r2.x, r2.x, r2.x
 160: mul r1.w, r1.w, r2.x
 161: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 162: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 163: mul r2.xyz, r2.xyzx, r5.xyzx
 164: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 165: mul r2.xyz, r4.xzwx, r2.wwww
 166: add r3.xyw, -r0.xyxz, r0.wwww
 167: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 168: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 169: mov o0.w, l(1.000000)
 170: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 14 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r2.w, v2.xyzx, v2.xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, v2.xyzx
  27: eq r3.w, cb3[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r3.w, cb3[0].y, l(1.000000)
  30:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  31:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  32:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  34:   mov r5.y, v3.w
  35:   mov r5.z, v4.w
  36:   mov r5.w, v5.w
  37:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  38:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  39:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  40:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  41:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  42:   max r4.x, r3.w, r4.y
  43:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  44: else 
  45:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  48: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  49: add r4.x, -cb0[9].y, l(1.000000)
  50: mad r4.x, r4.y, cb0[9].y, r4.x
  51: add r4.y, -r0.w, l(1.000000)
  52: dp3 r4.z, r3.xyzx, r2.xyzx
  53: add r4.z, r4.z, r4.z
  54: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  55: mul r6.xyz, r3.wwww, cb0[2].xyzx
  56: lt r3.w, l(0.000000), cb2[2].w
  57: if_nz r3.w
  58:   dp3 r3.w, r5.xyzx, r5.xyzx
  59:   rsq r3.w, r3.w
  60:   mul r7.xyz, r3.wwww, r5.xyzx
  61:   mov r8.x, v3.w
  62:   mov r8.y, v4.w
  63:   mov r8.z, v5.w
  64:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  67:   div r10.xyz, r10.xyzx, r7.xyzx
  68:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  69:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  70:   min r3.w, r9.y, r9.x
  71:   min r3.w, r9.z, r3.w
  72:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  73:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  74: else 
  75:   mov r7.xyz, r5.xyzx
  76: endif 
  77: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  78: mul r3.w, r3.w, r4.y
  79: mul r3.w, r3.w, l(6.000000)
  80: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  81: add r4.z, r7.w, l(-1.000000)
  82: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  83: mul r4.z, r4.z, cb2[3].x
  84: mul r8.xyz, r7.xyzx, r4.zzzz
  85: lt r4.w, cb2[1].w, l(0.999990)
  86: if_nz r4.w
  87:   lt r4.w, l(0.000000), cb2[6].w
  88:   if_nz r4.w
  89:     dp3 r4.w, r5.xyzx, r5.xyzx
  90:     rsq r4.w, r4.w
  91:     mul r9.xyz, r4.wwww, r5.xyzx
  92:     mov r10.x, v3.w
  93:     mov r10.y, v4.w
  94:     mov r10.z, v5.w
  95:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  98:     div r12.xyz, r12.xyzx, r9.xyzx
  99:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 101:     min r4.w, r11.y, r11.x
 102:     min r4.w, r11.z, r4.w
 103:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 104:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 105:   endif 
 106:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r3.w
 107:   add r3.w, r5.w, l(-1.000000)
 108:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
 109:   mul r3.w, r3.w, cb2[7].x
 110:   mul r5.xyz, r5.xyzx, r3.wwww
 111:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 112:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 113: endif 
 114: mul r4.xzw, r4.xxxx, r8.xxyz
 115: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 116: dp3 r2.w, r5.xyzx, r5.xyzx
 117: max r2.w, r2.w, l(0.001000)
 118: rsq r2.w, r2.w
 119: mul r5.xyz, r2.wwww, r5.xyzx
 120: dp3 r2.w, r2.xyzx, -r3.xyzx
 121: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 122: dp3_sat r2.x, r2.xyzx, r5.xyzx
 123: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 124: mul r2.z, r2.y, r2.y
 125: dp2 r2.z, r2.zzzz, r4.yyyy
 126: add r2.z, r2.z, l(-0.500000)
 127: add r3.y, -r3.x, l(1.000000)
 128: mul r3.z, r3.y, r3.y
 129: mul r3.z, r3.z, r3.z
 130: mul r3.y, r3.y, r3.z
 131: mad r3.y, r2.z, r3.y, l(1.000000)
 132: add r3.z, -|r2.w|, l(1.000000)
 133: mul r3.w, r3.z, r3.z
 134: mul r3.w, r3.w, r3.w
 135: mul r3.z, r3.z, r3.w
 136: mad r2.z, r2.z, r3.z, l(1.000000)
 137: mul r2.z, r2.z, r3.y
 138: mul r3.y, r4.y, r4.y
 139: max r3.y, r3.y, l(0.002000)
 140: add r3.w, -r3.y, l(1.000000)
 141: mad r5.x, |r2.w|, r3.w, r3.y
 142: mad r3.w, r3.x, r3.w, r3.y
 143: mul r2.w, |r2.w|, r3.w
 144: mad r2.w, r3.x, r5.x, r2.w
 145: add r2.w, r2.w, l(0.000010)
 146: div r2.w, l(0.500000), r2.w
 147: mul r3.w, r3.y, r3.y
 148: mad r5.x, r2.x, r3.w, -r2.x
 149: mad r2.x, r5.x, r2.x, l(1.000000)
 150: mul r3.w, r3.w, l(0.318310)
 151: mad r2.x, r2.x, r2.x, l(0.000000)
 152: div r2.x, r3.w, r2.x
 153: mul r2.x, r2.x, r2.w
 154: mul r2.x, r2.x, l(3.141593)
 155: max r2.x, r2.x, l(0.000100)
 156: sqrt r2.x, r2.x
 157: mul r2.xz, r3.xxxx, r2.xxzx
 158: mul r2.w, r3.y, l(0.280000)
 159: mad r2.w, -r2.w, r4.y, l(1.000000)
 160: dp3 r3.x, r0.xyzx, r0.xyzx
 161: ne r3.x, r3.x, l(0.000000)
 162: and r3.x, r3.x, l(0x3f800000)
 163: mul r2.x, r2.x, r3.x
 164: add r0.w, r0.w, -r1.w
 165: add_sat r0.w, r0.w, l(1.000000)
 166: mul r3.xyw, r2.zzzz, r6.xyxz
 167: mul r5.xyz, r6.xyzx, r2.xxxx
 168: add r1.w, -r2.y, l(1.000000)
 169: mul r2.x, r1.w, r1.w
 170: mul r2.x, r2.x, r2.x
 171: mul r1.w, r1.w, r2.x
 172: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 174: mul r2.xyz, r2.xyzx, r5.xyzx
 175: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 176: mul r2.xyz, r4.xzwx, r2.wwww
 177: add r3.xyw, -r0.xyxz, r0.wwww
 178: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 179: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 14 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r2.w, v2.xyzx, v2.xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, v2.xyzx
  27: eq r3.w, cb3[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r3.w, cb3[0].y, l(1.000000)
  30:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  31:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  32:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  34:   mov r5.y, v3.w
  35:   mov r5.z, v4.w
  36:   mov r5.w, v5.w
  37:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  38:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  39:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  40:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  41:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  42:   max r4.x, r3.w, r4.y
  43:   sample r4.xyzw, r4.xzwx, t6.xyzw, s1
  44: else 
  45:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  48: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  49: add r4.x, -cb0[9].y, l(1.000000)
  50: mad r4.x, r4.y, cb0[9].y, r4.x
  51: add r4.y, -r0.w, l(1.000000)
  52: dp3 r4.z, r3.xyzx, r2.xyzx
  53: add r4.z, r4.z, r4.z
  54: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  55: mul r6.xyz, r3.wwww, cb0[2].xyzx
  56: lt r3.w, l(0.000000), cb2[2].w
  57: if_nz r3.w
  58:   dp3 r3.w, r5.xyzx, r5.xyzx
  59:   rsq r3.w, r3.w
  60:   mul r7.xyz, r3.wwww, r5.xyzx
  61:   mov r8.x, v3.w
  62:   mov r8.y, v4.w
  63:   mov r8.z, v5.w
  64:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  67:   div r10.xyz, r10.xyzx, r7.xyzx
  68:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  69:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  70:   min r3.w, r9.y, r9.x
  71:   min r3.w, r9.z, r3.w
  72:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  73:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  74: else 
  75:   mov r7.xyz, r5.xyzx
  76: endif 
  77: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  78: mul r3.w, r3.w, r4.y
  79: mul r3.w, r3.w, l(6.000000)
  80: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  81: add r4.z, r7.w, l(-1.000000)
  82: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  83: mul r4.z, r4.z, cb2[3].x
  84: mul r8.xyz, r7.xyzx, r4.zzzz
  85: lt r4.w, cb2[1].w, l(0.999990)
  86: if_nz r4.w
  87:   lt r4.w, l(0.000000), cb2[6].w
  88:   if_nz r4.w
  89:     dp3 r4.w, r5.xyzx, r5.xyzx
  90:     rsq r4.w, r4.w
  91:     mul r9.xyz, r4.wwww, r5.xyzx
  92:     mov r10.x, v3.w
  93:     mov r10.y, v4.w
  94:     mov r10.z, v5.w
  95:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  98:     div r12.xyz, r12.xyzx, r9.xyzx
  99:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 101:     min r4.w, r11.y, r11.x
 102:     min r4.w, r11.z, r4.w
 103:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 104:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 105:   endif 
 106:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r3.w
 107:   add r3.w, r5.w, l(-1.000000)
 108:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
 109:   mul r3.w, r3.w, cb2[7].x
 110:   mul r5.xyz, r5.xyzx, r3.wwww
 111:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 112:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 113: endif 
 114: mul r4.xzw, r4.xxxx, r8.xxyz
 115: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 116: dp3 r2.w, r5.xyzx, r5.xyzx
 117: max r2.w, r2.w, l(0.001000)
 118: rsq r2.w, r2.w
 119: mul r5.xyz, r2.wwww, r5.xyzx
 120: dp3 r2.w, r2.xyzx, -r3.xyzx
 121: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 122: dp3_sat r2.x, r2.xyzx, r5.xyzx
 123: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 124: mul r2.z, r2.y, r2.y
 125: dp2 r2.z, r2.zzzz, r4.yyyy
 126: add r2.z, r2.z, l(-0.500000)
 127: add r3.y, -r3.x, l(1.000000)
 128: mul r3.z, r3.y, r3.y
 129: mul r3.z, r3.z, r3.z
 130: mul r3.y, r3.y, r3.z
 131: mad r3.y, r2.z, r3.y, l(1.000000)
 132: add r3.z, -|r2.w|, l(1.000000)
 133: mul r3.w, r3.z, r3.z
 134: mul r3.w, r3.w, r3.w
 135: mul r3.z, r3.z, r3.w
 136: mad r2.z, r2.z, r3.z, l(1.000000)
 137: mul r2.z, r2.z, r3.y
 138: mul r3.y, r4.y, r4.y
 139: max r3.y, r3.y, l(0.002000)
 140: add r3.w, -r3.y, l(1.000000)
 141: mad r5.x, |r2.w|, r3.w, r3.y
 142: mad r3.w, r3.x, r3.w, r3.y
 143: mul r2.w, |r2.w|, r3.w
 144: mad r2.w, r3.x, r5.x, r2.w
 145: add r2.w, r2.w, l(0.000010)
 146: div r2.w, l(0.500000), r2.w
 147: mul r3.w, r3.y, r3.y
 148: mad r5.x, r2.x, r3.w, -r2.x
 149: mad r2.x, r5.x, r2.x, l(1.000000)
 150: mul r3.w, r3.w, l(0.318310)
 151: mad r2.x, r2.x, r2.x, l(0.000000)
 152: div r2.x, r3.w, r2.x
 153: mul r2.x, r2.x, r2.w
 154: mul r2.x, r2.x, l(3.141593)
 155: max r2.x, r2.x, l(0.000100)
 156: sqrt r2.x, r2.x
 157: mul r2.xz, r3.xxxx, r2.xxzx
 158: mul r2.w, r3.y, l(0.280000)
 159: mad r2.w, -r2.w, r4.y, l(1.000000)
 160: dp3 r3.x, r0.xyzx, r0.xyzx
 161: ne r3.x, r3.x, l(0.000000)
 162: and r3.x, r3.x, l(0x3f800000)
 163: mul r2.x, r2.x, r3.x
 164: add r0.w, r0.w, -r1.w
 165: add_sat r0.w, r0.w, l(1.000000)
 166: mul r3.xyw, r2.zzzz, r6.xyxz
 167: mul r5.xyz, r6.xyzx, r2.xxxx
 168: add r1.w, -r2.y, l(1.000000)
 169: mul r2.x, r1.w, r1.w
 170: mul r2.x, r2.x, r2.x
 171: mul r1.w, r1.w, r2.x
 172: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 174: mul r2.xyz, r2.xyzx, r5.xyzx
 175: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 176: mul r2.xyz, r4.xzwx, r2.wwww
 177: add r3.xyw, -r0.xyxz, r0.wwww
 178: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 179: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 180: sample r1.xyzw, v1.xyxx, t3.xyzw, s5
 181: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 182: mov o0.w, l(1.000000)
 183: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  20: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.x, r2.xyzx, r2.xyzx
  30: rsq r0.x, r0.x
  31: mul r2.xyz, r0.xxxx, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r0.x, v4.w, cb2[9].w
  36: mul o4.xyz, r0.xxxx, r1.xyzx
  37: mov o4.w, r0.y
  38: mov o5.w, r0.z
  39: mov o6.xyzw, l(0,0,0,0)
  40: mov o7.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  30: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  31: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  32: mul r4.xyzw, r1.yyyy, r3.xyzw
  33: mul r3.xyzw, r3.xyzw, r3.xyzw
  34: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  35: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  36: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  37: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  38: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r3.xyzw, r0.xyzw
  40: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  42: mul r2.xyzw, r2.xyzw, r3.xyzw
  43: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r0.xyzw, r0.xyzw, r2.xyzw
  45: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  46: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  47: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  48: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  49: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r0.w, r1.y, r1.y
  52: mad r0.w, r1.x, r1.x, -r0.w
  53: mul r1.xyzw, r1.yzzx, r1.xyzz
  54: dp4 r3.x, cb2[42].xyzw, r1.xyzw
  55: dp4 r3.y, cb2[43].xyzw, r1.xyzw
  56: dp4 r3.z, cb2[44].xyzw, r1.xyzw
  57: mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  58: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  59: mov o6.w, l(0)
  60: mov o7.xyzw, l(0,0,0,0)
  61: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.w, r1.xyzx, r1.xyzx
  22: rsq r0.w, r0.w
  23: mul r1.xyz, r0.wwww, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mov o3.w, r0.x
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r2.xyzx, r2.xyzx
  30: rsq r0.w, r0.w
  31: mul r2.xyz, r0.wwww, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mul r0.w, v4.w, cb3[9].w
  35: mul o4.xyz, r0.wwww, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mov o5.xyz, r2.xyzx
  39: add r1.xyzw, -r0.xxxx, cb2[3].xyzw
  40: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  41: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  42: mul r4.xyzw, r2.yyyy, r3.xyzw
  43: mul r3.xyzw, r3.xyzw, r3.xyzw
  44: mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  45: mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
  46: mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
  47: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  48: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  49: rsq r3.xyzw, r0.xyzw
  50: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  51: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  52: mul r1.xyzw, r1.xyzw, r3.xyzw
  53: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mul r0.xyzw, r0.xyzw, r1.xyzw
  55: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  56: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  57: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  58: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  59: mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  60: mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  61: mul r0.w, r2.y, r2.y
  62: mad r0.w, r2.x, r2.x, -r0.w
  63: mul r2.xyzw, r2.yzzx, r2.xyzz
  64: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  65: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  66: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  67: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  68: mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  69: mov o6.w, l(0)
  70: mov o7.xyzw, l(0,0,0,0)
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  30: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  31: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  32: mul r4.xyzw, r1.yyyy, r3.xyzw
  33: mul r3.xyzw, r3.xyzw, r3.xyzw
  34: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  35: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  36: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  37: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  38: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r3.xyzw, r0.xyzw
  40: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  42: mul r2.xyzw, r2.xyzw, r3.xyzw
  43: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r0.xyzw, r0.xyzw, r2.xyzw
  45: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  46: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  47: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  48: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  49: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r0.w, r1.y, r1.y
  52: mad r0.w, r1.x, r1.x, -r0.w
  53: mul r1.xyzw, r1.yzzx, r1.xyzz
  54: dp4 r3.x, cb2[42].xyzw, r1.xyzw
  55: dp4 r3.y, cb2[43].xyzw, r1.xyzw
  56: dp4 r3.z, cb2[44].xyzw, r1.xyzw
  57: mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  58: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  59: mov o6.w, l(0)
  60: mov o7.xyzw, l(0,0,0,0)
  61: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 65 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mov o3.w, r1.x
  27: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r1.w, r3.xyzx, r3.xyzx
  31: rsq r1.w, r1.w
  32: mul r3.xyz, r1.wwww, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mul r1.w, v4.w, cb3[9].w
  36: mul o4.xyz, r1.wwww, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mov o5.xyz, r3.xyzx
  40: add r2.xyzw, -r1.xxxx, cb2[3].xyzw
  41: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  42: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  43: mul r5.xyzw, r3.yyyy, r4.xyzw
  44: mul r4.xyzw, r4.xyzw, r4.xyzw
  45: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  46: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  47: mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
  48: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  49: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  50: rsq r4.xyzw, r1.xyzw
  51: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  52: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  53: mul r2.xyzw, r2.xyzw, r4.xyzw
  54: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mul r1.xyzw, r1.xyzw, r2.xyzw
  56: mul r2.xyz, r1.yyyy, cb2[8].xyzx
  57: mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
  58: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
  59: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  60: mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  61: mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  62: mul r1.w, r3.y, r3.y
  63: mad r1.w, r3.x, r3.x, -r1.w
  64: mul r3.xyzw, r3.yzzx, r3.xyzz
  65: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  66: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  67: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  68: mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  69: mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  70: mov o6.w, l(0)
  71: mul r0.y, r0.y, cb1[5].x
  72: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  73: mov o7.zw, r0.zzzw
  74: add o7.xy, r1.zzzz, r1.xwxx
  75: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  20: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.x, r2.xyzx, r2.xyzx
  30: rsq r0.x, r0.x
  31: mul r2.xyz, r0.xxxx, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r0.x, v4.w, cb2[9].w
  36: mul o4.xyz, r0.xxxx, r1.xyzx
  37: mov o4.w, r0.y
  38: mov o5.w, r0.z
  39: mov o6.xyzw, l(0,0,0,0)
  40: mov o7.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 31 avg math (23..42)
 // Stats for Fragment shader:
 //        d3d11: 111 avg math (84..157), 3 avg texture (2..5), 2 avg branch (2..4)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: dp3 r2.w, r4.xyzx, r4.xyzx
  36: sample r4.xyzw, r2.wwww, t1.xyzw, s2
  37: mul r1.w, r1.w, r4.x
  38: mov r4.x, v3.w
  39: mov r4.y, v4.w
  40: mov r4.z, v5.w
  41: dp3 r2.w, r4.xyzx, r4.xyzx
  42: rsq r2.w, r2.w
  43: mul r5.xyz, r2.wwww, r4.xyzx
  44: mul r6.xyz, r1.wwww, cb0[2].xyzx
  45: add r0.x, -r0.x, l(1.000000)
  46: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  47: dp3 r1.w, r4.xyzx, r4.xyzx
  48: max r1.w, r1.w, l(0.001000)
  49: rsq r1.w, r1.w
  50: mul r4.xyz, r1.wwww, r4.xyzx
  51: dp3 r1.w, r2.xyzx, -r3.xyzx
  52: dp3_sat r2.w, r2.xyzx, r5.xyzx
  53: dp3_sat r2.x, r2.xyzx, r4.xyzx
  54: dp3_sat r2.y, r5.xyzx, r4.xyzx
  55: mul r2.z, r2.y, r2.y
  56: dp2 r2.z, r2.zzzz, r0.xxxx
  57: add r2.z, r2.z, l(-0.500000)
  58: add r3.x, -r2.w, l(1.000000)
  59: mul r3.y, r3.x, r3.x
  60: mul r3.y, r3.y, r3.y
  61: mul r3.x, r3.x, r3.y
  62: mad r3.x, r2.z, r3.x, l(1.000000)
  63: add r3.y, -|r1.w|, l(1.000000)
  64: mul r3.z, r3.y, r3.y
  65: mul r3.z, r3.z, r3.z
  66: mul r3.y, r3.y, r3.z
  67: mad r2.z, r2.z, r3.y, l(1.000000)
  68: mul r2.z, r2.z, r3.x
  69: mul r2.z, r2.w, r2.z
  70: mul r0.x, r0.x, r0.x
  71: max r0.x, r0.x, l(0.002000)
  72: add r3.x, -r0.x, l(1.000000)
  73: mad r3.y, |r1.w|, r3.x, r0.x
  74: mad r3.x, r2.w, r3.x, r0.x
  75: mul r1.w, |r1.w|, r3.x
  76: mad r1.w, r2.w, r3.y, r1.w
  77: add r1.w, r1.w, l(0.000010)
  78: div r1.w, l(0.500000), r1.w
  79: mul r0.x, r0.x, r0.x
  80: mad r3.x, r2.x, r0.x, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r0.x, r0.x, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r0.x, r0.x, r2.x
  85: mul r0.x, r0.x, r1.w
  86: mul r0.x, r0.x, l(3.141593)
  87: max r0.x, r0.x, l(0.000100)
  88: sqrt r0.x, r0.x
  89: mul r0.x, r2.w, r0.x
  90: dp3 r1.w, r1.xyzx, r1.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.x, r0.x, r1.w
  94: mul r2.xzw, r2.zzzz, r6.xxyz
  95: mul r3.xyz, r6.xyzx, r0.xxxx
  96: add r0.x, -r2.y, l(1.000000)
  97: mul r1.w, r0.x, r0.x
  98: mul r1.w, r1.w, r1.w
  99: mul r0.x, r0.x, r1.w
 100: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 102: mul r1.xyz, r1.xyzx, r3.xyzx
 103: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o2.w, l(0)
  18: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r0.xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 86 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: eq r2.w, cb2[0].x, l(1.000000)
  17: if_nz r2.w
  18:   eq r2.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r2.w, r3.w
  29:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  34: mul r4.xyz, r2.wwww, cb0[2].xyzx
  35: add r0.w, -r0.w, l(1.000000)
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  40: dp3 r1.w, r6.xyzx, r6.xyzx
  41: max r1.w, r1.w, l(0.001000)
  42: rsq r1.w, r1.w
  43: mul r6.xyz, r1.wwww, r6.xyzx
  44: dp3 r1.w, r2.xyzx, -r3.xyzx
  45: dp3_sat r2.w, r2.xyzx, r5.xyzx
  46: dp3_sat r2.x, r2.xyzx, r6.xyzx
  47: dp3_sat r2.y, r5.xyzx, r6.xyzx
  48: mul r2.z, r2.y, r2.y
  49: dp2 r2.z, r2.zzzz, r0.wwww
  50: add r2.z, r2.z, l(-0.500000)
  51: add r3.x, -r2.w, l(1.000000)
  52: mul r3.y, r3.x, r3.x
  53: mul r3.y, r3.y, r3.y
  54: mul r3.x, r3.x, r3.y
  55: mad r3.x, r2.z, r3.x, l(1.000000)
  56: add r3.y, -|r1.w|, l(1.000000)
  57: mul r3.z, r3.y, r3.y
  58: mul r3.z, r3.z, r3.z
  59: mul r3.y, r3.y, r3.z
  60: mad r2.z, r2.z, r3.y, l(1.000000)
  61: mul r2.z, r2.z, r3.x
  62: mul r2.z, r2.w, r2.z
  63: mul r0.w, r0.w, r0.w
  64: max r0.w, r0.w, l(0.002000)
  65: add r3.x, -r0.w, l(1.000000)
  66: mad r3.y, |r1.w|, r3.x, r0.w
  67: mad r3.x, r2.w, r3.x, r0.w
  68: mul r1.w, |r1.w|, r3.x
  69: mad r1.w, r2.w, r3.y, r1.w
  70: add r1.w, r1.w, l(0.000010)
  71: div r1.w, l(0.500000), r1.w
  72: mul r0.w, r0.w, r0.w
  73: mad r3.x, r2.x, r0.w, -r2.x
  74: mad r2.x, r3.x, r2.x, l(1.000000)
  75: mul r0.w, r0.w, l(0.318310)
  76: mad r2.x, r2.x, r2.x, l(0.000000)
  77: div r0.w, r0.w, r2.x
  78: mul r0.w, r0.w, r1.w
  79: mul r0.w, r0.w, l(3.141593)
  80: max r0.w, r0.w, l(0.000100)
  81: sqrt r0.w, r0.w
  82: mul r0.w, r2.w, r0.w
  83: dp3 r1.w, r0.xyzx, r0.xyzx
  84: ne r1.w, r1.w, l(0.000000)
  85: and r1.w, r1.w, l(0x3f800000)
  86: mul r0.w, r0.w, r1.w
  87: mul r2.xzw, r2.zzzz, r4.xxyz
  88: mul r3.xyz, r4.xyzx, r0.wwww
  89: add r0.w, -r2.y, l(1.000000)
  90: mul r1.w, r0.w, r0.w
  91: mul r1.w, r1.w, r1.w
  92: mul r0.w, r0.w, r1.w
  93: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  94: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  95: mul r0.xyz, r0.xyzx, r3.xyzx
  96: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  97: mov o0.w, l(1.000000)
  98: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o2.w, l(0)
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.w, r1.xyzx, r1.xyzx
  22: rsq r0.w, r0.w
  23: mul r1.xyz, r0.wwww, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  26: mov o6.xyz, r0.xyzx
  27: mov o3.w, r2.x
  28: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r0.w, r0.xyzx, r0.xyzx
  32: rsq r0.w, r0.w
  33: mul r0.xyz, r0.wwww, r0.xyzx
  34: mul r3.xyz, r1.yzxy, r0.zxyz
  35: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  36: mov o5.xyz, r0.xyzx
  37: mul r0.x, v4.w, cb3[9].w
  38: mul o4.xyz, r0.xxxx, r1.xyzx
  39: mov o4.w, r2.y
  40: mov o5.w, r2.z
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 96 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: eq r2.w, cb2[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r2.w, cb2[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  31:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  34:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  37:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r2.w, r3.w
  40:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  45: mul r4.xyz, r2.wwww, cb0[2].xyzx
  46: add r0.w, -r0.w, l(1.000000)
  47: mov r5.x, v3.w
  48: mov r5.y, v4.w
  49: mov r5.z, v5.w
  50: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  51: dp3 r1.w, r6.xyzx, r6.xyzx
  52: max r1.w, r1.w, l(0.001000)
  53: rsq r1.w, r1.w
  54: mul r6.xyz, r1.wwww, r6.xyzx
  55: dp3 r1.w, r2.xyzx, -r3.xyzx
  56: dp3_sat r2.w, r2.xyzx, r5.xyzx
  57: dp3_sat r2.x, r2.xyzx, r6.xyzx
  58: dp3_sat r2.y, r5.xyzx, r6.xyzx
  59: mul r2.z, r2.y, r2.y
  60: dp2 r2.z, r2.zzzz, r0.wwww
  61: add r2.z, r2.z, l(-0.500000)
  62: add r3.x, -r2.w, l(1.000000)
  63: mul r3.y, r3.x, r3.x
  64: mul r3.y, r3.y, r3.y
  65: mul r3.x, r3.x, r3.y
  66: mad r3.x, r2.z, r3.x, l(1.000000)
  67: add r3.y, -|r1.w|, l(1.000000)
  68: mul r3.z, r3.y, r3.y
  69: mul r3.z, r3.z, r3.z
  70: mul r3.y, r3.y, r3.z
  71: mad r2.z, r2.z, r3.y, l(1.000000)
  72: mul r2.z, r2.z, r3.x
  73: mul r2.z, r2.w, r2.z
  74: mul r0.w, r0.w, r0.w
  75: max r0.w, r0.w, l(0.002000)
  76: add r3.x, -r0.w, l(1.000000)
  77: mad r3.y, |r1.w|, r3.x, r0.w
  78: mad r3.x, r2.w, r3.x, r0.w
  79: mul r1.w, |r1.w|, r3.x
  80: mad r1.w, r2.w, r3.y, r1.w
  81: add r1.w, r1.w, l(0.000010)
  82: div r1.w, l(0.500000), r1.w
  83: mul r0.w, r0.w, r0.w
  84: mad r3.x, r2.x, r0.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r0.w, r0.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r0.w, r0.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o2.w, l(0)
  18: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r0.xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 84 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: eq r2.w, cb2[0].x, l(1.000000)
  14: if_nz r2.w
  15:   eq r2.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r2.w, r3.w
  26:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  31: mul r4.xyz, r2.wwww, cb0[2].xyzx
  32: add r0.x, -r0.x, l(1.000000)
  33: mov r5.x, v3.w
  34: mov r5.y, v4.w
  35: mov r5.z, v5.w
  36: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  37: dp3 r1.w, r6.xyzx, r6.xyzx
  38: max r1.w, r1.w, l(0.001000)
  39: rsq r1.w, r1.w
  40: mul r6.xyz, r1.wwww, r6.xyzx
  41: dp3 r1.w, r2.xyzx, -r3.xyzx
  42: dp3_sat r2.w, r2.xyzx, r5.xyzx
  43: dp3_sat r2.x, r2.xyzx, r6.xyzx
  44: dp3_sat r2.y, r5.xyzx, r6.xyzx
  45: mul r2.z, r2.y, r2.y
  46: dp2 r2.z, r2.zzzz, r0.xxxx
  47: add r2.z, r2.z, l(-0.500000)
  48: add r3.x, -r2.w, l(1.000000)
  49: mul r3.y, r3.x, r3.x
  50: mul r3.y, r3.y, r3.y
  51: mul r3.x, r3.x, r3.y
  52: mad r3.x, r2.z, r3.x, l(1.000000)
  53: add r3.y, -|r1.w|, l(1.000000)
  54: mul r3.z, r3.y, r3.y
  55: mul r3.z, r3.z, r3.z
  56: mul r3.y, r3.y, r3.z
  57: mad r2.z, r2.z, r3.y, l(1.000000)
  58: mul r2.z, r2.z, r3.x
  59: mul r2.z, r2.w, r2.z
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.002000)
  62: add r3.x, -r0.x, l(1.000000)
  63: mad r3.y, |r1.w|, r3.x, r0.x
  64: mad r3.x, r2.w, r3.x, r0.x
  65: mul r1.w, |r1.w|, r3.x
  66: mad r1.w, r2.w, r3.y, r1.w
  67: add r1.w, r1.w, l(0.000010)
  68: div r1.w, l(0.500000), r1.w
  69: mul r0.x, r0.x, r0.x
  70: mad r3.x, r2.x, r0.x, -r2.x
  71: mad r2.x, r3.x, r2.x, l(1.000000)
  72: mul r0.x, r0.x, l(0.318310)
  73: mad r2.x, r2.x, r2.x, l(0.000000)
  74: div r0.x, r0.x, r2.x
  75: mul r0.x, r0.x, r1.w
  76: mul r0.x, r0.x, l(3.141593)
  77: max r0.x, r0.x, l(0.000100)
  78: sqrt r0.x, r0.x
  79: mul r0.x, r2.w, r0.x
  80: dp3 r1.w, r1.xyzx, r1.xyzx
  81: ne r1.w, r1.w, l(0.000000)
  82: and r1.w, r1.w, l(0x3f800000)
  83: mul r0.x, r0.x, r1.w
  84: mul r2.xzw, r2.zzzz, r4.xxyz
  85: mul r3.xyz, r4.xyzx, r0.xxxx
  86: add r0.x, -r2.y, l(1.000000)
  87: mul r1.w, r0.x, r0.x
  88: mul r1.w, r1.w, r1.w
  89: mul r0.x, r0.x, r1.w
  90: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  91: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
  92: mul r1.xyz, r1.xyzx, r3.xyzx
  93: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
  94: mov o0.w, l(1.000000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 101 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  17: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  18: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  19: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  20: eq r1.w, cb2[0].x, l(1.000000)
  21: if_nz r1.w
  22:   eq r1.w, cb2[0].y, l(1.000000)
  23:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  24:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  25:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  26:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  27:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  28:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  29:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  30:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  31:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  32:   max r5.x, r1.w, r2.w
  33:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  38: lt r2.w, l(0.000000), r4.z
  39: and r2.w, r2.w, l(0x3f800000)
  40: div r5.xy, r4.xyxx, r4.wwww
  41: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  42: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  43: mul r2.w, r2.w, r5.w
  44: dp3 r3.w, r4.xyzx, r4.xyzx
  45: sample r4.xyzw, r3.wwww, t2.xyzw, s3
  46: mul r2.w, r2.w, r4.x
  47: mul r1.w, r1.w, r2.w
  48: mov r4.x, v3.w
  49: mov r4.y, v4.w
  50: mov r4.z, v5.w
  51: dp3 r2.w, r4.xyzx, r4.xyzx
  52: rsq r2.w, r2.w
  53: mul r5.xyz, r2.wwww, r4.xyzx
  54: mul r6.xyz, r1.wwww, cb0[2].xyzx
  55: add r0.w, -r0.w, l(1.000000)
  56: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  57: dp3 r1.w, r4.xyzx, r4.xyzx
  58: max r1.w, r1.w, l(0.001000)
  59: rsq r1.w, r1.w
  60: mul r4.xyz, r1.wwww, r4.xyzx
  61: dp3 r1.w, r2.xyzx, -r3.xyzx
  62: dp3_sat r2.w, r2.xyzx, r5.xyzx
  63: dp3_sat r2.x, r2.xyzx, r4.xyzx
  64: dp3_sat r2.y, r5.xyzx, r4.xyzx
  65: mul r2.z, r2.y, r2.y
  66: dp2 r2.z, r2.zzzz, r0.wwww
  67: add r2.z, r2.z, l(-0.500000)
  68: add r3.x, -r2.w, l(1.000000)
  69: mul r3.y, r3.x, r3.x
  70: mul r3.y, r3.y, r3.y
  71: mul r3.x, r3.x, r3.y
  72: mad r3.x, r2.z, r3.x, l(1.000000)
  73: add r3.y, -|r1.w|, l(1.000000)
  74: mul r3.z, r3.y, r3.y
  75: mul r3.z, r3.z, r3.z
  76: mul r3.y, r3.y, r3.z
  77: mad r2.z, r2.z, r3.y, l(1.000000)
  78: mul r2.z, r2.z, r3.x
  79: mul r2.z, r2.w, r2.z
  80: mul r0.w, r0.w, r0.w
  81: max r0.w, r0.w, l(0.002000)
  82: add r3.x, -r0.w, l(1.000000)
  83: mad r3.y, |r1.w|, r3.x, r0.w
  84: mad r3.x, r2.w, r3.x, r0.w
  85: mul r1.w, |r1.w|, r3.x
  86: mad r1.w, r2.w, r3.y, r1.w
  87: add r1.w, r1.w, l(0.000010)
  88: div r1.w, l(0.500000), r1.w
  89: mul r0.w, r0.w, r0.w
  90: mad r3.x, r2.x, r0.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r0.w, r0.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r0.w, r0.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r6.xxyz
 105: mul r3.xyz, r6.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  43: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  44: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  45: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 111 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  28: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  29: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  30: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  31: eq r1.w, cb2[0].x, l(1.000000)
  32: if_nz r1.w
  33:   eq r1.w, cb2[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  35:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  38:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  41:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r1.w, r2.w
  44:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  49: lt r2.w, l(0.000000), r4.z
  50: and r2.w, r2.w, l(0x3f800000)
  51: div r5.xy, r4.xyxx, r4.wwww
  52: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  53: sample r5.xyzw, r5.xyxx, t2.xyzw, s3
  54: mul r2.w, r2.w, r5.w
  55: dp3 r3.w, r4.xyzx, r4.xyzx
  56: sample r4.xyzw, r3.wwww, t3.xyzw, s4
  57: mul r2.w, r2.w, r4.x
  58: mul r1.w, r1.w, r2.w
  59: mov r4.x, v3.w
  60: mov r4.y, v4.w
  61: mov r4.z, v5.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: rsq r2.w, r2.w
  64: mul r5.xyz, r2.wwww, r4.xyzx
  65: mul r6.xyz, r1.wwww, cb0[2].xyzx
  66: add r0.w, -r0.w, l(1.000000)
  67: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  68: dp3 r1.w, r4.xyzx, r4.xyzx
  69: max r1.w, r1.w, l(0.001000)
  70: rsq r1.w, r1.w
  71: mul r4.xyz, r1.wwww, r4.xyzx
  72: dp3 r1.w, r2.xyzx, -r3.xyzx
  73: dp3_sat r2.w, r2.xyzx, r5.xyzx
  74: dp3_sat r2.x, r2.xyzx, r4.xyzx
  75: dp3_sat r2.y, r5.xyzx, r4.xyzx
  76: mul r2.z, r2.y, r2.y
  77: dp2 r2.z, r2.zzzz, r0.wwww
  78: add r2.z, r2.z, l(-0.500000)
  79: add r3.x, -r2.w, l(1.000000)
  80: mul r3.y, r3.x, r3.x
  81: mul r3.y, r3.y, r3.y
  82: mul r3.x, r3.x, r3.y
  83: mad r3.x, r2.z, r3.x, l(1.000000)
  84: add r3.y, -|r1.w|, l(1.000000)
  85: mul r3.z, r3.y, r3.y
  86: mul r3.z, r3.z, r3.z
  87: mul r3.y, r3.y, r3.z
  88: mad r2.z, r2.z, r3.y, l(1.000000)
  89: mul r2.z, r2.z, r3.x
  90: mul r2.z, r2.w, r2.z
  91: mul r0.w, r0.w, r0.w
  92: max r0.w, r0.w, l(0.002000)
  93: add r3.x, -r0.w, l(1.000000)
  94: mad r3.y, |r1.w|, r3.x, r0.w
  95: mad r3.x, r2.w, r3.x, r0.w
  96: mul r1.w, |r1.w|, r3.x
  97: mad r1.w, r2.w, r3.y, r1.w
  98: add r1.w, r1.w, l(0.000010)
  99: div r1.w, l(0.500000), r1.w
 100: mul r0.w, r0.w, r0.w
 101: mad r3.x, r2.x, r0.w, -r2.x
 102: mad r2.x, r3.x, r2.x, l(1.000000)
 103: mul r0.w, r0.w, l(0.318310)
 104: mad r2.x, r2.x, r2.x, l(0.000000)
 105: div r0.w, r0.w, r2.x
 106: mul r0.w, r0.w, r1.w
 107: mul r0.w, r0.w, l(3.141593)
 108: max r0.w, r0.w, l(0.000100)
 109: sqrt r0.w, r0.w
 110: mul r0.w, r2.w, r0.w
 111: dp3 r1.w, r0.xyzx, r0.xyzx
 112: ne r1.w, r1.w, l(0.000000)
 113: and r1.w, r1.w, l(0x3f800000)
 114: mul r0.w, r0.w, r1.w
 115: mul r2.xzw, r2.zzzz, r6.xxyz
 116: mul r3.xyz, r6.xyzx, r0.wwww
 117: add r0.w, -r2.y, l(1.000000)
 118: mul r1.w, r0.w, r0.w
 119: mul r1.w, r1.w, r1.w
 120: mul r0.w, r0.w, r1.w
 121: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 122: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 123: mul r0.xyz, r0.xyzx, r3.xyzx
 124: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 125: mov o0.w, l(1.000000)
 126: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  14: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: lt r2.w, l(0.000000), r4.z
  36: and r2.w, r2.w, l(0x3f800000)
  37: div r5.xy, r4.xyxx, r4.wwww
  38: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  39: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  40: mul r2.w, r2.w, r5.w
  41: dp3 r3.w, r4.xyzx, r4.xyzx
  42: sample r4.xyzw, r3.wwww, t2.xyzw, s3
  43: mul r2.w, r2.w, r4.x
  44: mul r1.w, r1.w, r2.w
  45: mov r4.x, v3.w
  46: mov r4.y, v4.w
  47: mov r4.z, v5.w
  48: dp3 r2.w, r4.xyzx, r4.xyzx
  49: rsq r2.w, r2.w
  50: mul r5.xyz, r2.wwww, r4.xyzx
  51: mul r6.xyz, r1.wwww, cb0[2].xyzx
  52: add r0.x, -r0.x, l(1.000000)
  53: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  54: dp3 r1.w, r4.xyzx, r4.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r4.xyz, r1.wwww, r4.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r4.xyzx
  61: dp3_sat r2.y, r5.xyzx, r4.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.xxxx
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.x, r0.x, r0.x
  78: max r0.x, r0.x, l(0.002000)
  79: add r3.x, -r0.x, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.x
  81: mad r3.x, r2.w, r3.x, r0.x
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.x, r0.x, r0.x
  87: mad r3.x, r2.x, r0.x, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.x, r0.x, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.x, r0.x, r2.x
  92: mul r0.x, r0.x, r1.w
  93: mul r0.x, r0.x, l(3.141593)
  94: max r0.x, r0.x, l(0.000100)
  95: sqrt r0.x, r0.x
  96: mul r0.x, r2.w, r0.x
  97: dp3 r1.w, r1.xyzx, r1.xyzx
  98: ne r1.w, r1.w, l(0.000000)
  99: and r1.w, r1.w, l(0x3f800000)
 100: mul r0.x, r0.x, r1.w
 101: mul r2.xzw, r2.zzzz, r6.xxyz
 102: mul r3.xyz, r6.xyzx, r0.xxxx
 103: add r0.x, -r2.y, l(1.000000)
 104: mul r1.w, r0.x, r0.x
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r1.w
 107: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 108: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 109: mul r1.xyz, r1.xyzx, r3.xyzx
 110: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 111: mov o0.w, l(1.000000)
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 96 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  17: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  18: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  19: add r4.xyz, r4.xyzx, cb0[14].xyzx
  20: eq r1.w, cb2[0].x, l(1.000000)
  21: if_nz r1.w
  22:   eq r1.w, cb2[0].y, l(1.000000)
  23:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  24:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  25:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  26:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  27:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  28:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  29:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  30:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  31:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  32:   max r5.x, r1.w, r2.w
  33:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  38: dp3 r2.w, r4.xyzx, r4.xyzx
  39: sample r5.xyzw, r2.wwww, t1.xyzw, s3
  40: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  41: mul r2.w, r4.w, r5.x
  42: mul r1.w, r1.w, r2.w
  43: mov r4.x, v3.w
  44: mov r4.y, v4.w
  45: mov r4.z, v5.w
  46: dp3 r2.w, r4.xyzx, r4.xyzx
  47: rsq r2.w, r2.w
  48: mul r5.xyz, r2.wwww, r4.xyzx
  49: mul r6.xyz, r1.wwww, cb0[2].xyzx
  50: add r0.w, -r0.w, l(1.000000)
  51: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  52: dp3 r1.w, r4.xyzx, r4.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r4.xyz, r1.wwww, r4.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r4.xyzx
  59: dp3_sat r2.y, r5.xyzx, r4.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.002000)
  77: add r3.x, -r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r3.x, r0.w
  79: mad r3.x, r2.w, r3.x, r0.w
  80: mul r1.w, |r1.w|, r3.x
  81: mad r1.w, r2.w, r3.y, r1.w
  82: add r1.w, r1.w, l(0.000010)
  83: div r1.w, l(0.500000), r1.w
  84: mul r0.w, r0.w, r0.w
  85: mad r3.x, r2.x, r0.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r0.w, r0.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r0.w, r0.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r6.xxyz
 100: mul r3.xyz, r6.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  28: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  29: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  30: add r4.xyz, r4.xyzx, cb0[14].xyzx
  31: eq r1.w, cb2[0].x, l(1.000000)
  32: if_nz r1.w
  33:   eq r1.w, cb2[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  35:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  38:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  41:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r1.w, r2.w
  44:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  49: dp3 r2.w, r4.xyzx, r4.xyzx
  50: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  51: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  52: mul r2.w, r4.w, r5.x
  53: mul r1.w, r1.w, r2.w
  54: mov r4.x, v3.w
  55: mov r4.y, v4.w
  56: mov r4.z, v5.w
  57: dp3 r2.w, r4.xyzx, r4.xyzx
  58: rsq r2.w, r2.w
  59: mul r5.xyz, r2.wwww, r4.xyzx
  60: mul r6.xyz, r1.wwww, cb0[2].xyzx
  61: add r0.w, -r0.w, l(1.000000)
  62: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  63: dp3 r1.w, r4.xyzx, r4.xyzx
  64: max r1.w, r1.w, l(0.001000)
  65: rsq r1.w, r1.w
  66: mul r4.xyz, r1.wwww, r4.xyzx
  67: dp3 r1.w, r2.xyzx, -r3.xyzx
  68: dp3_sat r2.w, r2.xyzx, r5.xyzx
  69: dp3_sat r2.x, r2.xyzx, r4.xyzx
  70: dp3_sat r2.y, r5.xyzx, r4.xyzx
  71: mul r2.z, r2.y, r2.y
  72: dp2 r2.z, r2.zzzz, r0.wwww
  73: add r2.z, r2.z, l(-0.500000)
  74: add r3.x, -r2.w, l(1.000000)
  75: mul r3.y, r3.x, r3.x
  76: mul r3.y, r3.y, r3.y
  77: mul r3.x, r3.x, r3.y
  78: mad r3.x, r2.z, r3.x, l(1.000000)
  79: add r3.y, -|r1.w|, l(1.000000)
  80: mul r3.z, r3.y, r3.y
  81: mul r3.z, r3.z, r3.z
  82: mul r3.y, r3.y, r3.z
  83: mad r2.z, r2.z, r3.y, l(1.000000)
  84: mul r2.z, r2.z, r3.x
  85: mul r2.z, r2.w, r2.z
  86: mul r0.w, r0.w, r0.w
  87: max r0.w, r0.w, l(0.002000)
  88: add r3.x, -r0.w, l(1.000000)
  89: mad r3.y, |r1.w|, r3.x, r0.w
  90: mad r3.x, r2.w, r3.x, r0.w
  91: mul r1.w, |r1.w|, r3.x
  92: mad r1.w, r2.w, r3.y, r1.w
  93: add r1.w, r1.w, l(0.000010)
  94: div r1.w, l(0.500000), r1.w
  95: mul r0.w, r0.w, r0.w
  96: mad r3.x, r2.x, r0.w, -r2.x
  97: mad r2.x, r3.x, r2.x, l(1.000000)
  98: mul r0.w, r0.w, l(0.318310)
  99: mad r2.x, r2.x, r2.x, l(0.000000)
 100: div r0.w, r0.w, r2.x
 101: mul r0.w, r0.w, r1.w
 102: mul r0.w, r0.w, l(3.141593)
 103: max r0.w, r0.w, l(0.000100)
 104: sqrt r0.w, r0.w
 105: mul r0.w, r2.w, r0.w
 106: dp3 r1.w, r0.xyzx, r0.xyzx
 107: ne r1.w, r1.w, l(0.000000)
 108: and r1.w, r1.w, l(0x3f800000)
 109: mul r0.w, r0.w, r1.w
 110: mul r2.xzw, r2.zzzz, r6.xxyz
 111: mul r3.xyz, r6.xyzx, r0.wwww
 112: add r0.w, -r2.y, l(1.000000)
 113: mul r1.w, r0.w, r0.w
 114: mul r1.w, r1.w, r1.w
 115: mul r0.w, r0.w, r1.w
 116: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 117: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 118: mul r0.xyz, r0.xyzx, r3.xyzx
 119: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 120: mov o0.w, l(1.000000)
 121: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: dp3 r2.w, r4.xyzx, r4.xyzx
  36: sample r5.xyzw, r2.wwww, t1.xyzw, s3
  37: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  38: mul r2.w, r4.w, r5.x
  39: mul r1.w, r1.w, r2.w
  40: mov r4.x, v3.w
  41: mov r4.y, v4.w
  42: mov r4.z, v5.w
  43: dp3 r2.w, r4.xyzx, r4.xyzx
  44: rsq r2.w, r2.w
  45: mul r5.xyz, r2.wwww, r4.xyzx
  46: mul r6.xyz, r1.wwww, cb0[2].xyzx
  47: add r0.x, -r0.x, l(1.000000)
  48: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: max r1.w, r1.w, l(0.001000)
  51: rsq r1.w, r1.w
  52: mul r4.xyz, r1.wwww, r4.xyzx
  53: dp3 r1.w, r2.xyzx, -r3.xyzx
  54: dp3_sat r2.w, r2.xyzx, r5.xyzx
  55: dp3_sat r2.x, r2.xyzx, r4.xyzx
  56: dp3_sat r2.y, r5.xyzx, r4.xyzx
  57: mul r2.z, r2.y, r2.y
  58: dp2 r2.z, r2.zzzz, r0.xxxx
  59: add r2.z, r2.z, l(-0.500000)
  60: add r3.x, -r2.w, l(1.000000)
  61: mul r3.y, r3.x, r3.x
  62: mul r3.y, r3.y, r3.y
  63: mul r3.x, r3.x, r3.y
  64: mad r3.x, r2.z, r3.x, l(1.000000)
  65: add r3.y, -|r1.w|, l(1.000000)
  66: mul r3.z, r3.y, r3.y
  67: mul r3.z, r3.z, r3.z
  68: mul r3.y, r3.y, r3.z
  69: mad r2.z, r2.z, r3.y, l(1.000000)
  70: mul r2.z, r2.z, r3.x
  71: mul r2.z, r2.w, r2.z
  72: mul r0.x, r0.x, r0.x
  73: max r0.x, r0.x, l(0.002000)
  74: add r3.x, -r0.x, l(1.000000)
  75: mad r3.y, |r1.w|, r3.x, r0.x
  76: mad r3.x, r2.w, r3.x, r0.x
  77: mul r1.w, |r1.w|, r3.x
  78: mad r1.w, r2.w, r3.y, r1.w
  79: add r1.w, r1.w, l(0.000010)
  80: div r1.w, l(0.500000), r1.w
  81: mul r0.x, r0.x, r0.x
  82: mad r3.x, r2.x, r0.x, -r2.x
  83: mad r2.x, r3.x, r2.x, l(1.000000)
  84: mul r0.x, r0.x, l(0.318310)
  85: mad r2.x, r2.x, r2.x, l(0.000000)
  86: div r0.x, r0.x, r2.x
  87: mul r0.x, r0.x, r1.w
  88: mul r0.x, r0.x, l(3.141593)
  89: max r0.x, r0.x, l(0.000100)
  90: sqrt r0.x, r0.x
  91: mul r0.x, r2.w, r0.x
  92: dp3 r1.w, r1.xyzx, r1.xyzx
  93: ne r1.w, r1.w, l(0.000000)
  94: and r1.w, r1.w, l(0x3f800000)
  95: mul r0.x, r0.x, r1.w
  96: mul r2.xzw, r2.zzzz, r6.xxyz
  97: mul r3.xyz, r6.xyzx, r0.xxxx
  98: add r0.x, -r2.y, l(1.000000)
  99: mul r1.w, r0.x, r0.x
 100: mul r1.w, r1.w, r1.w
 101: mul r0.x, r0.x, r1.w
 102: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 103: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 104: mul r1.xyz, r1.xyzx, r3.xyzx
 105: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 106: mov o0.w, l(1.000000)
 107: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xy, r0.yyyy, cb0[12].xyxx
  32: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  33: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  34: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xy, v6.yyyy, cb0[12].xyxx
  17: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  18: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  19: add r4.xy, r4.xyxx, cb0[14].xyxx
  20: eq r2.w, cb2[0].x, l(1.000000)
  21: if_nz r2.w
  22:   eq r2.w, cb2[0].y, l(1.000000)
  23:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  24:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  25:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  26:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  27:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  28:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  29:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  30:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  31:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  32:   max r5.x, r2.w, r3.w
  33:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  34: else 
  35:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  38: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  39: mul r2.w, r2.w, r4.w
  40: mul r4.xyz, r2.wwww, cb0[2].xyzx
  41: add r0.w, -r0.w, l(1.000000)
  42: mov r5.x, v3.w
  43: mov r5.y, v4.w
  44: mov r5.z, v5.w
  45: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  46: dp3 r1.w, r6.xyzx, r6.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r6.xyz, r1.wwww, r6.xyzx
  50: dp3 r1.w, r2.xyzx, -r3.xyzx
  51: dp3_sat r2.w, r2.xyzx, r5.xyzx
  52: dp3_sat r2.x, r2.xyzx, r6.xyzx
  53: dp3_sat r2.y, r5.xyzx, r6.xyzx
  54: mul r2.z, r2.y, r2.y
  55: dp2 r2.z, r2.zzzz, r0.wwww
  56: add r2.z, r2.z, l(-0.500000)
  57: add r3.x, -r2.w, l(1.000000)
  58: mul r3.y, r3.x, r3.x
  59: mul r3.y, r3.y, r3.y
  60: mul r3.x, r3.x, r3.y
  61: mad r3.x, r2.z, r3.x, l(1.000000)
  62: add r3.y, -|r1.w|, l(1.000000)
  63: mul r3.z, r3.y, r3.y
  64: mul r3.z, r3.z, r3.z
  65: mul r3.y, r3.y, r3.z
  66: mad r2.z, r2.z, r3.y, l(1.000000)
  67: mul r2.z, r2.z, r3.x
  68: mul r2.z, r2.w, r2.z
  69: mul r0.w, r0.w, r0.w
  70: max r0.w, r0.w, l(0.002000)
  71: add r3.x, -r0.w, l(1.000000)
  72: mad r3.y, |r1.w|, r3.x, r0.w
  73: mad r3.x, r2.w, r3.x, r0.w
  74: mul r1.w, |r1.w|, r3.x
  75: mad r1.w, r2.w, r3.y, r1.w
  76: add r1.w, r1.w, l(0.000010)
  77: div r1.w, l(0.500000), r1.w
  78: mul r0.w, r0.w, r0.w
  79: mad r3.x, r2.x, r0.w, -r2.x
  80: mad r2.x, r3.x, r2.x, l(1.000000)
  81: mul r0.w, r0.w, l(0.318310)
  82: mad r2.x, r2.x, r2.x, l(0.000000)
  83: div r0.w, r0.w, r2.x
  84: mul r0.w, r0.w, r1.w
  85: mul r0.w, r0.w, l(3.141593)
  86: max r0.w, r0.w, l(0.000100)
  87: sqrt r0.w, r0.w
  88: mul r0.w, r2.w, r0.w
  89: dp3 r1.w, r0.xyzx, r0.xyzx
  90: ne r1.w, r1.w, l(0.000000)
  91: and r1.w, r1.w, l(0x3f800000)
  92: mul r0.w, r0.w, r1.w
  93: mul r2.xzw, r2.zzzz, r4.xxyz
  94: mul r3.xyz, r4.xyzx, r0.wwww
  95: add r0.w, -r2.y, l(1.000000)
  96: mul r1.w, r0.w, r0.w
  97: mul r1.w, r1.w, r1.w
  98: mul r0.w, r0.w, r1.w
  99: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 100: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 101: mul r0.xyz, r0.xyzx, r3.xyzx
 102: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 103: mov o0.w, l(1.000000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xy, r0.yyyy, cb0[12].xyxx
  43: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  44: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  45: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 101 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xy, v6.yyyy, cb0[12].xyxx
  28: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  29: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  30: add r4.xy, r4.xyxx, cb0[14].xyxx
  31: eq r2.w, cb2[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb2[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  35:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  49: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  50: mul r2.w, r2.w, r4.w
  51: mul r4.xyz, r2.wwww, cb0[2].xyzx
  52: add r0.w, -r0.w, l(1.000000)
  53: mov r5.x, v3.w
  54: mov r5.y, v4.w
  55: mov r5.z, v5.w
  56: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  57: dp3 r1.w, r6.xyzx, r6.xyzx
  58: max r1.w, r1.w, l(0.001000)
  59: rsq r1.w, r1.w
  60: mul r6.xyz, r1.wwww, r6.xyzx
  61: dp3 r1.w, r2.xyzx, -r3.xyzx
  62: dp3_sat r2.w, r2.xyzx, r5.xyzx
  63: dp3_sat r2.x, r2.xyzx, r6.xyzx
  64: dp3_sat r2.y, r5.xyzx, r6.xyzx
  65: mul r2.z, r2.y, r2.y
  66: dp2 r2.z, r2.zzzz, r0.wwww
  67: add r2.z, r2.z, l(-0.500000)
  68: add r3.x, -r2.w, l(1.000000)
  69: mul r3.y, r3.x, r3.x
  70: mul r3.y, r3.y, r3.y
  71: mul r3.x, r3.x, r3.y
  72: mad r3.x, r2.z, r3.x, l(1.000000)
  73: add r3.y, -|r1.w|, l(1.000000)
  74: mul r3.z, r3.y, r3.y
  75: mul r3.z, r3.z, r3.z
  76: mul r3.y, r3.y, r3.z
  77: mad r2.z, r2.z, r3.y, l(1.000000)
  78: mul r2.z, r2.z, r3.x
  79: mul r2.z, r2.w, r2.z
  80: mul r0.w, r0.w, r0.w
  81: max r0.w, r0.w, l(0.002000)
  82: add r3.x, -r0.w, l(1.000000)
  83: mad r3.y, |r1.w|, r3.x, r0.w
  84: mad r3.x, r2.w, r3.x, r0.w
  85: mul r1.w, |r1.w|, r3.x
  86: mad r1.w, r2.w, r3.y, r1.w
  87: add r1.w, r1.w, l(0.000010)
  88: div r1.w, l(0.500000), r1.w
  89: mul r0.w, r0.w, r0.w
  90: mad r3.x, r2.x, r0.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r0.w, r0.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r0.w, r0.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xy, r0.yyyy, cb0[12].xyxx
  32: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  33: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  34: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 89 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: eq r2.w, cb2[0].x, l(1.000000)
  18: if_nz r2.w
  19:   eq r2.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r2.w, r3.w
  30:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  35: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  36: mul r2.w, r2.w, r4.w
  37: mul r4.xyz, r2.wwww, cb0[2].xyzx
  38: add r0.x, -r0.x, l(1.000000)
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  43: dp3 r1.w, r6.xyzx, r6.xyzx
  44: max r1.w, r1.w, l(0.001000)
  45: rsq r1.w, r1.w
  46: mul r6.xyz, r1.wwww, r6.xyzx
  47: dp3 r1.w, r2.xyzx, -r3.xyzx
  48: dp3_sat r2.w, r2.xyzx, r5.xyzx
  49: dp3_sat r2.x, r2.xyzx, r6.xyzx
  50: dp3_sat r2.y, r5.xyzx, r6.xyzx
  51: mul r2.z, r2.y, r2.y
  52: dp2 r2.z, r2.zzzz, r0.xxxx
  53: add r2.z, r2.z, l(-0.500000)
  54: add r3.x, -r2.w, l(1.000000)
  55: mul r3.y, r3.x, r3.x
  56: mul r3.y, r3.y, r3.y
  57: mul r3.x, r3.x, r3.y
  58: mad r3.x, r2.z, r3.x, l(1.000000)
  59: add r3.y, -|r1.w|, l(1.000000)
  60: mul r3.z, r3.y, r3.y
  61: mul r3.z, r3.z, r3.z
  62: mul r3.y, r3.y, r3.z
  63: mad r2.z, r2.z, r3.y, l(1.000000)
  64: mul r2.z, r2.z, r3.x
  65: mul r2.z, r2.w, r2.z
  66: mul r0.x, r0.x, r0.x
  67: max r0.x, r0.x, l(0.002000)
  68: add r3.x, -r0.x, l(1.000000)
  69: mad r3.y, |r1.w|, r3.x, r0.x
  70: mad r3.x, r2.w, r3.x, r0.x
  71: mul r1.w, |r1.w|, r3.x
  72: mad r1.w, r2.w, r3.y, r1.w
  73: add r1.w, r1.w, l(0.000010)
  74: div r1.w, l(0.500000), r1.w
  75: mul r0.x, r0.x, r0.x
  76: mad r3.x, r2.x, r0.x, -r2.x
  77: mad r2.x, r3.x, r2.x, l(1.000000)
  78: mul r0.x, r0.x, l(0.318310)
  79: mad r2.x, r2.x, r2.x, l(0.000000)
  80: div r0.x, r0.x, r2.x
  81: mul r0.x, r0.x, r1.w
  82: mul r0.x, r0.x, l(3.141593)
  83: max r0.x, r0.x, l(0.000100)
  84: sqrt r0.x, r0.x
  85: mul r0.x, r2.w, r0.x
  86: dp3 r1.w, r1.xyzx, r1.xyzx
  87: ne r1.w, r1.w, l(0.000000)
  88: and r1.w, r1.w, l(0x3f800000)
  89: mul r0.x, r0.x, r1.w
  90: mul r2.xzw, r2.zzzz, r4.xxyz
  91: mul r3.xyz, r4.xyzx, r0.xxxx
  92: add r0.x, -r2.y, l(1.000000)
  93: mul r1.w, r0.x, r0.x
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r1.w
  96: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  97: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
  98: mul r1.xyz, r1.xyzx, r3.xyzx
  99: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 100: mov o0.w, l(1.000000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  17: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  18: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  19: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r1.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r2.w, r5.xyzx, r5.xyzx
  27: sqrt r2.w, r2.w
  28: add r2.w, -r1.w, r2.w
  29: mad r1.w, cb3[25].w, r2.w, r1.w
  30: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  31: eq r2.w, cb5[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  49: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  50: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  51: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  52: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  53: div r5.xyz, r5.xyzx, r5.wwww
  54: sample_c_lz r3.w, r5.xyxx, t4.xxxx, s1, r5.z
  55: add r5.x, -cb3[24].x, l(1.000000)
  56: mad r3.w, r3.w, r5.x, cb3[24].x
  57: add r2.w, r2.w, -r3.w
  58: mad r1.w, r1.w, r2.w, r3.w
  59: lt r2.w, l(0.000000), r4.z
  60: and r2.w, r2.w, l(0x3f800000)
  61: div r5.xy, r4.xyxx, r4.wwww
  62: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  63: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  64: mul r2.w, r2.w, r5.w
  65: dp3 r3.w, r4.xyzx, r4.xyzx
  66: sample r4.xyzw, r3.wwww, t2.xyzw, s4
  67: mul r2.w, r2.w, r4.x
  68: mul r1.w, r1.w, r2.w
  69: mov r4.x, v3.w
  70: mov r4.y, v4.w
  71: mov r4.z, v5.w
  72: dp3 r2.w, r4.xyzx, r4.xyzx
  73: rsq r2.w, r2.w
  74: mul r5.xyz, r2.wwww, r4.xyzx
  75: mul r6.xyz, r1.wwww, cb0[2].xyzx
  76: add r0.w, -r0.w, l(1.000000)
  77: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  78: dp3 r1.w, r4.xyzx, r4.xyzx
  79: max r1.w, r1.w, l(0.001000)
  80: rsq r1.w, r1.w
  81: mul r4.xyz, r1.wwww, r4.xyzx
  82: dp3 r1.w, r2.xyzx, -r3.xyzx
  83: dp3_sat r2.w, r2.xyzx, r5.xyzx
  84: dp3_sat r2.x, r2.xyzx, r4.xyzx
  85: dp3_sat r2.y, r5.xyzx, r4.xyzx
  86: mul r2.z, r2.y, r2.y
  87: dp2 r2.z, r2.zzzz, r0.wwww
  88: add r2.z, r2.z, l(-0.500000)
  89: add r3.x, -r2.w, l(1.000000)
  90: mul r3.y, r3.x, r3.x
  91: mul r3.y, r3.y, r3.y
  92: mul r3.x, r3.x, r3.y
  93: mad r3.x, r2.z, r3.x, l(1.000000)
  94: add r3.y, -|r1.w|, l(1.000000)
  95: mul r3.z, r3.y, r3.y
  96: mul r3.z, r3.z, r3.z
  97: mul r3.y, r3.y, r3.z
  98: mad r2.z, r2.z, r3.y, l(1.000000)
  99: mul r2.z, r2.z, r3.x
 100: mul r2.z, r2.w, r2.z
 101: mul r0.w, r0.w, r0.w
 102: max r0.w, r0.w, l(0.002000)
 103: add r3.x, -r0.w, l(1.000000)
 104: mad r3.y, |r1.w|, r3.x, r0.w
 105: mad r3.x, r2.w, r3.x, r0.w
 106: mul r1.w, |r1.w|, r3.x
 107: mad r1.w, r2.w, r3.y, r1.w
 108: add r1.w, r1.w, l(0.000010)
 109: div r1.w, l(0.500000), r1.w
 110: mul r0.w, r0.w, r0.w
 111: mad r3.x, r2.x, r0.w, -r2.x
 112: mad r2.x, r3.x, r2.x, l(1.000000)
 113: mul r0.w, r0.w, l(0.318310)
 114: mad r2.x, r2.x, r2.x, l(0.000000)
 115: div r0.w, r0.w, r2.x
 116: mul r0.w, r0.w, r1.w
 117: mul r0.w, r0.w, l(3.141593)
 118: max r0.w, r0.w, l(0.000100)
 119: sqrt r0.w, r0.w
 120: mul r0.w, r2.w, r0.w
 121: dp3 r1.w, r0.xyzx, r0.xyzx
 122: ne r1.w, r1.w, l(0.000000)
 123: and r1.w, r1.w, l(0x3f800000)
 124: mul r0.w, r0.w, r1.w
 125: mul r2.xzw, r2.zzzz, r6.xxyz
 126: mul r3.xyz, r6.xyzx, r0.wwww
 127: add r0.w, -r2.y, l(1.000000)
 128: mul r1.w, r0.w, r0.w
 129: mul r1.w, r1.w, r1.w
 130: mul r0.w, r0.w, r1.w
 131: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 132: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 133: mul r0.xyz, r0.xyzx, r3.xyzx
 134: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 135: mov o0.w, l(1.000000)
 136: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  43: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  44: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  45: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 128 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  28: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  29: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  30: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r1.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r2.w, r5.xyzx, r5.xyzx
  38: sqrt r2.w, r2.w
  39: add r2.w, -r1.w, r2.w
  40: mad r1.w, cb3[25].w, r2.w, r1.w
  41: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  42: eq r2.w, cb5[0].x, l(1.000000)
  43: if_nz r2.w
  44:   eq r2.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r2.w, r3.w
  55:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  60: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  61: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  62: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  63: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  64: div r5.xyz, r5.xyzx, r5.wwww
  65: sample_c_lz r3.w, r5.xyxx, t5.xxxx, s1, r5.z
  66: add r5.x, -cb3[24].x, l(1.000000)
  67: mad r3.w, r3.w, r5.x, cb3[24].x
  68: add r2.w, r2.w, -r3.w
  69: mad r1.w, r1.w, r2.w, r3.w
  70: lt r2.w, l(0.000000), r4.z
  71: and r2.w, r2.w, l(0x3f800000)
  72: div r5.xy, r4.xyxx, r4.wwww
  73: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  74: sample r5.xyzw, r5.xyxx, t2.xyzw, s4
  75: mul r2.w, r2.w, r5.w
  76: dp3 r3.w, r4.xyzx, r4.xyzx
  77: sample r4.xyzw, r3.wwww, t3.xyzw, s5
  78: mul r2.w, r2.w, r4.x
  79: mul r1.w, r1.w, r2.w
  80: mov r4.x, v3.w
  81: mov r4.y, v4.w
  82: mov r4.z, v5.w
  83: dp3 r2.w, r4.xyzx, r4.xyzx
  84: rsq r2.w, r2.w
  85: mul r5.xyz, r2.wwww, r4.xyzx
  86: mul r6.xyz, r1.wwww, cb0[2].xyzx
  87: add r0.w, -r0.w, l(1.000000)
  88: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  89: dp3 r1.w, r4.xyzx, r4.xyzx
  90: max r1.w, r1.w, l(0.001000)
  91: rsq r1.w, r1.w
  92: mul r4.xyz, r1.wwww, r4.xyzx
  93: dp3 r1.w, r2.xyzx, -r3.xyzx
  94: dp3_sat r2.w, r2.xyzx, r5.xyzx
  95: dp3_sat r2.x, r2.xyzx, r4.xyzx
  96: dp3_sat r2.y, r5.xyzx, r4.xyzx
  97: mul r2.z, r2.y, r2.y
  98: dp2 r2.z, r2.zzzz, r0.wwww
  99: add r2.z, r2.z, l(-0.500000)
 100: add r3.x, -r2.w, l(1.000000)
 101: mul r3.y, r3.x, r3.x
 102: mul r3.y, r3.y, r3.y
 103: mul r3.x, r3.x, r3.y
 104: mad r3.x, r2.z, r3.x, l(1.000000)
 105: add r3.y, -|r1.w|, l(1.000000)
 106: mul r3.z, r3.y, r3.y
 107: mul r3.z, r3.z, r3.z
 108: mul r3.y, r3.y, r3.z
 109: mad r2.z, r2.z, r3.y, l(1.000000)
 110: mul r2.z, r2.z, r3.x
 111: mul r2.z, r2.w, r2.z
 112: mul r0.w, r0.w, r0.w
 113: max r0.w, r0.w, l(0.002000)
 114: add r3.x, -r0.w, l(1.000000)
 115: mad r3.y, |r1.w|, r3.x, r0.w
 116: mad r3.x, r2.w, r3.x, r0.w
 117: mul r1.w, |r1.w|, r3.x
 118: mad r1.w, r2.w, r3.y, r1.w
 119: add r1.w, r1.w, l(0.000010)
 120: div r1.w, l(0.500000), r1.w
 121: mul r0.w, r0.w, r0.w
 122: mad r3.x, r2.x, r0.w, -r2.x
 123: mad r2.x, r3.x, r2.x, l(1.000000)
 124: mul r0.w, r0.w, l(0.318310)
 125: mad r2.x, r2.x, r2.x, l(0.000000)
 126: div r0.w, r0.w, r2.x
 127: mul r0.w, r0.w, r1.w
 128: mul r0.w, r0.w, l(3.141593)
 129: max r0.w, r0.w, l(0.000100)
 130: sqrt r0.w, r0.w
 131: mul r0.w, r2.w, r0.w
 132: dp3 r1.w, r0.xyzx, r0.xyzx
 133: ne r1.w, r1.w, l(0.000000)
 134: and r1.w, r1.w, l(0x3f800000)
 135: mul r0.w, r0.w, r1.w
 136: mul r2.xzw, r2.zzzz, r6.xxyz
 137: mul r3.xyz, r6.xyzx, r0.wwww
 138: add r0.w, -r2.y, l(1.000000)
 139: mul r1.w, r0.w, r0.w
 140: mul r1.w, r1.w, r1.w
 141: mul r0.w, r0.w, r1.w
 142: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 143: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 144: mul r0.xyz, r0.xyzx, r3.xyzx
 145: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 146: mov o0.w, l(1.000000)
 147: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 116 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  14: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  47: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  48: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  49: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  50: div r5.xyz, r5.xyzx, r5.wwww
  51: sample_c_lz r3.w, r5.xyxx, t4.xxxx, s1, r5.z
  52: add r5.x, -cb3[24].x, l(1.000000)
  53: mad r3.w, r3.w, r5.x, cb3[24].x
  54: add r2.w, r2.w, -r3.w
  55: mad r1.w, r1.w, r2.w, r3.w
  56: lt r2.w, l(0.000000), r4.z
  57: and r2.w, r2.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  61: mul r2.w, r2.w, r5.w
  62: dp3 r3.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r3.wwww, t2.xyzw, s4
  64: mul r2.w, r2.w, r4.x
  65: mul r1.w, r1.w, r2.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r2.w, r4.xyzx, r4.xyzx
  70: rsq r2.w, r2.w
  71: mul r5.xyz, r2.wwww, r4.xyzx
  72: mul r6.xyz, r1.wwww, cb0[2].xyzx
  73: add r0.x, -r0.x, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.xxxx
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r0.x, r0.x, r0.x
  99: max r0.x, r0.x, l(0.002000)
 100: add r3.x, -r0.x, l(1.000000)
 101: mad r3.y, |r1.w|, r3.x, r0.x
 102: mad r3.x, r2.w, r3.x, r0.x
 103: mul r1.w, |r1.w|, r3.x
 104: mad r1.w, r2.w, r3.y, r1.w
 105: add r1.w, r1.w, l(0.000010)
 106: div r1.w, l(0.500000), r1.w
 107: mul r0.x, r0.x, r0.x
 108: mad r3.x, r2.x, r0.x, -r2.x
 109: mad r2.x, r3.x, r2.x, l(1.000000)
 110: mul r0.x, r0.x, l(0.318310)
 111: mad r2.x, r2.x, r2.x, l(0.000000)
 112: div r0.x, r0.x, r2.x
 113: mul r0.x, r0.x, r1.w
 114: mul r0.x, r0.x, l(3.141593)
 115: max r0.x, r0.x, l(0.000100)
 116: sqrt r0.x, r0.x
 117: mul r0.x, r2.w, r0.x
 118: dp3 r1.w, r1.xyzx, r1.xyzx
 119: ne r1.w, r1.w, l(0.000000)
 120: and r1.w, r1.w, l(0x3f800000)
 121: mul r0.x, r0.x, r1.w
 122: mul r2.xzw, r2.zzzz, r6.xxyz
 123: mul r3.xyz, r6.xyzx, r0.xxxx
 124: add r0.x, -r2.y, l(1.000000)
 125: mul r1.w, r0.x, r0.x
 126: mul r1.w, r1.w, r1.w
 127: mul r0.x, r0.x, r1.w
 128: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 130: mul r1.xyz, r1.xyzx, r3.xyzx
 131: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[14].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  12: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  32: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 147 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Cutoff at 160
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.w, r0.w, cb0[9].w, -cb0[10].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[13].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[13].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  17: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  18: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  19: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r1.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r2.w, r5.xyzx, r5.xyzx
  27: sqrt r2.w, r2.w
  28: add r2.w, -r1.w, r2.w
  29: mad r1.w, cb3[25].w, r2.w, r1.w
  30: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  31: eq r2.w, cb5[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  49: lt r3.w, r1.w, l(0.990000)
  50: if_nz r3.w
  51:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  52:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  53:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  54:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  55:   div r5.xyz, r5.xyzx, r5.wwww
  56:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  57:   round_ni r6.xy, r6.xyxx
  58:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  59:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  60:   mul r8.xw, r7.xxxz, r7.xxxz
  61:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  62:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  63:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  64:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  65:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  66:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  67:   mov r9.x, r6.z
  68:   mov r9.y, r7.x
  69:   mov r9.z, r5.x
  70:   mov r9.w, r8.x
  71:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   mov r8.x, r6.w
  73:   mov r8.y, r7.z
  74:   mov r8.z, r5.y
  75:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  76:   add r8.xyzw, r9.ywyw, r9.xzxz
  77:   add r10.xyzw, r7.yyww, r7.xxzz
  78:   div r5.xy, r9.ywyy, r8.zwzz
  79:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  80:   div r6.zw, r7.yyyw, r10.yyyw
  81:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  82:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  83:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  84:   mul r8.xyzw, r8.xyzw, r10.xyzw
  85:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  86:   sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r5.z
  87:   sample_c_lz r5.x, r9.zwzz, t4.xxxx, s1, r5.z
  88:   mul r5.x, r5.x, r8.y
  89:   mad r3.w, r8.x, r3.w, r5.x
  90:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  91:   sample_c_lz r5.x, r6.xyxx, t4.xxxx, s1, r5.z
  92:   mad r3.w, r8.z, r5.x, r3.w
  93:   sample_c_lz r5.x, r6.zwzz, t4.xxxx, s1, r5.z
  94:   mad r3.w, r8.w, r5.x, r3.w
  95:   add r5.x, -cb3[24].x, l(1.000000)
  96:   mad r3.w, r3.w, r5.x, cb3[24].x
  97: else 
  98:   mov r3.w, l(1.000000)
  99: endif 
 100: add r2.w, r2.w, -r3.w
 101: mad r1.w, r1.w, r2.w, r3.w
 102: lt r2.w, l(0.000000), r4.z
 103: and r2.w, r2.w, l(0x3f800000)
 104: div r5.xy, r4.xyxx, r4.wwww
 105: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 106: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 107: mul r2.w, r2.w, r5.w
 108: dp3 r3.w, r4.xyzx, r4.xyzx
 109: sample r4.xyzw, r3.wwww, t2.xyzw, s4
 110: mul r2.w, r2.w, r4.x
 111: mul r1.w, r1.w, r2.w
 112: mov r4.x, v3.w
 113: mov r4.y, v4.w
 114: mov r4.z, v5.w
 115: dp3 r2.w, r4.xyzx, r4.xyzx
 116: rsq r2.w, r2.w
 117: mul r5.xyz, r2.wwww, r4.xyzx
 118: mul r6.xyz, r1.wwww, cb0[2].xyzx
 119: add r0.w, -r0.w, l(1.000000)
 120: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 121: dp3 r1.w, r4.xyzx, r4.xyzx
 122: max r1.w, r1.w, l(0.001000)
 123: rsq r1.w, r1.w
 124: mul r4.xyz, r1.wwww, r4.xyzx
 125: dp3 r1.w, r2.xyzx, -r3.xyzx
 126: dp3_sat r2.w, r2.xyzx, r5.xyzx
 127: dp3_sat r2.x, r2.xyzx, r4.xyzx
 128: dp3_sat r2.y, r5.xyzx, r4.xyzx
 129: mul r2.z, r2.y, r2.y
 130: dp2 r2.z, r2.zzzz, r0.wwww
 131: add r2.z, r2.z, l(-0.500000)
 132: add r3.x, -r2.w, l(1.000000)
 133: mul r3.y, r3.x, r3.x
 134: mul r3.y, r3.y, r3.y
 135: mul r3.x, r3.x, r3.y
 136: mad r3.x, r2.z, r3.x, l(1.000000)
 137: add r3.y, -|r1.w|, l(1.000000)
 138: mul r3.z, r3.y, r3.y
 139: mul r3.z, r3.z, r3.z
 140: mul r3.y, r3.y, r3.z
 141: mad r2.z, r2.z, r3.y, l(1.000000)
 142: mul r2.z, r2.z, r3.x
 143: mul r2.z, r2.w, r2.z
 144: mul r0.w, r0.w, r0.w
 145: max r0.w, r0.w, l(0.002000)
 146: add r3.x, -r0.w, l(1.000000)
 147: mad r3.y, |r1.w|, r3.x, r0.w
 148: mad r3.x, r2.w, r3.x, r0.w
 149: mul r1.w, |r1.w|, r3.x
 150: mad r1.w, r2.w, r3.y, r1.w
 151: add r1.w, r1.w, l(0.000010)
 152: div r1.w, l(0.500000), r1.w
 153: mul r0.w, r0.w, r0.w
 154: mad r3.x, r2.x, r0.w, -r2.x
 155: mad r2.x, r3.x, r2.x, l(1.000000)
 156: mul r0.w, r0.w, l(0.318310)
 157: mad r2.x, r2.x, r2.x, l(0.000000)
 158: div r0.w, r0.w, r2.x
 159: mul r0.w, r0.w, r1.w
 160: mul r0.w, r0.w, l(3.141593)
 161: max r0.w, r0.w, l(0.000100)
 162: sqrt r0.w, r0.w
 163: mul r0.w, r2.w, r0.w
 164: dp3 r1.w, r0.xyzx, r0.xyzx
 165: ne r1.w, r1.w, l(0.000000)
 166: and r1.w, r1.w, l(0x3f800000)
 167: mul r0.w, r0.w, r1.w
 168: mul r2.xzw, r2.zzzz, r6.xxyz
 169: mul r3.xyz, r6.xyzx, r0.wwww
 170: add r0.w, -r2.y, l(1.000000)
 171: mul r1.w, r0.w, r0.w
 172: mul r1.w, r1.w, r1.w
 173: mul r0.w, r0.w, r1.w
 174: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 176: mul r0.xyz, r0.xyzx, r3.xyzx
 177: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 178: mov o0.w, l(1.000000)
 179: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[14].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  12: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  43: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  44: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  45: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 157 math, 11 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Cutoff at 160
  Float _BumpScale at 208
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.w, r0.w, cb0[9].w, -cb0[10].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[13].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[13].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[13].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  28: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  29: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  30: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r1.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r2.w, r5.xyzx, r5.xyzx
  38: sqrt r2.w, r2.w
  39: add r2.w, -r1.w, r2.w
  40: mad r1.w, cb3[25].w, r2.w, r1.w
  41: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  42: eq r2.w, cb5[0].x, l(1.000000)
  43: if_nz r2.w
  44:   eq r2.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r2.w, r3.w
  55:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  60: lt r3.w, r1.w, l(0.990000)
  61: if_nz r3.w
  62:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  63:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  64:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  65:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  66:   div r5.xyz, r5.xyzx, r5.wwww
  67:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  68:   round_ni r6.xy, r6.xyxx
  69:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  70:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  71:   mul r8.xw, r7.xxxz, r7.xxxz
  72:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  73:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  74:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  76:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  78:   mov r9.x, r6.z
  79:   mov r9.y, r7.x
  80:   mov r9.z, r5.x
  81:   mov r9.w, r8.x
  82:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  83:   mov r8.x, r6.w
  84:   mov r8.y, r7.z
  85:   mov r8.z, r5.y
  86:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  87:   add r8.xyzw, r9.ywyw, r9.xzxz
  88:   add r10.xyzw, r7.yyww, r7.xxzz
  89:   div r5.xy, r9.ywyy, r8.zwzz
  90:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  91:   div r6.zw, r7.yyyw, r10.yyyw
  92:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  93:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  94:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  95:   mul r8.xyzw, r8.xyzw, r10.xyzw
  96:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  97:   sample_c_lz r3.w, r9.xyxx, t5.xxxx, s1, r5.z
  98:   sample_c_lz r5.x, r9.zwzz, t5.xxxx, s1, r5.z
  99:   mul r5.x, r5.x, r8.y
 100:   mad r3.w, r8.x, r3.w, r5.x
 101:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
 102:   sample_c_lz r5.x, r6.xyxx, t5.xxxx, s1, r5.z
 103:   mad r3.w, r8.z, r5.x, r3.w
 104:   sample_c_lz r5.x, r6.zwzz, t5.xxxx, s1, r5.z
 105:   mad r3.w, r8.w, r5.x, r3.w
 106:   add r5.x, -cb3[24].x, l(1.000000)
 107:   mad r3.w, r3.w, r5.x, cb3[24].x
 108: else 
 109:   mov r3.w, l(1.000000)
 110: endif 
 111: add r2.w, r2.w, -r3.w
 112: mad r1.w, r1.w, r2.w, r3.w
 113: lt r2.w, l(0.000000), r4.z
 114: and r2.w, r2.w, l(0x3f800000)
 115: div r5.xy, r4.xyxx, r4.wwww
 116: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 117: sample r5.xyzw, r5.xyxx, t2.xyzw, s4
 118: mul r2.w, r2.w, r5.w
 119: dp3 r3.w, r4.xyzx, r4.xyzx
 120: sample r4.xyzw, r3.wwww, t3.xyzw, s5
 121: mul r2.w, r2.w, r4.x
 122: mul r1.w, r1.w, r2.w
 123: mov r4.x, v3.w
 124: mov r4.y, v4.w
 125: mov r4.z, v5.w
 126: dp3 r2.w, r4.xyzx, r4.xyzx
 127: rsq r2.w, r2.w
 128: mul r5.xyz, r2.wwww, r4.xyzx
 129: mul r6.xyz, r1.wwww, cb0[2].xyzx
 130: add r0.w, -r0.w, l(1.000000)
 131: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 132: dp3 r1.w, r4.xyzx, r4.xyzx
 133: max r1.w, r1.w, l(0.001000)
 134: rsq r1.w, r1.w
 135: mul r4.xyz, r1.wwww, r4.xyzx
 136: dp3 r1.w, r2.xyzx, -r3.xyzx
 137: dp3_sat r2.w, r2.xyzx, r5.xyzx
 138: dp3_sat r2.x, r2.xyzx, r4.xyzx
 139: dp3_sat r2.y, r5.xyzx, r4.xyzx
 140: mul r2.z, r2.y, r2.y
 141: dp2 r2.z, r2.zzzz, r0.wwww
 142: add r2.z, r2.z, l(-0.500000)
 143: add r3.x, -r2.w, l(1.000000)
 144: mul r3.y, r3.x, r3.x
 145: mul r3.y, r3.y, r3.y
 146: mul r3.x, r3.x, r3.y
 147: mad r3.x, r2.z, r3.x, l(1.000000)
 148: add r3.y, -|r1.w|, l(1.000000)
 149: mul r3.z, r3.y, r3.y
 150: mul r3.z, r3.z, r3.z
 151: mul r3.y, r3.y, r3.z
 152: mad r2.z, r2.z, r3.y, l(1.000000)
 153: mul r2.z, r2.z, r3.x
 154: mul r2.z, r2.w, r2.z
 155: mul r0.w, r0.w, r0.w
 156: max r0.w, r0.w, l(0.002000)
 157: add r3.x, -r0.w, l(1.000000)
 158: mad r3.y, |r1.w|, r3.x, r0.w
 159: mad r3.x, r2.w, r3.x, r0.w
 160: mul r1.w, |r1.w|, r3.x
 161: mad r1.w, r2.w, r3.y, r1.w
 162: add r1.w, r1.w, l(0.000010)
 163: div r1.w, l(0.500000), r1.w
 164: mul r0.w, r0.w, r0.w
 165: mad r3.x, r2.x, r0.w, -r2.x
 166: mad r2.x, r3.x, r2.x, l(1.000000)
 167: mul r0.w, r0.w, l(0.318310)
 168: mad r2.x, r2.x, r2.x, l(0.000000)
 169: div r0.w, r0.w, r2.x
 170: mul r0.w, r0.w, r1.w
 171: mul r0.w, r0.w, l(3.141593)
 172: max r0.w, r0.w, l(0.000100)
 173: sqrt r0.w, r0.w
 174: mul r0.w, r2.w, r0.w
 175: dp3 r1.w, r0.xyzx, r0.xyzx
 176: ne r1.w, r1.w, l(0.000000)
 177: and r1.w, r1.w, l(0x3f800000)
 178: mul r0.w, r0.w, r1.w
 179: mul r2.xzw, r2.zzzz, r6.xxyz
 180: mul r3.xyz, r6.xyzx, r0.wwww
 181: add r0.w, -r2.y, l(1.000000)
 182: mul r1.w, r0.w, r0.w
 183: mul r1.w, r1.w, r1.w
 184: mul r0.w, r0.w, r1.w
 185: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 187: mul r0.xyz, r0.xyzx, r3.xyzx
 188: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 189: mov o0.w, l(1.000000)
 190: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[14].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  12: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  32: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 145 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: add r0.x, -cb0[13].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[9].xxyz
   3: mad r1.xyz, cb0[9].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[13].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[13].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  14: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: lt r3.w, r1.w, l(0.990000)
  47: if_nz r3.w
  48:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  49:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  50:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  51:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  52:   div r5.xyz, r5.xyzx, r5.wwww
  53:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  54:   round_ni r6.xy, r6.xyxx
  55:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  56:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  57:   mul r8.xw, r7.xxxz, r7.xxxz
  58:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  59:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  60:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  61:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  62:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  63:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  64:   mov r9.x, r6.z
  65:   mov r9.y, r7.x
  66:   mov r9.z, r5.x
  67:   mov r9.w, r8.x
  68:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  69:   mov r8.x, r6.w
  70:   mov r8.y, r7.z
  71:   mov r8.z, r5.y
  72:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  73:   add r8.xyzw, r9.ywyw, r9.xzxz
  74:   add r10.xyzw, r7.yyww, r7.xxzz
  75:   div r5.xy, r9.ywyy, r8.zwzz
  76:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  77:   div r6.zw, r7.yyyw, r10.yyyw
  78:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  79:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  80:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  81:   mul r8.xyzw, r8.xyzw, r10.xyzw
  82:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  83:   sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r5.z
  84:   sample_c_lz r5.x, r9.zwzz, t4.xxxx, s1, r5.z
  85:   mul r5.x, r5.x, r8.y
  86:   mad r3.w, r8.x, r3.w, r5.x
  87:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  88:   sample_c_lz r5.x, r6.xyxx, t4.xxxx, s1, r5.z
  89:   mad r3.w, r8.z, r5.x, r3.w
  90:   sample_c_lz r5.x, r6.zwzz, t4.xxxx, s1, r5.z
  91:   mad r3.w, r8.w, r5.x, r3.w
  92:   add r5.x, -cb3[24].x, l(1.000000)
  93:   mad r3.w, r3.w, r5.x, cb3[24].x
  94: else 
  95:   mov r3.w, l(1.000000)
  96: endif 
  97: add r2.w, r2.w, -r3.w
  98: mad r1.w, r1.w, r2.w, r3.w
  99: lt r2.w, l(0.000000), r4.z
 100: and r2.w, r2.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 104: mul r2.w, r2.w, r5.w
 105: dp3 r3.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r3.wwww, t2.xyzw, s4
 107: mul r2.w, r2.w, r4.x
 108: mul r1.w, r1.w, r2.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r2.w, r4.xyzx, r4.xyzx
 113: rsq r2.w, r2.w
 114: mul r5.xyz, r2.wwww, r4.xyzx
 115: mul r6.xyz, r1.wwww, cb0[2].xyzx
 116: add r0.x, -r0.x, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.xxxx
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r0.x, r0.x, r0.x
 142: max r0.x, r0.x, l(0.002000)
 143: add r3.x, -r0.x, l(1.000000)
 144: mad r3.y, |r1.w|, r3.x, r0.x
 145: mad r3.x, r2.w, r3.x, r0.x
 146: mul r1.w, |r1.w|, r3.x
 147: mad r1.w, r2.w, r3.y, r1.w
 148: add r1.w, r1.w, l(0.000010)
 149: div r1.w, l(0.500000), r1.w
 150: mul r0.x, r0.x, r0.x
 151: mad r3.x, r2.x, r0.x, -r2.x
 152: mad r2.x, r3.x, r2.x, l(1.000000)
 153: mul r0.x, r0.x, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r0.x, r0.x, r2.x
 156: mul r0.x, r0.x, r1.w
 157: mul r0.x, r0.x, l(3.141593)
 158: max r0.x, r0.x, l(0.000100)
 159: sqrt r0.x, r0.x
 160: mul r0.x, r2.w, r0.x
 161: dp3 r1.w, r1.xyzx, r1.xyzx
 162: ne r1.w, r1.w, l(0.000000)
 163: and r1.w, r1.w, l(0x3f800000)
 164: mul r0.x, r0.x, r1.w
 165: mul r2.xzw, r2.zzzz, r6.xxyz
 166: mul r3.xyz, r6.xyzx, r0.xxxx
 167: add r0.x, -r2.y, l(1.000000)
 168: mul r1.w, r0.x, r0.x
 169: mul r1.w, r1.w, r1.w
 170: mul r0.x, r0.x, r1.w
 171: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 172: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 173: mul r1.xyz, r1.xyzx, r3.xyzx
 174: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r2.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r3.w, r4.xyzx, r4.xyzx
  23: sqrt r3.w, r3.w
  24: add r3.w, -r2.w, r3.w
  25: mad r2.w, cb3[25].w, r3.w, r2.w
  26: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  27: eq r3.w, cb5[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r3.w, r4.y
  40:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  45: div r4.xy, v7.xyxx, v7.wwww
  46: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  47: add r3.w, r3.w, -r4.x
  48: mad r2.w, r2.w, r3.w, r4.x
  49: mul r4.xyz, r2.wwww, cb0[2].xyzx
  50: add r0.w, -r0.w, l(1.000000)
  51: mov r5.x, v3.w
  52: mov r5.y, v4.w
  53: mov r5.z, v5.w
  54: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  55: dp3 r1.w, r6.xyzx, r6.xyzx
  56: max r1.w, r1.w, l(0.001000)
  57: rsq r1.w, r1.w
  58: mul r6.xyz, r1.wwww, r6.xyzx
  59: dp3 r1.w, r2.xyzx, -r3.xyzx
  60: dp3_sat r2.w, r2.xyzx, r5.xyzx
  61: dp3_sat r2.x, r2.xyzx, r6.xyzx
  62: dp3_sat r2.y, r5.xyzx, r6.xyzx
  63: mul r2.z, r2.y, r2.y
  64: dp2 r2.z, r2.zzzz, r0.wwww
  65: add r2.z, r2.z, l(-0.500000)
  66: add r3.x, -r2.w, l(1.000000)
  67: mul r3.y, r3.x, r3.x
  68: mul r3.y, r3.y, r3.y
  69: mul r3.x, r3.x, r3.y
  70: mad r3.x, r2.z, r3.x, l(1.000000)
  71: add r3.y, -|r1.w|, l(1.000000)
  72: mul r3.z, r3.y, r3.y
  73: mul r3.z, r3.z, r3.z
  74: mul r3.y, r3.y, r3.z
  75: mad r2.z, r2.z, r3.y, l(1.000000)
  76: mul r2.z, r2.z, r3.x
  77: mul r2.z, r2.w, r2.z
  78: mul r0.w, r0.w, r0.w
  79: max r0.w, r0.w, l(0.002000)
  80: add r3.x, -r0.w, l(1.000000)
  81: mad r3.y, |r1.w|, r3.x, r0.w
  82: mad r3.x, r2.w, r3.x, r0.w
  83: mul r1.w, |r1.w|, r3.x
  84: mad r1.w, r2.w, r3.y, r1.w
  85: add r1.w, r1.w, l(0.000010)
  86: div r1.w, l(0.500000), r1.w
  87: mul r0.w, r0.w, r0.w
  88: mad r3.x, r2.x, r0.w, -r2.x
  89: mad r2.x, r3.x, r2.x, l(1.000000)
  90: mul r0.w, r0.w, l(0.318310)
  91: mad r2.x, r2.x, r2.x, l(0.000000)
  92: div r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, r1.w
  94: mul r0.w, r0.w, l(3.141593)
  95: max r0.w, r0.w, l(0.000100)
  96: sqrt r0.w, r0.w
  97: mul r0.w, r2.w, r0.w
  98: dp3 r1.w, r0.xyzx, r0.xyzx
  99: ne r1.w, r1.w, l(0.000000)
 100: and r1.w, r1.w, l(0x3f800000)
 101: mul r0.w, r0.w, r1.w
 102: mul r2.xzw, r2.zzzz, r4.xxyz
 103: mul r3.xyz, r4.xyzx, r0.wwww
 104: add r0.w, -r2.y, l(1.000000)
 105: mul r1.w, r0.w, r0.w
 106: mul r1.w, r1.w, r1.w
 107: mul r0.w, r0.w, r1.w
 108: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 109: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 110: mul r0.xyz, r0.xyzx, r3.xyzx
 111: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 112: mov o0.w, l(1.000000)
 113: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  28: mov r5.x, cb4[9].z
  29: mov r5.y, cb4[10].z
  30: mov r5.z, cb4[11].z
  31: dp3 r2.w, r4.xyzx, r5.xyzx
  32: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  33: dp3 r3.w, r4.xyzx, r4.xyzx
  34: sqrt r3.w, r3.w
  35: add r3.w, -r2.w, r3.w
  36: mad r2.w, cb3[25].w, r3.w, r2.w
  37: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  38: eq r3.w, cb5[0].x, l(1.000000)
  39: if_nz r3.w
  40:   eq r3.w, cb5[0].y, l(1.000000)
  41:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  42:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  43:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  44:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  45:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  46:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  47:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  48:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  49:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  50:   max r4.x, r3.w, r4.y
  51:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  52: else 
  53:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  56: div r4.xy, v7.xyxx, v7.wwww
  57: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  58: add r3.w, r3.w, -r4.x
  59: mad r2.w, r2.w, r3.w, r4.x
  60: mul r4.xyz, r2.wwww, cb0[2].xyzx
  61: add r0.w, -r0.w, l(1.000000)
  62: mov r5.x, v3.w
  63: mov r5.y, v4.w
  64: mov r5.z, v5.w
  65: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  66: dp3 r1.w, r6.xyzx, r6.xyzx
  67: max r1.w, r1.w, l(0.001000)
  68: rsq r1.w, r1.w
  69: mul r6.xyz, r1.wwww, r6.xyzx
  70: dp3 r1.w, r2.xyzx, -r3.xyzx
  71: dp3_sat r2.w, r2.xyzx, r5.xyzx
  72: dp3_sat r2.x, r2.xyzx, r6.xyzx
  73: dp3_sat r2.y, r5.xyzx, r6.xyzx
  74: mul r2.z, r2.y, r2.y
  75: dp2 r2.z, r2.zzzz, r0.wwww
  76: add r2.z, r2.z, l(-0.500000)
  77: add r3.x, -r2.w, l(1.000000)
  78: mul r3.y, r3.x, r3.x
  79: mul r3.y, r3.y, r3.y
  80: mul r3.x, r3.x, r3.y
  81: mad r3.x, r2.z, r3.x, l(1.000000)
  82: add r3.y, -|r1.w|, l(1.000000)
  83: mul r3.z, r3.y, r3.y
  84: mul r3.z, r3.z, r3.z
  85: mul r3.y, r3.y, r3.z
  86: mad r2.z, r2.z, r3.y, l(1.000000)
  87: mul r2.z, r2.z, r3.x
  88: mul r2.z, r2.w, r2.z
  89: mul r0.w, r0.w, r0.w
  90: max r0.w, r0.w, l(0.002000)
  91: add r3.x, -r0.w, l(1.000000)
  92: mad r3.y, |r1.w|, r3.x, r0.w
  93: mad r3.x, r2.w, r3.x, r0.w
  94: mul r1.w, |r1.w|, r3.x
  95: mad r1.w, r2.w, r3.y, r1.w
  96: add r1.w, r1.w, l(0.000010)
  97: div r1.w, l(0.500000), r1.w
  98: mul r0.w, r0.w, r0.w
  99: mad r3.x, r2.x, r0.w, -r2.x
 100: mad r2.x, r3.x, r2.x, l(1.000000)
 101: mul r0.w, r0.w, l(0.318310)
 102: mad r2.x, r2.x, r2.x, l(0.000000)
 103: div r0.w, r0.w, r2.x
 104: mul r0.w, r0.w, r1.w
 105: mul r0.w, r0.w, l(3.141593)
 106: max r0.w, r0.w, l(0.000100)
 107: sqrt r0.w, r0.w
 108: mul r0.w, r2.w, r0.w
 109: dp3 r1.w, r0.xyzx, r0.xyzx
 110: ne r1.w, r1.w, l(0.000000)
 111: and r1.w, r1.w, l(0x3f800000)
 112: mul r0.w, r0.w, r1.w
 113: mul r2.xzw, r2.zzzz, r4.xxyz
 114: mul r3.xyz, r4.xyzx, r0.wwww
 115: add r0.w, -r2.y, l(1.000000)
 116: mul r1.w, r0.w, r0.w
 117: mul r1.w, r1.w, r1.w
 118: mul r0.w, r0.w, r1.w
 119: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 120: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 121: mul r0.xyz, r0.xyzx, r3.xyzx
 122: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 123: mov o0.w, l(1.000000)
 124: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 95 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  14: mov r5.x, cb4[9].z
  15: mov r5.y, cb4[10].z
  16: mov r5.z, cb4[11].z
  17: dp3 r2.w, r4.xyzx, r5.xyzx
  18: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  19: dp3 r3.w, r4.xyzx, r4.xyzx
  20: sqrt r3.w, r3.w
  21: add r3.w, -r2.w, r3.w
  22: mad r2.w, cb3[25].w, r3.w, r2.w
  23: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  24: eq r3.w, cb5[0].x, l(1.000000)
  25: if_nz r3.w
  26:   eq r3.w, cb5[0].y, l(1.000000)
  27:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  28:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  29:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  31:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  32:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  33:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  34:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  35:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r4.x, r3.w, r4.y
  37:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  38: else 
  39:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  42: div r4.xy, v7.xyxx, v7.wwww
  43: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  44: add r3.w, r3.w, -r4.x
  45: mad r2.w, r2.w, r3.w, r4.x
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: add r0.x, -r0.x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.xxxx
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r0.x, r0.x, r0.x
  76: max r0.x, r0.x, l(0.002000)
  77: add r3.x, -r0.x, l(1.000000)
  78: mad r3.y, |r1.w|, r3.x, r0.x
  79: mad r3.x, r2.w, r3.x, r0.x
  80: mul r1.w, |r1.w|, r3.x
  81: mad r1.w, r2.w, r3.y, r1.w
  82: add r1.w, r1.w, l(0.000010)
  83: div r1.w, l(0.500000), r1.w
  84: mul r0.x, r0.x, r0.x
  85: mad r3.x, r2.x, r0.x, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r0.x, r0.x, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r0.x, r0.x, r2.x
  90: mul r0.x, r0.x, r1.w
  91: mul r0.x, r0.x, l(3.141593)
  92: max r0.x, r0.x, l(0.000100)
  93: sqrt r0.x, r0.x
  94: mul r0.x, r2.w, r0.x
  95: dp3 r1.w, r1.xyzx, r1.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xzw, r2.zzzz, r4.xxyz
 100: mul r3.xyz, r4.xyzx, r0.xxxx
 101: add r0.x, -r2.y, l(1.000000)
 102: mul r1.w, r0.x, r0.x
 103: mul r1.w, r1.w, r1.w
 104: mul r0.x, r0.x, r1.w
 105: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 107: mul r1.xyz, r1.xyzx, r3.xyzx
 108: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 102 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xy, v6.yyyy, cb0[12].xyxx
  17: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  18: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  19: add r4.xy, r4.xyxx, cb0[14].xyxx
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r2.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r3.w, r5.xyzx, r5.xyzx
  27: sqrt r3.w, r3.w
  28: add r3.w, -r2.w, r3.w
  29: mad r2.w, cb3[25].w, r3.w, r2.w
  30: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  31: eq r3.w, cb5[0].x, l(1.000000)
  32: if_nz r3.w
  33:   eq r3.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r3.w, r4.z
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  49: div r4.zw, v8.xxxy, v8.wwww
  50: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  51: add r3.w, r3.w, -r5.x
  52: mad r2.w, r2.w, r3.w, r5.x
  53: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  54: mul r2.w, r2.w, r4.w
  55: mul r4.xyz, r2.wwww, cb0[2].xyzx
  56: add r0.w, -r0.w, l(1.000000)
  57: mov r5.x, v3.w
  58: mov r5.y, v4.w
  59: mov r5.z, v5.w
  60: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  61: dp3 r1.w, r6.xyzx, r6.xyzx
  62: max r1.w, r1.w, l(0.001000)
  63: rsq r1.w, r1.w
  64: mul r6.xyz, r1.wwww, r6.xyzx
  65: dp3 r1.w, r2.xyzx, -r3.xyzx
  66: dp3_sat r2.w, r2.xyzx, r5.xyzx
  67: dp3_sat r2.x, r2.xyzx, r6.xyzx
  68: dp3_sat r2.y, r5.xyzx, r6.xyzx
  69: mul r2.z, r2.y, r2.y
  70: dp2 r2.z, r2.zzzz, r0.wwww
  71: add r2.z, r2.z, l(-0.500000)
  72: add r3.x, -r2.w, l(1.000000)
  73: mul r3.y, r3.x, r3.x
  74: mul r3.y, r3.y, r3.y
  75: mul r3.x, r3.x, r3.y
  76: mad r3.x, r2.z, r3.x, l(1.000000)
  77: add r3.y, -|r1.w|, l(1.000000)
  78: mul r3.z, r3.y, r3.y
  79: mul r3.z, r3.z, r3.z
  80: mul r3.y, r3.y, r3.z
  81: mad r2.z, r2.z, r3.y, l(1.000000)
  82: mul r2.z, r2.z, r3.x
  83: mul r2.z, r2.w, r2.z
  84: mul r0.w, r0.w, r0.w
  85: max r0.w, r0.w, l(0.002000)
  86: add r3.x, -r0.w, l(1.000000)
  87: mad r3.y, |r1.w|, r3.x, r0.w
  88: mad r3.x, r2.w, r3.x, r0.w
  89: mul r1.w, |r1.w|, r3.x
  90: mad r1.w, r2.w, r3.y, r1.w
  91: add r1.w, r1.w, l(0.000010)
  92: div r1.w, l(0.500000), r1.w
  93: mul r0.w, r0.w, r0.w
  94: mad r3.x, r2.x, r0.w, -r2.x
  95: mad r2.x, r3.x, r2.x, l(1.000000)
  96: mul r0.w, r0.w, l(0.318310)
  97: mad r2.x, r2.x, r2.x, l(0.000000)
  98: div r0.w, r0.w, r2.x
  99: mul r0.w, r0.w, r1.w
 100: mul r0.w, r0.w, l(3.141593)
 101: max r0.w, r0.w, l(0.000100)
 102: sqrt r0.w, r0.w
 103: mul r0.w, r2.w, r0.w
 104: dp3 r1.w, r0.xyzx, r0.xyzx
 105: ne r1.w, r1.w, l(0.000000)
 106: and r1.w, r1.w, l(0x3f800000)
 107: mul r0.w, r0.w, r1.w
 108: mul r2.xzw, r2.zzzz, r4.xxyz
 109: mul r3.xyz, r4.xyzx, r0.wwww
 110: add r0.w, -r2.y, l(1.000000)
 111: mul r1.w, r0.w, r0.w
 112: mul r1.w, r1.w, r1.w
 113: mul r0.w, r0.w, r1.w
 114: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 116: mul r0.xyz, r0.xyzx, r3.xyzx
 117: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 118: mov o0.w, l(1.000000)
 119: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mul r3.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
  22: mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
  23: dp3 r2.w, r3.xyzx, r3.xyzx
  24: rsq r2.w, r2.w
  25: mul r3.xyz, r2.wwww, r3.xyzx
  26: mov o3.xyz, r3.xyzx
  27: mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  28: mov o6.xyz, r2.xyzx
  29: mov o3.w, r4.x
  30: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r2.w, r2.xyzx, r2.xyzx
  34: rsq r2.w, r2.w
  35: mul r2.xyz, r2.wwww, r2.xyzx
  36: mul r5.xyz, r3.yzxy, r2.zxyz
  37: mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r2.x, v4.w, cb3[9].w
  40: mul o4.xyz, r2.xxxx, r3.xyzx
  41: mov o4.w, r4.y
  42: mov o5.w, r4.z
  43: mul r2.xy, r0.yyyy, cb0[12].xyxx
  44: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  45: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  46: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  47: mul r0.x, r1.y, cb1[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o8.zw, r1.zzzw
  51: add o8.xy, r0.zzzz, r0.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 112 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xy, v6.yyyy, cb0[12].xyxx
  28: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  29: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  30: add r4.xy, r4.xyxx, cb0[14].xyxx
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r2.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r3.w, r5.xyzx, r5.xyzx
  38: sqrt r3.w, r3.w
  39: add r3.w, -r2.w, r3.w
  40: mad r2.w, cb3[25].w, r3.w, r2.w
  41: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  42: eq r3.w, cb5[0].x, l(1.000000)
  43: if_nz r3.w
  44:   eq r3.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r3.w, r4.z
  55:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  60: div r4.zw, v8.xxxy, v8.wwww
  61: sample r5.xyzw, r4.zwzz, t2.xyzw, s3
  62: add r3.w, r3.w, -r5.x
  63: mad r2.w, r2.w, r3.w, r5.x
  64: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  65: mul r2.w, r2.w, r4.w
  66: mul r4.xyz, r2.wwww, cb0[2].xyzx
  67: add r0.w, -r0.w, l(1.000000)
  68: mov r5.x, v3.w
  69: mov r5.y, v4.w
  70: mov r5.z, v5.w
  71: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  72: dp3 r1.w, r6.xyzx, r6.xyzx
  73: max r1.w, r1.w, l(0.001000)
  74: rsq r1.w, r1.w
  75: mul r6.xyz, r1.wwww, r6.xyzx
  76: dp3 r1.w, r2.xyzx, -r3.xyzx
  77: dp3_sat r2.w, r2.xyzx, r5.xyzx
  78: dp3_sat r2.x, r2.xyzx, r6.xyzx
  79: dp3_sat r2.y, r5.xyzx, r6.xyzx
  80: mul r2.z, r2.y, r2.y
  81: dp2 r2.z, r2.zzzz, r0.wwww
  82: add r2.z, r2.z, l(-0.500000)
  83: add r3.x, -r2.w, l(1.000000)
  84: mul r3.y, r3.x, r3.x
  85: mul r3.y, r3.y, r3.y
  86: mul r3.x, r3.x, r3.y
  87: mad r3.x, r2.z, r3.x, l(1.000000)
  88: add r3.y, -|r1.w|, l(1.000000)
  89: mul r3.z, r3.y, r3.y
  90: mul r3.z, r3.z, r3.z
  91: mul r3.y, r3.y, r3.z
  92: mad r2.z, r2.z, r3.y, l(1.000000)
  93: mul r2.z, r2.z, r3.x
  94: mul r2.z, r2.w, r2.z
  95: mul r0.w, r0.w, r0.w
  96: max r0.w, r0.w, l(0.002000)
  97: add r3.x, -r0.w, l(1.000000)
  98: mad r3.y, |r1.w|, r3.x, r0.w
  99: mad r3.x, r2.w, r3.x, r0.w
 100: mul r1.w, |r1.w|, r3.x
 101: mad r1.w, r2.w, r3.y, r1.w
 102: add r1.w, r1.w, l(0.000010)
 103: div r1.w, l(0.500000), r1.w
 104: mul r0.w, r0.w, r0.w
 105: mad r3.x, r2.x, r0.w, -r2.x
 106: mad r2.x, r3.x, r2.x, l(1.000000)
 107: mul r0.w, r0.w, l(0.318310)
 108: mad r2.x, r2.x, r2.x, l(0.000000)
 109: div r0.w, r0.w, r2.x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r0.w, l(3.141593)
 112: max r0.w, r0.w, l(0.000100)
 113: sqrt r0.w, r0.w
 114: mul r0.w, r2.w, r0.w
 115: dp3 r1.w, r0.xyzx, r0.xyzx
 116: ne r1.w, r1.w, l(0.000000)
 117: and r1.w, r1.w, l(0x3f800000)
 118: mul r0.w, r0.w, r1.w
 119: mul r2.xzw, r2.zzzz, r4.xxyz
 120: mul r3.xyz, r4.xyzx, r0.wwww
 121: add r0.w, -r2.y, l(1.000000)
 122: mul r1.w, r0.w, r0.w
 123: mul r1.w, r1.w, r1.w
 124: mul r0.w, r0.w, r1.w
 125: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 127: mul r0.xyz, r0.xyzx, r3.xyzx
 128: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r2.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r3.w, r5.xyzx, r5.xyzx
  24: sqrt r3.w, r3.w
  25: add r3.w, -r2.w, r3.w
  26: mad r2.w, cb3[25].w, r3.w, r2.w
  27: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  28: eq r3.w, cb5[0].x, l(1.000000)
  29: if_nz r3.w
  30:   eq r3.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r3.w, r4.z
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  46: div r4.zw, v8.xxxy, v8.wwww
  47: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  48: add r3.w, r3.w, -r5.x
  49: mad r2.w, r2.w, r3.w, r5.x
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: add r0.x, -r0.x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.xxxx
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r0.x, r0.x, r0.x
  82: max r0.x, r0.x, l(0.002000)
  83: add r3.x, -r0.x, l(1.000000)
  84: mad r3.y, |r1.w|, r3.x, r0.x
  85: mad r3.x, r2.w, r3.x, r0.x
  86: mul r1.w, |r1.w|, r3.x
  87: mad r1.w, r2.w, r3.y, r1.w
  88: add r1.w, r1.w, l(0.000010)
  89: div r1.w, l(0.500000), r1.w
  90: mul r0.x, r0.x, r0.x
  91: mad r3.x, r2.x, r0.x, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r0.x, r0.x, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r0.x, r0.x, r2.x
  96: mul r0.x, r0.x, r1.w
  97: mul r0.x, r0.x, l(3.141593)
  98: max r0.x, r0.x, l(0.000100)
  99: sqrt r0.x, r0.x
 100: mul r0.x, r2.w, r0.x
 101: dp3 r1.w, r1.xyzx, r1.xyzx
 102: ne r1.w, r1.w, l(0.000000)
 103: and r1.w, r1.w, l(0x3f800000)
 104: mul r0.x, r0.x, r1.w
 105: mul r2.xzw, r2.zzzz, r4.xxyz
 106: mul r3.xyz, r4.xyzx, r0.xxxx
 107: add r0.x, -r2.y, l(1.000000)
 108: mul r1.w, r0.x, r0.x
 109: mul r1.w, r1.w, r1.w
 110: mul r0.x, r0.x, r1.w
 111: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 113: mul r1.xyz, r1.xyzx, r3.xyzx
 114: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 116 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  17: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  18: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  19: add r4.xyz, r4.xyzx, cb0[14].xyzx
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r1.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r2.w, r5.xyzx, r5.xyzx
  27: sqrt r2.w, r2.w
  28: add r2.w, -r1.w, r2.w
  29: mad r1.w, cb3[25].w, r2.w, r1.w
  30: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  31: eq r2.w, cb5[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  49: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  50: max r3.w, |r5.y|, |r5.x|
  51: max r3.w, |r5.z|, r3.w
  52: add r3.w, r3.w, -cb2[2].z
  53: max r3.w, r3.w, l(0.000010)
  54: mul r3.w, r3.w, cb2[2].w
  55: div r3.w, cb2[2].y, r3.w
  56: add r3.w, r3.w, -cb2[2].x
  57: add r3.w, -r3.w, l(1.000000)
  58: sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
  59: add r4.w, -cb3[24].x, l(1.000000)
  60: mad r3.w, r3.w, r4.w, cb3[24].x
  61: add r2.w, r2.w, -r3.w
  62: mad r1.w, r1.w, r2.w, r3.w
  63: dp3 r2.w, r4.xyzx, r4.xyzx
  64: sample r4.xyzw, r2.wwww, t1.xyzw, s3
  65: mul r1.w, r1.w, r4.x
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r2.w, r4.xyzx, r4.xyzx
  70: rsq r2.w, r2.w
  71: mul r5.xyz, r2.wwww, r4.xyzx
  72: mul r6.xyz, r1.wwww, cb0[2].xyzx
  73: add r0.w, -r0.w, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r0.w, r0.w, r0.w
  99: max r0.w, r0.w, l(0.002000)
 100: add r3.x, -r0.w, l(1.000000)
 101: mad r3.y, |r1.w|, r3.x, r0.w
 102: mad r3.x, r2.w, r3.x, r0.w
 103: mul r1.w, |r1.w|, r3.x
 104: mad r1.w, r2.w, r3.y, r1.w
 105: add r1.w, r1.w, l(0.000010)
 106: div r1.w, l(0.500000), r1.w
 107: mul r0.w, r0.w, r0.w
 108: mad r3.x, r2.x, r0.w, -r2.x
 109: mad r2.x, r3.x, r2.x, l(1.000000)
 110: mul r0.w, r0.w, l(0.318310)
 111: mad r2.x, r2.x, r2.x, l(0.000000)
 112: div r0.w, r0.w, r2.x
 113: mul r0.w, r0.w, r1.w
 114: mul r0.w, r0.w, l(3.141593)
 115: max r0.w, r0.w, l(0.000100)
 116: sqrt r0.w, r0.w
 117: mul r0.w, r2.w, r0.w
 118: dp3 r1.w, r0.xyzx, r0.xyzx
 119: ne r1.w, r1.w, l(0.000000)
 120: and r1.w, r1.w, l(0x3f800000)
 121: mul r0.w, r0.w, r1.w
 122: mul r2.xzw, r2.zzzz, r6.xxyz
 123: mul r3.xyz, r6.xyzx, r0.wwww
 124: add r0.w, -r2.y, l(1.000000)
 125: mul r1.w, r0.w, r0.w
 126: mul r1.w, r1.w, r1.w
 127: mul r0.w, r0.w, r1.w
 128: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 130: mul r0.xyz, r0.xyzx, r3.xyzx
 131: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  28: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  29: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  30: add r4.xyz, r4.xyzx, cb0[14].xyzx
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r1.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r2.w, r5.xyzx, r5.xyzx
  38: sqrt r2.w, r2.w
  39: add r2.w, -r1.w, r2.w
  40: mad r1.w, cb3[25].w, r2.w, r1.w
  41: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  42: eq r2.w, cb5[0].x, l(1.000000)
  43: if_nz r2.w
  44:   eq r2.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r2.w, r3.w
  55:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  60: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  61: max r3.w, |r5.y|, |r5.x|
  62: max r3.w, |r5.z|, r3.w
  63: add r3.w, r3.w, -cb2[2].z
  64: max r3.w, r3.w, l(0.000010)
  65: mul r3.w, r3.w, cb2[2].w
  66: div r3.w, cb2[2].y, r3.w
  67: add r3.w, r3.w, -cb2[2].x
  68: add r3.w, -r3.w, l(1.000000)
  69: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  70: add r4.w, -cb3[24].x, l(1.000000)
  71: mad r3.w, r3.w, r4.w, cb3[24].x
  72: add r2.w, r2.w, -r3.w
  73: mad r1.w, r1.w, r2.w, r3.w
  74: dp3 r2.w, r4.xyzx, r4.xyzx
  75: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  76: mul r1.w, r1.w, r4.x
  77: mov r4.x, v3.w
  78: mov r4.y, v4.w
  79: mov r4.z, v5.w
  80: dp3 r2.w, r4.xyzx, r4.xyzx
  81: rsq r2.w, r2.w
  82: mul r5.xyz, r2.wwww, r4.xyzx
  83: mul r6.xyz, r1.wwww, cb0[2].xyzx
  84: add r0.w, -r0.w, l(1.000000)
  85: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  86: dp3 r1.w, r4.xyzx, r4.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r4.xyz, r1.wwww, r4.xyzx
  90: dp3 r1.w, r2.xyzx, -r3.xyzx
  91: dp3_sat r2.w, r2.xyzx, r5.xyzx
  92: dp3_sat r2.x, r2.xyzx, r4.xyzx
  93: dp3_sat r2.y, r5.xyzx, r4.xyzx
  94: mul r2.z, r2.y, r2.y
  95: dp2 r2.z, r2.zzzz, r0.wwww
  96: add r2.z, r2.z, l(-0.500000)
  97: add r3.x, -r2.w, l(1.000000)
  98: mul r3.y, r3.x, r3.x
  99: mul r3.y, r3.y, r3.y
 100: mul r3.x, r3.x, r3.y
 101: mad r3.x, r2.z, r3.x, l(1.000000)
 102: add r3.y, -|r1.w|, l(1.000000)
 103: mul r3.z, r3.y, r3.y
 104: mul r3.z, r3.z, r3.z
 105: mul r3.y, r3.y, r3.z
 106: mad r2.z, r2.z, r3.y, l(1.000000)
 107: mul r2.z, r2.z, r3.x
 108: mul r2.z, r2.w, r2.z
 109: mul r0.w, r0.w, r0.w
 110: max r0.w, r0.w, l(0.002000)
 111: add r3.x, -r0.w, l(1.000000)
 112: mad r3.y, |r1.w|, r3.x, r0.w
 113: mad r3.x, r2.w, r3.x, r0.w
 114: mul r1.w, |r1.w|, r3.x
 115: mad r1.w, r2.w, r3.y, r1.w
 116: add r1.w, r1.w, l(0.000010)
 117: div r1.w, l(0.500000), r1.w
 118: mul r0.w, r0.w, r0.w
 119: mad r3.x, r2.x, r0.w, -r2.x
 120: mad r2.x, r3.x, r2.x, l(1.000000)
 121: mul r0.w, r0.w, l(0.318310)
 122: mad r2.x, r2.x, r2.x, l(0.000000)
 123: div r0.w, r0.w, r2.x
 124: mul r0.w, r0.w, r1.w
 125: mul r0.w, r0.w, l(3.141593)
 126: max r0.w, r0.w, l(0.000100)
 127: sqrt r0.w, r0.w
 128: mul r0.w, r2.w, r0.w
 129: dp3 r1.w, r0.xyzx, r0.xyzx
 130: ne r1.w, r1.w, l(0.000000)
 131: and r1.w, r1.w, l(0x3f800000)
 132: mul r0.w, r0.w, r1.w
 133: mul r2.xzw, r2.zzzz, r6.xxyz
 134: mul r3.xyz, r6.xyzx, r0.wwww
 135: add r0.w, -r2.y, l(1.000000)
 136: mul r1.w, r0.w, r0.w
 137: mul r1.w, r1.w, r1.w
 138: mul r0.w, r0.w, r1.w
 139: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 140: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 141: mul r0.xyz, r0.xyzx, r3.xyzx
 142: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 143: mov o0.w, l(1.000000)
 144: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  47: max r3.w, |r5.y|, |r5.x|
  48: max r3.w, |r5.z|, r3.w
  49: add r3.w, r3.w, -cb2[2].z
  50: max r3.w, r3.w, l(0.000010)
  51: mul r3.w, r3.w, cb2[2].w
  52: div r3.w, cb2[2].y, r3.w
  53: add r3.w, r3.w, -cb2[2].x
  54: add r3.w, -r3.w, l(1.000000)
  55: sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
  56: add r4.w, -cb3[24].x, l(1.000000)
  57: mad r3.w, r3.w, r4.w, cb3[24].x
  58: add r2.w, r2.w, -r3.w
  59: mad r1.w, r1.w, r2.w, r3.w
  60: dp3 r2.w, r4.xyzx, r4.xyzx
  61: sample r4.xyzw, r2.wwww, t1.xyzw, s3
  62: mul r1.w, r1.w, r4.x
  63: mov r4.x, v3.w
  64: mov r4.y, v4.w
  65: mov r4.z, v5.w
  66: dp3 r2.w, r4.xyzx, r4.xyzx
  67: rsq r2.w, r2.w
  68: mul r5.xyz, r2.wwww, r4.xyzx
  69: mul r6.xyz, r1.wwww, cb0[2].xyzx
  70: add r0.x, -r0.x, l(1.000000)
  71: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: max r1.w, r1.w, l(0.001000)
  74: rsq r1.w, r1.w
  75: mul r4.xyz, r1.wwww, r4.xyzx
  76: dp3 r1.w, r2.xyzx, -r3.xyzx
  77: dp3_sat r2.w, r2.xyzx, r5.xyzx
  78: dp3_sat r2.x, r2.xyzx, r4.xyzx
  79: dp3_sat r2.y, r5.xyzx, r4.xyzx
  80: mul r2.z, r2.y, r2.y
  81: dp2 r2.z, r2.zzzz, r0.xxxx
  82: add r2.z, r2.z, l(-0.500000)
  83: add r3.x, -r2.w, l(1.000000)
  84: mul r3.y, r3.x, r3.x
  85: mul r3.y, r3.y, r3.y
  86: mul r3.x, r3.x, r3.y
  87: mad r3.x, r2.z, r3.x, l(1.000000)
  88: add r3.y, -|r1.w|, l(1.000000)
  89: mul r3.z, r3.y, r3.y
  90: mul r3.z, r3.z, r3.z
  91: mul r3.y, r3.y, r3.z
  92: mad r2.z, r2.z, r3.y, l(1.000000)
  93: mul r2.z, r2.z, r3.x
  94: mul r2.z, r2.w, r2.z
  95: mul r0.x, r0.x, r0.x
  96: max r0.x, r0.x, l(0.002000)
  97: add r3.x, -r0.x, l(1.000000)
  98: mad r3.y, |r1.w|, r3.x, r0.x
  99: mad r3.x, r2.w, r3.x, r0.x
 100: mul r1.w, |r1.w|, r3.x
 101: mad r1.w, r2.w, r3.y, r1.w
 102: add r1.w, r1.w, l(0.000010)
 103: div r1.w, l(0.500000), r1.w
 104: mul r0.x, r0.x, r0.x
 105: mad r3.x, r2.x, r0.x, -r2.x
 106: mad r2.x, r3.x, r2.x, l(1.000000)
 107: mul r0.x, r0.x, l(0.318310)
 108: mad r2.x, r2.x, r2.x, l(0.000000)
 109: div r0.x, r0.x, r2.x
 110: mul r0.x, r0.x, r1.w
 111: mul r0.x, r0.x, l(3.141593)
 112: max r0.x, r0.x, l(0.000100)
 113: sqrt r0.x, r0.x
 114: mul r0.x, r2.w, r0.x
 115: dp3 r1.w, r1.xyzx, r1.xyzx
 116: ne r1.w, r1.w, l(0.000000)
 117: and r1.w, r1.w, l(0x3f800000)
 118: mul r0.x, r0.x, r1.w
 119: mul r2.xzw, r2.zzzz, r6.xxyz
 120: mul r3.xyz, r6.xyzx, r0.xxxx
 121: add r0.x, -r2.y, l(1.000000)
 122: mul r1.w, r0.x, r0.x
 123: mul r1.w, r1.w, r1.w
 124: mul r0.x, r0.x, r1.w
 125: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 127: mul r1.xyz, r1.xyzx, r3.xyzx
 128: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 8 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  17: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  18: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  19: add r4.xyz, r4.xyzx, cb0[14].xyzx
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r1.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r2.w, r5.xyzx, r5.xyzx
  27: sqrt r2.w, r2.w
  28: add r2.w, -r1.w, r2.w
  29: mad r1.w, cb3[25].w, r2.w, r1.w
  30: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  31: eq r2.w, cb5[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  49: lt r3.w, r1.w, l(0.990000)
  50: if_nz r3.w
  51:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  52:   max r3.w, |r5.y|, |r5.x|
  53:   max r3.w, |r5.z|, r3.w
  54:   add r3.w, r3.w, -cb2[2].z
  55:   max r3.w, r3.w, l(0.000010)
  56:   mul r3.w, r3.w, cb2[2].w
  57:   div r3.w, cb2[2].y, r3.w
  58:   add r3.w, r3.w, -cb2[2].x
  59:   add r3.w, -r3.w, l(1.000000)
  60:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  61:   sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
  62:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  63:   sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
  64:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  65:   sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
  66:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  67:   sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
  68:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  69:   add r4.w, -cb3[24].x, l(1.000000)
  70:   mad r3.w, r3.w, r4.w, cb3[24].x
  71: else 
  72:   mov r3.w, l(1.000000)
  73: endif 
  74: add r2.w, r2.w, -r3.w
  75: mad r1.w, r1.w, r2.w, r3.w
  76: dp3 r2.w, r4.xyzx, r4.xyzx
  77: sample r4.xyzw, r2.wwww, t1.xyzw, s3
  78: mul r1.w, r1.w, r4.x
  79: mov r4.x, v3.w
  80: mov r4.y, v4.w
  81: mov r4.z, v5.w
  82: dp3 r2.w, r4.xyzx, r4.xyzx
  83: rsq r2.w, r2.w
  84: mul r5.xyz, r2.wwww, r4.xyzx
  85: mul r6.xyz, r1.wwww, cb0[2].xyzx
  86: add r0.w, -r0.w, l(1.000000)
  87: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  88: dp3 r1.w, r4.xyzx, r4.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r4.xyz, r1.wwww, r4.xyzx
  92: dp3 r1.w, r2.xyzx, -r3.xyzx
  93: dp3_sat r2.w, r2.xyzx, r5.xyzx
  94: dp3_sat r2.x, r2.xyzx, r4.xyzx
  95: dp3_sat r2.y, r5.xyzx, r4.xyzx
  96: mul r2.z, r2.y, r2.y
  97: dp2 r2.z, r2.zzzz, r0.wwww
  98: add r2.z, r2.z, l(-0.500000)
  99: add r3.x, -r2.w, l(1.000000)
 100: mul r3.y, r3.x, r3.x
 101: mul r3.y, r3.y, r3.y
 102: mul r3.x, r3.x, r3.y
 103: mad r3.x, r2.z, r3.x, l(1.000000)
 104: add r3.y, -|r1.w|, l(1.000000)
 105: mul r3.z, r3.y, r3.y
 106: mul r3.z, r3.z, r3.z
 107: mul r3.y, r3.y, r3.z
 108: mad r2.z, r2.z, r3.y, l(1.000000)
 109: mul r2.z, r2.z, r3.x
 110: mul r2.z, r2.w, r2.z
 111: mul r0.w, r0.w, r0.w
 112: max r0.w, r0.w, l(0.002000)
 113: add r3.x, -r0.w, l(1.000000)
 114: mad r3.y, |r1.w|, r3.x, r0.w
 115: mad r3.x, r2.w, r3.x, r0.w
 116: mul r1.w, |r1.w|, r3.x
 117: mad r1.w, r2.w, r3.y, r1.w
 118: add r1.w, r1.w, l(0.000010)
 119: div r1.w, l(0.500000), r1.w
 120: mul r0.w, r0.w, r0.w
 121: mad r3.x, r2.x, r0.w, -r2.x
 122: mad r2.x, r3.x, r2.x, l(1.000000)
 123: mul r0.w, r0.w, l(0.318310)
 124: mad r2.x, r2.x, r2.x, l(0.000000)
 125: div r0.w, r0.w, r2.x
 126: mul r0.w, r0.w, r1.w
 127: mul r0.w, r0.w, l(3.141593)
 128: max r0.w, r0.w, l(0.000100)
 129: sqrt r0.w, r0.w
 130: mul r0.w, r2.w, r0.w
 131: dp3 r1.w, r0.xyzx, r0.xyzx
 132: ne r1.w, r1.w, l(0.000000)
 133: and r1.w, r1.w, l(0x3f800000)
 134: mul r0.w, r0.w, r1.w
 135: mul r2.xzw, r2.zzzz, r6.xxyz
 136: mul r3.xyz, r6.xyzx, r0.wwww
 137: add r0.w, -r2.y, l(1.000000)
 138: mul r1.w, r0.w, r0.w
 139: mul r1.w, r1.w, r1.w
 140: mul r0.w, r0.w, r1.w
 141: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 142: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 143: mul r0.xyz, r0.xyzx, r3.xyzx
 144: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 145: mov o0.w, l(1.000000)
 146: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  28: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  29: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  30: add r4.xyz, r4.xyzx, cb0[14].xyzx
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r1.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r2.w, r5.xyzx, r5.xyzx
  38: sqrt r2.w, r2.w
  39: add r2.w, -r1.w, r2.w
  40: mad r1.w, cb3[25].w, r2.w, r1.w
  41: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  42: eq r2.w, cb5[0].x, l(1.000000)
  43: if_nz r2.w
  44:   eq r2.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r2.w, r3.w
  55:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  60: lt r3.w, r1.w, l(0.990000)
  61: if_nz r3.w
  62:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  63:   max r3.w, |r5.y|, |r5.x|
  64:   max r3.w, |r5.z|, r3.w
  65:   add r3.w, r3.w, -cb2[2].z
  66:   max r3.w, r3.w, l(0.000010)
  67:   mul r3.w, r3.w, cb2[2].w
  68:   div r3.w, cb2[2].y, r3.w
  69:   add r3.w, r3.w, -cb2[2].x
  70:   add r3.w, -r3.w, l(1.000000)
  71:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  72:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  73:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  74:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  75:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  76:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  77:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  78:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  79:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  80:   add r4.w, -cb3[24].x, l(1.000000)
  81:   mad r3.w, r3.w, r4.w, cb3[24].x
  82: else 
  83:   mov r3.w, l(1.000000)
  84: endif 
  85: add r2.w, r2.w, -r3.w
  86: mad r1.w, r1.w, r2.w, r3.w
  87: dp3 r2.w, r4.xyzx, r4.xyzx
  88: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  89: mul r1.w, r1.w, r4.x
  90: mov r4.x, v3.w
  91: mov r4.y, v4.w
  92: mov r4.z, v5.w
  93: dp3 r2.w, r4.xyzx, r4.xyzx
  94: rsq r2.w, r2.w
  95: mul r5.xyz, r2.wwww, r4.xyzx
  96: mul r6.xyz, r1.wwww, cb0[2].xyzx
  97: add r0.w, -r0.w, l(1.000000)
  98: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  99: dp3 r1.w, r4.xyzx, r4.xyzx
 100: max r1.w, r1.w, l(0.001000)
 101: rsq r1.w, r1.w
 102: mul r4.xyz, r1.wwww, r4.xyzx
 103: dp3 r1.w, r2.xyzx, -r3.xyzx
 104: dp3_sat r2.w, r2.xyzx, r5.xyzx
 105: dp3_sat r2.x, r2.xyzx, r4.xyzx
 106: dp3_sat r2.y, r5.xyzx, r4.xyzx
 107: mul r2.z, r2.y, r2.y
 108: dp2 r2.z, r2.zzzz, r0.wwww
 109: add r2.z, r2.z, l(-0.500000)
 110: add r3.x, -r2.w, l(1.000000)
 111: mul r3.y, r3.x, r3.x
 112: mul r3.y, r3.y, r3.y
 113: mul r3.x, r3.x, r3.y
 114: mad r3.x, r2.z, r3.x, l(1.000000)
 115: add r3.y, -|r1.w|, l(1.000000)
 116: mul r3.z, r3.y, r3.y
 117: mul r3.z, r3.z, r3.z
 118: mul r3.y, r3.y, r3.z
 119: mad r2.z, r2.z, r3.y, l(1.000000)
 120: mul r2.z, r2.z, r3.x
 121: mul r2.z, r2.w, r2.z
 122: mul r0.w, r0.w, r0.w
 123: max r0.w, r0.w, l(0.002000)
 124: add r3.x, -r0.w, l(1.000000)
 125: mad r3.y, |r1.w|, r3.x, r0.w
 126: mad r3.x, r2.w, r3.x, r0.w
 127: mul r1.w, |r1.w|, r3.x
 128: mad r1.w, r2.w, r3.y, r1.w
 129: add r1.w, r1.w, l(0.000010)
 130: div r1.w, l(0.500000), r1.w
 131: mul r0.w, r0.w, r0.w
 132: mad r3.x, r2.x, r0.w, -r2.x
 133: mad r2.x, r3.x, r2.x, l(1.000000)
 134: mul r0.w, r0.w, l(0.318310)
 135: mad r2.x, r2.x, r2.x, l(0.000000)
 136: div r0.w, r0.w, r2.x
 137: mul r0.w, r0.w, r1.w
 138: mul r0.w, r0.w, l(3.141593)
 139: max r0.w, r0.w, l(0.000100)
 140: sqrt r0.w, r0.w
 141: mul r0.w, r2.w, r0.w
 142: dp3 r1.w, r0.xyzx, r0.xyzx
 143: ne r1.w, r1.w, l(0.000000)
 144: and r1.w, r1.w, l(0x3f800000)
 145: mul r0.w, r0.w, r1.w
 146: mul r2.xzw, r2.zzzz, r6.xxyz
 147: mul r3.xyz, r6.xyzx, r0.wwww
 148: add r0.w, -r2.y, l(1.000000)
 149: mul r1.w, r0.w, r0.w
 150: mul r1.w, r1.w, r1.w
 151: mul r0.w, r0.w, r1.w
 152: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 153: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 154: mul r0.xyz, r0.xyzx, r3.xyzx
 155: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 156: mov o0.w, l(1.000000)
 157: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 120 math, 8 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: lt r3.w, r1.w, l(0.990000)
  47: if_nz r3.w
  48:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  49:   max r3.w, |r5.y|, |r5.x|
  50:   max r3.w, |r5.z|, r3.w
  51:   add r3.w, r3.w, -cb2[2].z
  52:   max r3.w, r3.w, l(0.000010)
  53:   mul r3.w, r3.w, cb2[2].w
  54:   div r3.w, cb2[2].y, r3.w
  55:   add r3.w, r3.w, -cb2[2].x
  56:   add r3.w, -r3.w, l(1.000000)
  57:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  58:   sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
  59:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  62:   sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
  63:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
  65:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66:   add r4.w, -cb3[24].x, l(1.000000)
  67:   mad r3.w, r3.w, r4.w, cb3[24].x
  68: else 
  69:   mov r3.w, l(1.000000)
  70: endif 
  71: add r2.w, r2.w, -r3.w
  72: mad r1.w, r1.w, r2.w, r3.w
  73: dp3 r2.w, r4.xyzx, r4.xyzx
  74: sample r4.xyzw, r2.wwww, t1.xyzw, s3
  75: mul r1.w, r1.w, r4.x
  76: mov r4.x, v3.w
  77: mov r4.y, v4.w
  78: mov r4.z, v5.w
  79: dp3 r2.w, r4.xyzx, r4.xyzx
  80: rsq r2.w, r2.w
  81: mul r5.xyz, r2.wwww, r4.xyzx
  82: mul r6.xyz, r1.wwww, cb0[2].xyzx
  83: add r0.x, -r0.x, l(1.000000)
  84: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  85: dp3 r1.w, r4.xyzx, r4.xyzx
  86: max r1.w, r1.w, l(0.001000)
  87: rsq r1.w, r1.w
  88: mul r4.xyz, r1.wwww, r4.xyzx
  89: dp3 r1.w, r2.xyzx, -r3.xyzx
  90: dp3_sat r2.w, r2.xyzx, r5.xyzx
  91: dp3_sat r2.x, r2.xyzx, r4.xyzx
  92: dp3_sat r2.y, r5.xyzx, r4.xyzx
  93: mul r2.z, r2.y, r2.y
  94: dp2 r2.z, r2.zzzz, r0.xxxx
  95: add r2.z, r2.z, l(-0.500000)
  96: add r3.x, -r2.w, l(1.000000)
  97: mul r3.y, r3.x, r3.x
  98: mul r3.y, r3.y, r3.y
  99: mul r3.x, r3.x, r3.y
 100: mad r3.x, r2.z, r3.x, l(1.000000)
 101: add r3.y, -|r1.w|, l(1.000000)
 102: mul r3.z, r3.y, r3.y
 103: mul r3.z, r3.z, r3.z
 104: mul r3.y, r3.y, r3.z
 105: mad r2.z, r2.z, r3.y, l(1.000000)
 106: mul r2.z, r2.z, r3.x
 107: mul r2.z, r2.w, r2.z
 108: mul r0.x, r0.x, r0.x
 109: max r0.x, r0.x, l(0.002000)
 110: add r3.x, -r0.x, l(1.000000)
 111: mad r3.y, |r1.w|, r3.x, r0.x
 112: mad r3.x, r2.w, r3.x, r0.x
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.w, r3.y, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r0.x, r0.x, r0.x
 118: mad r3.x, r2.x, r0.x, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r0.x, r0.x, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r0.x, r0.x, r2.x
 123: mul r0.x, r0.x, r1.w
 124: mul r0.x, r0.x, l(3.141593)
 125: max r0.x, r0.x, l(0.000100)
 126: sqrt r0.x, r0.x
 127: mul r0.x, r2.w, r0.x
 128: dp3 r1.w, r1.xyzx, r1.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.x, r0.x, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.xxxx
 134: add r0.x, -r2.y, l(1.000000)
 135: mul r1.w, r0.x, r0.x
 136: mul r1.w, r1.w, r1.w
 137: mul r0.x, r0.x, r1.w
 138: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, r3.xyzx
 141: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 117 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  17: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  18: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  19: add r4.xyz, r4.xyzx, cb0[14].xyzx
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r1.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r2.w, r5.xyzx, r5.xyzx
  27: sqrt r2.w, r2.w
  28: add r2.w, -r1.w, r2.w
  29: mad r1.w, cb3[25].w, r2.w, r1.w
  30: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  31: eq r2.w, cb5[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  49: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  50: max r3.w, |r5.y|, |r5.x|
  51: max r3.w, |r5.z|, r3.w
  52: add r3.w, r3.w, -cb2[2].z
  53: max r3.w, r3.w, l(0.000010)
  54: mul r3.w, r3.w, cb2[2].w
  55: div r3.w, cb2[2].y, r3.w
  56: add r3.w, r3.w, -cb2[2].x
  57: add r3.w, -r3.w, l(1.000000)
  58: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  59: add r4.w, -cb3[24].x, l(1.000000)
  60: mad r3.w, r3.w, r4.w, cb3[24].x
  61: add r2.w, r2.w, -r3.w
  62: mad r1.w, r1.w, r2.w, r3.w
  63: dp3 r2.w, r4.xyzx, r4.xyzx
  64: sample r5.xyzw, r2.wwww, t1.xyzw, s4
  65: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  66: mul r2.w, r4.w, r5.x
  67: mul r1.w, r1.w, r2.w
  68: mov r4.x, v3.w
  69: mov r4.y, v4.w
  70: mov r4.z, v5.w
  71: dp3 r2.w, r4.xyzx, r4.xyzx
  72: rsq r2.w, r2.w
  73: mul r5.xyz, r2.wwww, r4.xyzx
  74: mul r6.xyz, r1.wwww, cb0[2].xyzx
  75: add r0.w, -r0.w, l(1.000000)
  76: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  77: dp3 r1.w, r4.xyzx, r4.xyzx
  78: max r1.w, r1.w, l(0.001000)
  79: rsq r1.w, r1.w
  80: mul r4.xyz, r1.wwww, r4.xyzx
  81: dp3 r1.w, r2.xyzx, -r3.xyzx
  82: dp3_sat r2.w, r2.xyzx, r5.xyzx
  83: dp3_sat r2.x, r2.xyzx, r4.xyzx
  84: dp3_sat r2.y, r5.xyzx, r4.xyzx
  85: mul r2.z, r2.y, r2.y
  86: dp2 r2.z, r2.zzzz, r0.wwww
  87: add r2.z, r2.z, l(-0.500000)
  88: add r3.x, -r2.w, l(1.000000)
  89: mul r3.y, r3.x, r3.x
  90: mul r3.y, r3.y, r3.y
  91: mul r3.x, r3.x, r3.y
  92: mad r3.x, r2.z, r3.x, l(1.000000)
  93: add r3.y, -|r1.w|, l(1.000000)
  94: mul r3.z, r3.y, r3.y
  95: mul r3.z, r3.z, r3.z
  96: mul r3.y, r3.y, r3.z
  97: mad r2.z, r2.z, r3.y, l(1.000000)
  98: mul r2.z, r2.z, r3.x
  99: mul r2.z, r2.w, r2.z
 100: mul r0.w, r0.w, r0.w
 101: max r0.w, r0.w, l(0.002000)
 102: add r3.x, -r0.w, l(1.000000)
 103: mad r3.y, |r1.w|, r3.x, r0.w
 104: mad r3.x, r2.w, r3.x, r0.w
 105: mul r1.w, |r1.w|, r3.x
 106: mad r1.w, r2.w, r3.y, r1.w
 107: add r1.w, r1.w, l(0.000010)
 108: div r1.w, l(0.500000), r1.w
 109: mul r0.w, r0.w, r0.w
 110: mad r3.x, r2.x, r0.w, -r2.x
 111: mad r2.x, r3.x, r2.x, l(1.000000)
 112: mul r0.w, r0.w, l(0.318310)
 113: mad r2.x, r2.x, r2.x, l(0.000000)
 114: div r0.w, r0.w, r2.x
 115: mul r0.w, r0.w, r1.w
 116: mul r0.w, r0.w, l(3.141593)
 117: max r0.w, r0.w, l(0.000100)
 118: sqrt r0.w, r0.w
 119: mul r0.w, r2.w, r0.w
 120: dp3 r1.w, r0.xyzx, r0.xyzx
 121: ne r1.w, r1.w, l(0.000000)
 122: and r1.w, r1.w, l(0x3f800000)
 123: mul r0.w, r0.w, r1.w
 124: mul r2.xzw, r2.zzzz, r6.xxyz
 125: mul r3.xyz, r6.xyzx, r0.wwww
 126: add r0.w, -r2.y, l(1.000000)
 127: mul r1.w, r0.w, r0.w
 128: mul r1.w, r1.w, r1.w
 129: mul r0.w, r0.w, r1.w
 130: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 131: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 132: mul r0.xyz, r0.xyzx, r3.xyzx
 133: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 134: mov o0.w, l(1.000000)
 135: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 127 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  28: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  29: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  30: add r4.xyz, r4.xyzx, cb0[14].xyzx
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r1.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r2.w, r5.xyzx, r5.xyzx
  38: sqrt r2.w, r2.w
  39: add r2.w, -r1.w, r2.w
  40: mad r1.w, cb3[25].w, r2.w, r1.w
  41: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  42: eq r2.w, cb5[0].x, l(1.000000)
  43: if_nz r2.w
  44:   eq r2.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r2.w, r3.w
  55:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  60: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  61: max r3.w, |r5.y|, |r5.x|
  62: max r3.w, |r5.z|, r3.w
  63: add r3.w, r3.w, -cb2[2].z
  64: max r3.w, r3.w, l(0.000010)
  65: mul r3.w, r3.w, cb2[2].w
  66: div r3.w, cb2[2].y, r3.w
  67: add r3.w, r3.w, -cb2[2].x
  68: add r3.w, -r3.w, l(1.000000)
  69: sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
  70: add r4.w, -cb3[24].x, l(1.000000)
  71: mad r3.w, r3.w, r4.w, cb3[24].x
  72: add r2.w, r2.w, -r3.w
  73: mad r1.w, r1.w, r2.w, r3.w
  74: dp3 r2.w, r4.xyzx, r4.xyzx
  75: sample r5.xyzw, r2.wwww, t2.xyzw, s5
  76: sample r4.xyzw, r4.xyzx, t3.xyzw, s4
  77: mul r2.w, r4.w, r5.x
  78: mul r1.w, r1.w, r2.w
  79: mov r4.x, v3.w
  80: mov r4.y, v4.w
  81: mov r4.z, v5.w
  82: dp3 r2.w, r4.xyzx, r4.xyzx
  83: rsq r2.w, r2.w
  84: mul r5.xyz, r2.wwww, r4.xyzx
  85: mul r6.xyz, r1.wwww, cb0[2].xyzx
  86: add r0.w, -r0.w, l(1.000000)
  87: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  88: dp3 r1.w, r4.xyzx, r4.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r4.xyz, r1.wwww, r4.xyzx
  92: dp3 r1.w, r2.xyzx, -r3.xyzx
  93: dp3_sat r2.w, r2.xyzx, r5.xyzx
  94: dp3_sat r2.x, r2.xyzx, r4.xyzx
  95: dp3_sat r2.y, r5.xyzx, r4.xyzx
  96: mul r2.z, r2.y, r2.y
  97: dp2 r2.z, r2.zzzz, r0.wwww
  98: add r2.z, r2.z, l(-0.500000)
  99: add r3.x, -r2.w, l(1.000000)
 100: mul r3.y, r3.x, r3.x
 101: mul r3.y, r3.y, r3.y
 102: mul r3.x, r3.x, r3.y
 103: mad r3.x, r2.z, r3.x, l(1.000000)
 104: add r3.y, -|r1.w|, l(1.000000)
 105: mul r3.z, r3.y, r3.y
 106: mul r3.z, r3.z, r3.z
 107: mul r3.y, r3.y, r3.z
 108: mad r2.z, r2.z, r3.y, l(1.000000)
 109: mul r2.z, r2.z, r3.x
 110: mul r2.z, r2.w, r2.z
 111: mul r0.w, r0.w, r0.w
 112: max r0.w, r0.w, l(0.002000)
 113: add r3.x, -r0.w, l(1.000000)
 114: mad r3.y, |r1.w|, r3.x, r0.w
 115: mad r3.x, r2.w, r3.x, r0.w
 116: mul r1.w, |r1.w|, r3.x
 117: mad r1.w, r2.w, r3.y, r1.w
 118: add r1.w, r1.w, l(0.000010)
 119: div r1.w, l(0.500000), r1.w
 120: mul r0.w, r0.w, r0.w
 121: mad r3.x, r2.x, r0.w, -r2.x
 122: mad r2.x, r3.x, r2.x, l(1.000000)
 123: mul r0.w, r0.w, l(0.318310)
 124: mad r2.x, r2.x, r2.x, l(0.000000)
 125: div r0.w, r0.w, r2.x
 126: mul r0.w, r0.w, r1.w
 127: mul r0.w, r0.w, l(3.141593)
 128: max r0.w, r0.w, l(0.000100)
 129: sqrt r0.w, r0.w
 130: mul r0.w, r2.w, r0.w
 131: dp3 r1.w, r0.xyzx, r0.xyzx
 132: ne r1.w, r1.w, l(0.000000)
 133: and r1.w, r1.w, l(0x3f800000)
 134: mul r0.w, r0.w, r1.w
 135: mul r2.xzw, r2.zzzz, r6.xxyz
 136: mul r3.xyz, r6.xyzx, r0.wwww
 137: add r0.w, -r2.y, l(1.000000)
 138: mul r1.w, r0.w, r0.w
 139: mul r1.w, r1.w, r1.w
 140: mul r0.w, r0.w, r1.w
 141: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 142: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 143: mul r0.xyz, r0.xyzx, r3.xyzx
 144: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 145: mov o0.w, l(1.000000)
 146: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 115 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  47: max r3.w, |r5.y|, |r5.x|
  48: max r3.w, |r5.z|, r3.w
  49: add r3.w, r3.w, -cb2[2].z
  50: max r3.w, r3.w, l(0.000010)
  51: mul r3.w, r3.w, cb2[2].w
  52: div r3.w, cb2[2].y, r3.w
  53: add r3.w, r3.w, -cb2[2].x
  54: add r3.w, -r3.w, l(1.000000)
  55: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  56: add r4.w, -cb3[24].x, l(1.000000)
  57: mad r3.w, r3.w, r4.w, cb3[24].x
  58: add r2.w, r2.w, -r3.w
  59: mad r1.w, r1.w, r2.w, r3.w
  60: dp3 r2.w, r4.xyzx, r4.xyzx
  61: sample r5.xyzw, r2.wwww, t1.xyzw, s4
  62: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  63: mul r2.w, r4.w, r5.x
  64: mul r1.w, r1.w, r2.w
  65: mov r4.x, v3.w
  66: mov r4.y, v4.w
  67: mov r4.z, v5.w
  68: dp3 r2.w, r4.xyzx, r4.xyzx
  69: rsq r2.w, r2.w
  70: mul r5.xyz, r2.wwww, r4.xyzx
  71: mul r6.xyz, r1.wwww, cb0[2].xyzx
  72: add r0.x, -r0.x, l(1.000000)
  73: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  74: dp3 r1.w, r4.xyzx, r4.xyzx
  75: max r1.w, r1.w, l(0.001000)
  76: rsq r1.w, r1.w
  77: mul r4.xyz, r1.wwww, r4.xyzx
  78: dp3 r1.w, r2.xyzx, -r3.xyzx
  79: dp3_sat r2.w, r2.xyzx, r5.xyzx
  80: dp3_sat r2.x, r2.xyzx, r4.xyzx
  81: dp3_sat r2.y, r5.xyzx, r4.xyzx
  82: mul r2.z, r2.y, r2.y
  83: dp2 r2.z, r2.zzzz, r0.xxxx
  84: add r2.z, r2.z, l(-0.500000)
  85: add r3.x, -r2.w, l(1.000000)
  86: mul r3.y, r3.x, r3.x
  87: mul r3.y, r3.y, r3.y
  88: mul r3.x, r3.x, r3.y
  89: mad r3.x, r2.z, r3.x, l(1.000000)
  90: add r3.y, -|r1.w|, l(1.000000)
  91: mul r3.z, r3.y, r3.y
  92: mul r3.z, r3.z, r3.z
  93: mul r3.y, r3.y, r3.z
  94: mad r2.z, r2.z, r3.y, l(1.000000)
  95: mul r2.z, r2.z, r3.x
  96: mul r2.z, r2.w, r2.z
  97: mul r0.x, r0.x, r0.x
  98: max r0.x, r0.x, l(0.002000)
  99: add r3.x, -r0.x, l(1.000000)
 100: mad r3.y, |r1.w|, r3.x, r0.x
 101: mad r3.x, r2.w, r3.x, r0.x
 102: mul r1.w, |r1.w|, r3.x
 103: mad r1.w, r2.w, r3.y, r1.w
 104: add r1.w, r1.w, l(0.000010)
 105: div r1.w, l(0.500000), r1.w
 106: mul r0.x, r0.x, r0.x
 107: mad r3.x, r2.x, r0.x, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r0.x, r0.x, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r0.x, r0.x, r2.x
 112: mul r0.x, r0.x, r1.w
 113: mul r0.x, r0.x, l(3.141593)
 114: max r0.x, r0.x, l(0.000100)
 115: sqrt r0.x, r0.x
 116: mul r0.x, r2.w, r0.x
 117: dp3 r1.w, r1.xyzx, r1.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.x, r0.x, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.xxxx
 123: add r0.x, -r2.y, l(1.000000)
 124: mul r1.w, r0.x, r0.x
 125: mul r1.w, r1.w, r1.w
 126: mul r0.x, r0.x, r1.w
 127: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 129: mul r1.xyz, r1.xyzx, r3.xyzx
 130: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 131: mov o0.w, l(1.000000)
 132: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  17: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  18: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  19: add r4.xyz, r4.xyzx, cb0[14].xyzx
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r1.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r2.w, r5.xyzx, r5.xyzx
  27: sqrt r2.w, r2.w
  28: add r2.w, -r1.w, r2.w
  29: mad r1.w, cb3[25].w, r2.w, r1.w
  30: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  31: eq r2.w, cb5[0].x, l(1.000000)
  32: if_nz r2.w
  33:   eq r2.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r2.w, r3.w
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  49: lt r3.w, r1.w, l(0.990000)
  50: if_nz r3.w
  51:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  52:   max r3.w, |r5.y|, |r5.x|
  53:   max r3.w, |r5.z|, r3.w
  54:   add r3.w, r3.w, -cb2[2].z
  55:   max r3.w, r3.w, l(0.000010)
  56:   mul r3.w, r3.w, cb2[2].w
  57:   div r3.w, cb2[2].y, r3.w
  58:   add r3.w, r3.w, -cb2[2].x
  59:   add r3.w, -r3.w, l(1.000000)
  60:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  61:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  62:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  63:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  64:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  65:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  66:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  67:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  68:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  69:   add r4.w, -cb3[24].x, l(1.000000)
  70:   mad r3.w, r3.w, r4.w, cb3[24].x
  71: else 
  72:   mov r3.w, l(1.000000)
  73: endif 
  74: add r2.w, r2.w, -r3.w
  75: mad r1.w, r1.w, r2.w, r3.w
  76: dp3 r2.w, r4.xyzx, r4.xyzx
  77: sample r5.xyzw, r2.wwww, t1.xyzw, s4
  78: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  79: mul r2.w, r4.w, r5.x
  80: mul r1.w, r1.w, r2.w
  81: mov r4.x, v3.w
  82: mov r4.y, v4.w
  83: mov r4.z, v5.w
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: rsq r2.w, r2.w
  86: mul r5.xyz, r2.wwww, r4.xyzx
  87: mul r6.xyz, r1.wwww, cb0[2].xyzx
  88: add r0.w, -r0.w, l(1.000000)
  89: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  90: dp3 r1.w, r4.xyzx, r4.xyzx
  91: max r1.w, r1.w, l(0.001000)
  92: rsq r1.w, r1.w
  93: mul r4.xyz, r1.wwww, r4.xyzx
  94: dp3 r1.w, r2.xyzx, -r3.xyzx
  95: dp3_sat r2.w, r2.xyzx, r5.xyzx
  96: dp3_sat r2.x, r2.xyzx, r4.xyzx
  97: dp3_sat r2.y, r5.xyzx, r4.xyzx
  98: mul r2.z, r2.y, r2.y
  99: dp2 r2.z, r2.zzzz, r0.wwww
 100: add r2.z, r2.z, l(-0.500000)
 101: add r3.x, -r2.w, l(1.000000)
 102: mul r3.y, r3.x, r3.x
 103: mul r3.y, r3.y, r3.y
 104: mul r3.x, r3.x, r3.y
 105: mad r3.x, r2.z, r3.x, l(1.000000)
 106: add r3.y, -|r1.w|, l(1.000000)
 107: mul r3.z, r3.y, r3.y
 108: mul r3.z, r3.z, r3.z
 109: mul r3.y, r3.y, r3.z
 110: mad r2.z, r2.z, r3.y, l(1.000000)
 111: mul r2.z, r2.z, r3.x
 112: mul r2.z, r2.w, r2.z
 113: mul r0.w, r0.w, r0.w
 114: max r0.w, r0.w, l(0.002000)
 115: add r3.x, -r0.w, l(1.000000)
 116: mad r3.y, |r1.w|, r3.x, r0.w
 117: mad r3.x, r2.w, r3.x, r0.w
 118: mul r1.w, |r1.w|, r3.x
 119: mad r1.w, r2.w, r3.y, r1.w
 120: add r1.w, r1.w, l(0.000010)
 121: div r1.w, l(0.500000), r1.w
 122: mul r0.w, r0.w, r0.w
 123: mad r3.x, r2.x, r0.w, -r2.x
 124: mad r2.x, r3.x, r2.x, l(1.000000)
 125: mul r0.w, r0.w, l(0.318310)
 126: mad r2.x, r2.x, r2.x, l(0.000000)
 127: div r0.w, r0.w, r2.x
 128: mul r0.w, r0.w, r1.w
 129: mul r0.w, r0.w, l(3.141593)
 130: max r0.w, r0.w, l(0.000100)
 131: sqrt r0.w, r0.w
 132: mul r0.w, r2.w, r0.w
 133: dp3 r1.w, r0.xyzx, r0.xyzx
 134: ne r1.w, r1.w, l(0.000000)
 135: and r1.w, r1.w, l(0x3f800000)
 136: mul r0.w, r0.w, r1.w
 137: mul r2.xzw, r2.zzzz, r6.xxyz
 138: mul r3.xyz, r6.xyzx, r0.wwww
 139: add r0.w, -r2.y, l(1.000000)
 140: mul r1.w, r0.w, r0.w
 141: mul r1.w, r1.w, r1.w
 142: mul r0.w, r0.w, r1.w
 143: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 144: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 145: mul r0.xyz, r0.xyzx, r3.xyzx
 146: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 147: mov o0.w, l(1.000000)
 148: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 133 math, 8 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  28: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  29: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  30: add r4.xyz, r4.xyzx, cb0[14].xyzx
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r1.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r2.w, r5.xyzx, r5.xyzx
  38: sqrt r2.w, r2.w
  39: add r2.w, -r1.w, r2.w
  40: mad r1.w, cb3[25].w, r2.w, r1.w
  41: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  42: eq r2.w, cb5[0].x, l(1.000000)
  43: if_nz r2.w
  44:   eq r2.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r2.w, r3.w
  55:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  60: lt r3.w, r1.w, l(0.990000)
  61: if_nz r3.w
  62:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  63:   max r3.w, |r5.y|, |r5.x|
  64:   max r3.w, |r5.z|, r3.w
  65:   add r3.w, r3.w, -cb2[2].z
  66:   max r3.w, r3.w, l(0.000010)
  67:   mul r3.w, r3.w, cb2[2].w
  68:   div r3.w, cb2[2].y, r3.w
  69:   add r3.w, r3.w, -cb2[2].x
  70:   add r3.w, -r3.w, l(1.000000)
  71:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  72:   sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
  73:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  74:   sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
  75:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  76:   sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
  77:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  78:   sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
  79:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  80:   add r4.w, -cb3[24].x, l(1.000000)
  81:   mad r3.w, r3.w, r4.w, cb3[24].x
  82: else 
  83:   mov r3.w, l(1.000000)
  84: endif 
  85: add r2.w, r2.w, -r3.w
  86: mad r1.w, r1.w, r2.w, r3.w
  87: dp3 r2.w, r4.xyzx, r4.xyzx
  88: sample r5.xyzw, r2.wwww, t2.xyzw, s5
  89: sample r4.xyzw, r4.xyzx, t3.xyzw, s4
  90: mul r2.w, r4.w, r5.x
  91: mul r1.w, r1.w, r2.w
  92: mov r4.x, v3.w
  93: mov r4.y, v4.w
  94: mov r4.z, v5.w
  95: dp3 r2.w, r4.xyzx, r4.xyzx
  96: rsq r2.w, r2.w
  97: mul r5.xyz, r2.wwww, r4.xyzx
  98: mul r6.xyz, r1.wwww, cb0[2].xyzx
  99: add r0.w, -r0.w, l(1.000000)
 100: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 101: dp3 r1.w, r4.xyzx, r4.xyzx
 102: max r1.w, r1.w, l(0.001000)
 103: rsq r1.w, r1.w
 104: mul r4.xyz, r1.wwww, r4.xyzx
 105: dp3 r1.w, r2.xyzx, -r3.xyzx
 106: dp3_sat r2.w, r2.xyzx, r5.xyzx
 107: dp3_sat r2.x, r2.xyzx, r4.xyzx
 108: dp3_sat r2.y, r5.xyzx, r4.xyzx
 109: mul r2.z, r2.y, r2.y
 110: dp2 r2.z, r2.zzzz, r0.wwww
 111: add r2.z, r2.z, l(-0.500000)
 112: add r3.x, -r2.w, l(1.000000)
 113: mul r3.y, r3.x, r3.x
 114: mul r3.y, r3.y, r3.y
 115: mul r3.x, r3.x, r3.y
 116: mad r3.x, r2.z, r3.x, l(1.000000)
 117: add r3.y, -|r1.w|, l(1.000000)
 118: mul r3.z, r3.y, r3.y
 119: mul r3.z, r3.z, r3.z
 120: mul r3.y, r3.y, r3.z
 121: mad r2.z, r2.z, r3.y, l(1.000000)
 122: mul r2.z, r2.z, r3.x
 123: mul r2.z, r2.w, r2.z
 124: mul r0.w, r0.w, r0.w
 125: max r0.w, r0.w, l(0.002000)
 126: add r3.x, -r0.w, l(1.000000)
 127: mad r3.y, |r1.w|, r3.x, r0.w
 128: mad r3.x, r2.w, r3.x, r0.w
 129: mul r1.w, |r1.w|, r3.x
 130: mad r1.w, r2.w, r3.y, r1.w
 131: add r1.w, r1.w, l(0.000010)
 132: div r1.w, l(0.500000), r1.w
 133: mul r0.w, r0.w, r0.w
 134: mad r3.x, r2.x, r0.w, -r2.x
 135: mad r2.x, r3.x, r2.x, l(1.000000)
 136: mul r0.w, r0.w, l(0.318310)
 137: mad r2.x, r2.x, r2.x, l(0.000000)
 138: div r0.w, r0.w, r2.x
 139: mul r0.w, r0.w, r1.w
 140: mul r0.w, r0.w, l(3.141593)
 141: max r0.w, r0.w, l(0.000100)
 142: sqrt r0.w, r0.w
 143: mul r0.w, r2.w, r0.w
 144: dp3 r1.w, r0.xyzx, r0.xyzx
 145: ne r1.w, r1.w, l(0.000000)
 146: and r1.w, r1.w, l(0x3f800000)
 147: mul r0.w, r0.w, r1.w
 148: mul r2.xzw, r2.zzzz, r6.xxyz
 149: mul r3.xyz, r6.xyzx, r0.wwww
 150: add r0.w, -r2.y, l(1.000000)
 151: mul r1.w, r0.w, r0.w
 152: mul r1.w, r1.w, r1.w
 153: mul r0.w, r0.w, r1.w
 154: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 156: mul r0.xyz, r0.xyzx, r3.xyzx
 157: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 158: mov o0.w, l(1.000000)
 159: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 121 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: lt r3.w, r1.w, l(0.990000)
  47: if_nz r3.w
  48:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  49:   max r3.w, |r5.y|, |r5.x|
  50:   max r3.w, |r5.z|, r3.w
  51:   add r3.w, r3.w, -cb2[2].z
  52:   max r3.w, r3.w, l(0.000010)
  53:   mul r3.w, r3.w, cb2[2].w
  54:   div r3.w, cb2[2].y, r3.w
  55:   add r3.w, r3.w, -cb2[2].x
  56:   add r3.w, -r3.w, l(1.000000)
  57:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  58:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  59:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  62:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  63:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  65:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66:   add r4.w, -cb3[24].x, l(1.000000)
  67:   mad r3.w, r3.w, r4.w, cb3[24].x
  68: else 
  69:   mov r3.w, l(1.000000)
  70: endif 
  71: add r2.w, r2.w, -r3.w
  72: mad r1.w, r1.w, r2.w, r3.w
  73: dp3 r2.w, r4.xyzx, r4.xyzx
  74: sample r5.xyzw, r2.wwww, t1.xyzw, s4
  75: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  76: mul r2.w, r4.w, r5.x
  77: mul r1.w, r1.w, r2.w
  78: mov r4.x, v3.w
  79: mov r4.y, v4.w
  80: mov r4.z, v5.w
  81: dp3 r2.w, r4.xyzx, r4.xyzx
  82: rsq r2.w, r2.w
  83: mul r5.xyz, r2.wwww, r4.xyzx
  84: mul r6.xyz, r1.wwww, cb0[2].xyzx
  85: add r0.x, -r0.x, l(1.000000)
  86: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  87: dp3 r1.w, r4.xyzx, r4.xyzx
  88: max r1.w, r1.w, l(0.001000)
  89: rsq r1.w, r1.w
  90: mul r4.xyz, r1.wwww, r4.xyzx
  91: dp3 r1.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r2.w, r2.xyzx, r5.xyzx
  93: dp3_sat r2.x, r2.xyzx, r4.xyzx
  94: dp3_sat r2.y, r5.xyzx, r4.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r0.xxxx
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.x, -r2.w, l(1.000000)
  99: mul r3.y, r3.x, r3.x
 100: mul r3.y, r3.y, r3.y
 101: mul r3.x, r3.x, r3.y
 102: mad r3.x, r2.z, r3.x, l(1.000000)
 103: add r3.y, -|r1.w|, l(1.000000)
 104: mul r3.z, r3.y, r3.y
 105: mul r3.z, r3.z, r3.z
 106: mul r3.y, r3.y, r3.z
 107: mad r2.z, r2.z, r3.y, l(1.000000)
 108: mul r2.z, r2.z, r3.x
 109: mul r2.z, r2.w, r2.z
 110: mul r0.x, r0.x, r0.x
 111: max r0.x, r0.x, l(0.002000)
 112: add r3.x, -r0.x, l(1.000000)
 113: mad r3.y, |r1.w|, r3.x, r0.x
 114: mad r3.x, r2.w, r3.x, r0.x
 115: mul r1.w, |r1.w|, r3.x
 116: mad r1.w, r2.w, r3.y, r1.w
 117: add r1.w, r1.w, l(0.000010)
 118: div r1.w, l(0.500000), r1.w
 119: mul r0.x, r0.x, r0.x
 120: mad r3.x, r2.x, r0.x, -r2.x
 121: mad r2.x, r3.x, r2.x, l(1.000000)
 122: mul r0.x, r0.x, l(0.318310)
 123: mad r2.x, r2.x, r2.x, l(0.000000)
 124: div r0.x, r0.x, r2.x
 125: mul r0.x, r0.x, r1.w
 126: mul r0.x, r0.x, l(3.141593)
 127: max r0.x, r0.x, l(0.000100)
 128: sqrt r0.x, r0.x
 129: mul r0.x, r2.w, r0.x
 130: dp3 r1.w, r1.xyzx, r1.xyzx
 131: ne r1.w, r1.w, l(0.000000)
 132: and r1.w, r1.w, l(0x3f800000)
 133: mul r0.x, r0.x, r1.w
 134: mul r2.xzw, r2.zzzz, r6.xxyz
 135: mul r3.xyz, r6.xyzx, r0.xxxx
 136: add r0.x, -r2.y, l(1.000000)
 137: mul r1.w, r0.x, r0.x
 138: mul r1.w, r1.w, r1.w
 139: mul r0.x, r0.x, r1.w
 140: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 141: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 142: mul r1.xyz, r1.xyzx, r3.xyzx
 143: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 144: mov o0.w, l(1.000000)
 145: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 95 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  17: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  18: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  19: add r4.xyz, r4.xyzx, cb0[14].xyzx
  20: eq r1.w, cb2[0].x, l(1.000000)
  21: if_nz r1.w
  22:   eq r1.w, cb2[0].y, l(1.000000)
  23:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  24:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  25:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  26:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  27:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  28:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  29:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  30:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  31:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  32:   max r5.x, r1.w, r2.w
  33:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  34: else 
  35:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  38: dp3 r2.w, r4.xyzx, r4.xyzx
  39: sample r4.xyzw, r2.wwww, t1.xyzw, s2
  40: mul r1.w, r1.w, r4.x
  41: mov r4.x, v3.w
  42: mov r4.y, v4.w
  43: mov r4.z, v5.w
  44: dp3 r2.w, r4.xyzx, r4.xyzx
  45: rsq r2.w, r2.w
  46: mul r5.xyz, r2.wwww, r4.xyzx
  47: mul r6.xyz, r1.wwww, cb0[2].xyzx
  48: add r0.w, -r0.w, l(1.000000)
  49: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  50: dp3 r1.w, r4.xyzx, r4.xyzx
  51: max r1.w, r1.w, l(0.001000)
  52: rsq r1.w, r1.w
  53: mul r4.xyz, r1.wwww, r4.xyzx
  54: dp3 r1.w, r2.xyzx, -r3.xyzx
  55: dp3_sat r2.w, r2.xyzx, r5.xyzx
  56: dp3_sat r2.x, r2.xyzx, r4.xyzx
  57: dp3_sat r2.y, r5.xyzx, r4.xyzx
  58: mul r2.z, r2.y, r2.y
  59: dp2 r2.z, r2.zzzz, r0.wwww
  60: add r2.z, r2.z, l(-0.500000)
  61: add r3.x, -r2.w, l(1.000000)
  62: mul r3.y, r3.x, r3.x
  63: mul r3.y, r3.y, r3.y
  64: mul r3.x, r3.x, r3.y
  65: mad r3.x, r2.z, r3.x, l(1.000000)
  66: add r3.y, -|r1.w|, l(1.000000)
  67: mul r3.z, r3.y, r3.y
  68: mul r3.z, r3.z, r3.z
  69: mul r3.y, r3.y, r3.z
  70: mad r2.z, r2.z, r3.y, l(1.000000)
  71: mul r2.z, r2.z, r3.x
  72: mul r2.z, r2.w, r2.z
  73: mul r0.w, r0.w, r0.w
  74: max r0.w, r0.w, l(0.002000)
  75: add r3.x, -r0.w, l(1.000000)
  76: mad r3.y, |r1.w|, r3.x, r0.w
  77: mad r3.x, r2.w, r3.x, r0.w
  78: mul r1.w, |r1.w|, r3.x
  79: mad r1.w, r2.w, r3.y, r1.w
  80: add r1.w, r1.w, l(0.000010)
  81: div r1.w, l(0.500000), r1.w
  82: mul r0.w, r0.w, r0.w
  83: mad r3.x, r2.x, r0.w, -r2.x
  84: mad r2.x, r3.x, r2.x, l(1.000000)
  85: mul r0.w, r0.w, l(0.318310)
  86: mad r2.x, r2.x, r2.x, l(0.000000)
  87: div r0.w, r0.w, r2.x
  88: mul r0.w, r0.w, r1.w
  89: mul r0.w, r0.w, l(3.141593)
  90: max r0.w, r0.w, l(0.000100)
  91: sqrt r0.w, r0.w
  92: mul r0.w, r2.w, r0.w
  93: dp3 r1.w, r0.xyzx, r0.xyzx
  94: ne r1.w, r1.w, l(0.000000)
  95: and r1.w, r1.w, l(0x3f800000)
  96: mul r0.w, r0.w, r1.w
  97: mul r2.xzw, r2.zzzz, r6.xxyz
  98: mul r3.xyz, r6.xyzx, r0.wwww
  99: add r0.w, -r2.y, l(1.000000)
 100: mul r1.w, r0.w, r0.w
 101: mul r1.w, r1.w, r1.w
 102: mul r0.w, r0.w, r1.w
 103: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 104: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 105: mul r0.xyz, r0.xyzx, r3.xyzx
 106: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 107: mov o0.w, l(1.000000)
 108: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 105 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  28: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  29: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  30: add r4.xyz, r4.xyzx, cb0[14].xyzx
  31: eq r1.w, cb2[0].x, l(1.000000)
  32: if_nz r1.w
  33:   eq r1.w, cb2[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  35:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  38:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  41:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r1.w, r2.w
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  49: dp3 r2.w, r4.xyzx, r4.xyzx
  50: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.x
  52: mov r4.x, v3.w
  53: mov r4.y, v4.w
  54: mov r4.z, v5.w
  55: dp3 r2.w, r4.xyzx, r4.xyzx
  56: rsq r2.w, r2.w
  57: mul r5.xyz, r2.wwww, r4.xyzx
  58: mul r6.xyz, r1.wwww, cb0[2].xyzx
  59: add r0.w, -r0.w, l(1.000000)
  60: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  61: dp3 r1.w, r4.xyzx, r4.xyzx
  62: max r1.w, r1.w, l(0.001000)
  63: rsq r1.w, r1.w
  64: mul r4.xyz, r1.wwww, r4.xyzx
  65: dp3 r1.w, r2.xyzx, -r3.xyzx
  66: dp3_sat r2.w, r2.xyzx, r5.xyzx
  67: dp3_sat r2.x, r2.xyzx, r4.xyzx
  68: dp3_sat r2.y, r5.xyzx, r4.xyzx
  69: mul r2.z, r2.y, r2.y
  70: dp2 r2.z, r2.zzzz, r0.wwww
  71: add r2.z, r2.z, l(-0.500000)
  72: add r3.x, -r2.w, l(1.000000)
  73: mul r3.y, r3.x, r3.x
  74: mul r3.y, r3.y, r3.y
  75: mul r3.x, r3.x, r3.y
  76: mad r3.x, r2.z, r3.x, l(1.000000)
  77: add r3.y, -|r1.w|, l(1.000000)
  78: mul r3.z, r3.y, r3.y
  79: mul r3.z, r3.z, r3.z
  80: mul r3.y, r3.y, r3.z
  81: mad r2.z, r2.z, r3.y, l(1.000000)
  82: mul r2.z, r2.z, r3.x
  83: mul r2.z, r2.w, r2.z
  84: mul r0.w, r0.w, r0.w
  85: max r0.w, r0.w, l(0.002000)
  86: add r3.x, -r0.w, l(1.000000)
  87: mad r3.y, |r1.w|, r3.x, r0.w
  88: mad r3.x, r2.w, r3.x, r0.w
  89: mul r1.w, |r1.w|, r3.x
  90: mad r1.w, r2.w, r3.y, r1.w
  91: add r1.w, r1.w, l(0.000010)
  92: div r1.w, l(0.500000), r1.w
  93: mul r0.w, r0.w, r0.w
  94: mad r3.x, r2.x, r0.w, -r2.x
  95: mad r2.x, r3.x, r2.x, l(1.000000)
  96: mul r0.w, r0.w, l(0.318310)
  97: mad r2.x, r2.x, r2.x, l(0.000000)
  98: div r0.w, r0.w, r2.x
  99: mul r0.w, r0.w, r1.w
 100: mul r0.w, r0.w, l(3.141593)
 101: max r0.w, r0.w, l(0.000100)
 102: sqrt r0.w, r0.w
 103: mul r0.w, r2.w, r0.w
 104: dp3 r1.w, r0.xyzx, r0.xyzx
 105: ne r1.w, r1.w, l(0.000000)
 106: and r1.w, r1.w, l(0x3f800000)
 107: mul r0.w, r0.w, r1.w
 108: mul r2.xzw, r2.zzzz, r6.xxyz
 109: mul r3.xyz, r6.xyzx, r0.wwww
 110: add r0.w, -r2.y, l(1.000000)
 111: mul r1.w, r0.w, r0.w
 112: mul r1.w, r1.w, r1.w
 113: mul r0.w, r0.w, r1.w
 114: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 116: mul r0.xyz, r0.xyzx, r3.xyzx
 117: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 118: mov o0.w, l(1.000000)
 119: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (27..32)
 // Stats for Fragment shader:
 //        d3d11: 2 math, 1 texture
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb2[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Cutoff at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[2].w, -cb0[3].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb2[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb2[5].y, r0.x, r0.z
  33: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Cutoff at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[2].w, -cb0[3].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 28 avg math (22..39)
 // Stats for Fragment shader:
 //        d3d11: 32 avg math (12..56), 4 avg texture (2..7), 1 avg branch (0..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   6: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul o0.xyz, r0.xxxx, r0.yzwy
   9: add o1.w, -cb0[8].w, l(1.000000)
  10: dp3 r0.x, v5.xyzx, v5.xyzx
  11: rsq r0.x, r0.x
  12: mul r0.xyz, r0.xxxx, v5.xyzx
  13: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "_EmissionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: add o1.w, -cb0[8].w, l(1.000000)
   1: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   3: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.xyz, r0.xxxx, r1.xyzx
   7: dp3 r1.x, v5.xyzx, v5.xyzx
   8: rsq r1.x, r1.x
   9: mul r1.xyz, r1.xxxx, v5.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r2.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r2.y, cb0[9].y, r2.x
  13: eq r2.x, cb2[0].x, l(1.000000)
  14: if_nz r2.x
  15:   eq r2.x, cb2[0].y, l(1.000000)
  16:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  18:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  19:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  24:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  25:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  26:   mul r2.y, r2.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r2.y, r2.y, r3.x
  30:   min r2.x, r3.y, r2.y
  31:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  32:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  34:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  36:   mov r1.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r1.xyzw
  38:   dp4 r3.y, r4.xyzw, r1.xyzw
  39:   dp4 r3.z, r2.xyzw, r1.xyzw
  40: else 
  41:   mov r1.w, l(1.000000)
  42:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  43:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  44:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  45: endif 
  46: add r2.xyz, r3.xyzx, v6.xyzx
  47: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r2.xyz, r0.wwww, r2.xyzx
  54: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  55: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  56: mad r2.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  57: exp o3.xyz, -r2.xyzx
  58: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  59: mov o0.xyzw, r0.xyzw
  60: mov o2.w, l(1.000000)
  61: mov o3.w, l(1.000000)
  62: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add o1.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r0.xyz, r0.xxxx, r1.xyzx
  10: dp3 r1.x, v5.xyzx, v5.xyzx
  11: rsq r1.x, r1.x
  12: mul r1.xyz, r1.xxxx, v5.xyzx
  13: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  14: add r2.x, -cb0[9].y, l(1.000000)
  15: mad r0.w, r2.y, cb0[9].y, r2.x
  16: eq r2.x, cb2[0].x, l(1.000000)
  17: if_nz r2.x
  18:   eq r2.x, cb2[0].y, l(1.000000)
  19:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  20:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  21:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  22:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  23:   mov r3.y, v3.w
  24:   mov r3.z, v4.w
  25:   mov r3.w, v5.w
  26:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  27:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  28:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  29:   mul r2.y, r2.y, l(0.250000)
  30:   mul r3.x, cb2[0].z, l(0.500000)
  31:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  32:   max r2.y, r2.y, r3.x
  33:   min r2.x, r3.y, r2.y
  34:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  35:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  36:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  37:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  38:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  39:   mov r1.w, l(1.000000)
  40:   dp4 r3.x, r3.xyzw, r1.xyzw
  41:   dp4 r3.y, r4.xyzw, r1.xyzw
  42:   dp4 r3.z, r2.xyzw, r1.xyzw
  43: else 
  44:   mov r1.w, l(1.000000)
  45:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  46:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  47:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  48: endif 
  49: add r2.xyz, r3.xyzx, v6.xyzx
  50: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  51: log r2.xyz, r2.xyzx
  52: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  53: exp r2.xyz, r2.xyzx
  54: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  55: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mul r2.xyz, r0.wwww, r2.xyzx
  57: mul r2.xyz, r0.xyzx, r2.xyzx
  58: exp o3.xyz, -r2.xyzx
  59: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  60: mov o0.xyzw, r0.xyzw
  61: mov o2.w, l(1.000000)
  62: mov o3.w, l(1.000000)
  63: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mov o4.w, r0.y
  26: mov o5.w, r0.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mul r2.xyz, r1.yzxy, r0.zxyz
  34: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  35: mul r0.w, v4.w, cb3[9].w
  36: mul o4.xyz, r0.wwww, r1.xyzx
  37: mov o5.xyz, r0.xyzx
  38: mul r0.w, r0.y, r0.y
  39: mad r0.w, r0.x, r0.x, -r0.w
  40: mul r1.xyzw, r0.yzzx, r0.xyzz
  41: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  42: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  43: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  44: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  45: mov o6.w, l(0)
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add o1.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r0.xyz, r0.xxxx, r1.xyzx
  10: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r1.x, r1.w, r1.x
  12: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, cb0[8].xxxx
  14: dp2 r1.z, r1.xyxx, r1.xyxx
  15: min r1.z, r1.z, l(1.000000)
  16: add r1.z, -r1.z, l(1.000000)
  17: sqrt r1.z, r1.z
  18: mul r2.xyz, r1.yyyy, v4.xyzx
  19: mad r1.xyw, v3.xyxz, r1.xxxx, r2.xyxz
  20: mad r1.xyz, v5.xyzx, r1.zzzz, r1.xywx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: rsq r1.w, r1.w
  23: mul r1.xyz, r1.wwww, r1.xyzx
  24: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
  25: add r2.x, -cb0[9].y, l(1.000000)
  26: mad r0.w, r2.y, cb0[9].y, r2.x
  27: eq r2.x, cb2[0].x, l(1.000000)
  28: if_nz r2.x
  29:   eq r2.x, cb2[0].y, l(1.000000)
  30:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  31:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  32:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  33:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  34:   mov r3.y, v3.w
  35:   mov r3.z, v4.w
  36:   mov r3.w, v5.w
  37:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  38:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  39:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  40:   mul r2.y, r2.y, l(0.250000)
  41:   mul r3.x, cb2[0].z, l(0.500000)
  42:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  43:   max r2.y, r2.y, r3.x
  44:   min r2.x, r3.y, r2.y
  45:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  46:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  47:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  48:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  49:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  50:   mov r1.w, l(1.000000)
  51:   dp4 r3.x, r3.xyzw, r1.xyzw
  52:   dp4 r3.y, r4.xyzw, r1.xyzw
  53:   dp4 r3.z, r2.xyzw, r1.xyzw
  54: else 
  55:   mov r1.w, l(1.000000)
  56:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  57:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  58:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  59: endif 
  60: add r2.xyz, r3.xyzx, v6.xyzx
  61: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: log r2.xyz, r2.xyzx
  63: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  64: exp r2.xyz, r2.xyzx
  65: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  66: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r2.xyz, r0.wwww, r2.xyzx
  68: mul r2.xyz, r0.xyzx, r2.xyzx
  69: exp o3.xyz, -r2.xyzx
  70: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  71: mov o0.xyzw, r0.xyzw
  72: mov o2.w, l(1.000000)
  73: mov o3.w, l(1.000000)
  74: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 56 math, 5 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add o1.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r0.xyz, r0.xxxx, r1.xyzx
  10: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r1.x, r1.w, r1.x
  12: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, cb0[8].xxxx
  14: dp2 r1.z, r1.xyxx, r1.xyxx
  15: min r1.z, r1.z, l(1.000000)
  16: add r1.z, -r1.z, l(1.000000)
  17: sqrt r1.z, r1.z
  18: mul r2.xyz, r1.yyyy, v4.xyzx
  19: mad r1.xyw, v3.xyxz, r1.xxxx, r2.xyxz
  20: mad r1.xyz, v5.xyzx, r1.zzzz, r1.xywx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: rsq r1.w, r1.w
  23: mul r1.xyz, r1.wwww, r1.xyzx
  24: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
  25: add r2.x, -cb0[9].y, l(1.000000)
  26: mad r0.w, r2.y, cb0[9].y, r2.x
  27: eq r2.x, cb2[0].x, l(1.000000)
  28: if_nz r2.x
  29:   eq r2.x, cb2[0].y, l(1.000000)
  30:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  31:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  32:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  33:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  34:   mov r3.y, v3.w
  35:   mov r3.z, v4.w
  36:   mov r3.w, v5.w
  37:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  38:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  39:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  40:   mul r2.y, r2.y, l(0.250000)
  41:   mul r3.x, cb2[0].z, l(0.500000)
  42:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  43:   max r2.y, r2.y, r3.x
  44:   min r2.x, r3.y, r2.y
  45:   sample r3.xyzw, r2.xzwx, t4.xyzw, s0
  46:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  47:   sample r4.xyzw, r4.xyzx, t4.xyzw, s0
  48:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  49:   sample r2.xyzw, r2.xyzx, t4.xyzw, s0
  50:   mov r1.w, l(1.000000)
  51:   dp4 r3.x, r3.xyzw, r1.xyzw
  52:   dp4 r3.y, r4.xyzw, r1.xyzw
  53:   dp4 r3.z, r2.xyzw, r1.xyzw
  54: else 
  55:   mov r1.w, l(1.000000)
  56:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  57:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  58:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  59: endif 
  60: add r2.xyz, r3.xyzx, v6.xyzx
  61: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: log r2.xyz, r2.xyzx
  63: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  64: exp r2.xyz, r2.xyzx
  65: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  66: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r2.xyz, r0.wwww, r2.xyzx
  68: sample r3.xyzw, v1.xyxx, t3.xyzw, s4
  69: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  70: mad r2.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  71: exp o3.xyz, -r2.xyzx
  72: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  73: mov o0.xyzw, r0.xyzw
  74: mov o2.w, l(1.000000)
  75: mov o3.w, l(1.000000)
  76: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: add o1.w, -cb0[8].w, l(1.000000)
   1: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   3: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.xyz, r0.xxxx, r1.xyzx
   7: dp3 r1.x, v5.xyzx, v5.xyzx
   8: rsq r1.x, r1.x
   9: mul r1.xyz, r1.xxxx, v5.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r2.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r2.y, cb0[9].y, r2.x
  13: eq r2.x, cb2[0].x, l(1.000000)
  14: if_nz r2.x
  15:   eq r2.x, cb2[0].y, l(1.000000)
  16:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  18:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  19:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  24:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  25:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  26:   mul r2.y, r2.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r2.y, r2.y, r3.x
  30:   min r2.x, r3.y, r2.y
  31:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  32:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  34:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  36:   mov r1.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r1.xyzw
  38:   dp4 r3.y, r4.xyzw, r1.xyzw
  39:   dp4 r3.z, r2.xyzw, r1.xyzw
  40: else 
  41:   mov r1.w, l(1.000000)
  42:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  43:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  44:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  45: endif 
  46: add r2.xyz, r3.xyzx, v6.xyzx
  47: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r2.xyz, r0.wwww, r2.xyzx
  54: mul r2.xyz, r0.xyzx, r2.xyzx
  55: exp o3.xyz, -r2.xyzx
  56: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  57: mov o0.xyzw, r0.xyzw
  58: mov o2.w, l(1.000000)
  59: mov o3.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 13 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   6: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul o0.xyz, r0.xxxx, r0.yzwy
   9: add o1.w, -cb0[8].w, l(1.000000)
  10: dp3 r0.x, v5.xyzx, v5.xyzx
  11: rsq r0.x, r0.x
  12: mul r0.xyz, r0.xxxx, v5.xyzx
  13: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
  16: mul o3.xyz, r0.xyzx, cb0[10].xyzx
  17: mov o3.w, l(1.000000)
  18: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   8: mul o0.xyz, r0.xxxx, r1.xyzx
   9: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
  10: add r0.x, -cb0[9].y, l(1.000000)
  11: mad o0.w, r0.y, cb0[9].y, r0.x
  12: add o1.w, -cb0[8].w, l(1.000000)
  13: dp3 r0.x, v5.xyzx, v5.xyzx
  14: rsq r0.x, r0.x
  15: mul r0.xyz, r0.xxxx, v5.xyzx
  16: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: mov o3.xyzw, l(0,0,0,1.000000)
  19: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mov o6.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   8: mul o0.xyz, r0.xxxx, r1.xyzx
   9: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
  10: add r0.x, -cb0[9].y, l(1.000000)
  11: mad o0.w, r0.y, cb0[9].y, r0.x
  12: add o1.w, -cb0[8].w, l(1.000000)
  13: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
  14: mul r0.x, r0.w, r0.x
  15: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r0.xy, r0.xyxx, cb0[8].xxxx
  17: mul r1.xyz, r0.yyyy, v4.xyzx
  18: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  19: dp2 r0.x, r0.xyxx, r0.xyxx
  20: min r0.x, r0.x, l(1.000000)
  21: add r0.x, -r0.x, l(1.000000)
  22: sqrt r0.x, r0.x
  23: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: mov o3.xyzw, l(0,0,0,1.000000)
  30: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mov o4.w, r0.y
  26: mov o5.w, r0.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mul r2.xyz, r1.yzxy, r0.zxyz
  34: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  35: mul r0.w, v4.w, cb3[9].w
  36: mul o4.xyz, r0.wwww, r1.xyzx
  37: mov o5.xyz, r0.xyzx
  38: mul r0.w, r0.y, r0.y
  39: mad r0.w, r0.x, r0.x, -r0.w
  40: mul r1.xyzw, r0.yzzx, r0.xyzz
  41: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  42: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  43: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  44: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  45: mov o6.w, l(0)
  46: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mov o6.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 25 math, 2 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2
Set 2D Texture "_EmissionMap" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   8: mul o0.xyz, r0.xxxx, r1.xyzx
   9: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
  10: add r0.x, -cb0[9].y, l(1.000000)
  11: mad o0.w, r0.y, cb0[9].y, r0.x
  12: add o1.w, -cb0[8].w, l(1.000000)
  13: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
  14: mul r0.x, r0.w, r0.x
  15: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r0.xy, r0.xyxx, cb0[8].xxxx
  17: mul r1.xyz, r0.yyyy, v4.xyzx
  18: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  19: dp2 r0.x, r0.xyxx, r0.xyxx
  20: min r0.x, r0.x, l(1.000000)
  21: add r0.x, -r0.x, l(1.000000)
  22: sqrt r0.x, r0.x
  23: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: sample r0.xyzw, v1.xyxx, t3.xyzw, s3
  30: mul o3.xyz, r0.xyzx, cb0[10].xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   6: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul o0.xyz, r0.xxxx, r0.yzwy
   9: add o1.w, -cb0[8].w, l(1.000000)
  10: dp3 r0.x, v5.xyzx, v5.xyzx
  11: rsq r0.x, r0.x
  12: mul r0.xyz, r0.xxxx, v5.xyzx
  13: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.xyzw, l(0,0,0,1.000000)
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "_EmissionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: add o1.w, -cb0[8].w, l(1.000000)
   1: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   3: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.xyz, r0.xxxx, r1.xyzx
   7: dp3 r1.x, v5.xyzx, v5.xyzx
   8: rsq r1.x, r1.x
   9: mul r1.xyz, r1.xxxx, v5.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r2.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r2.y, cb0[9].y, r2.x
  13: eq r2.x, cb2[0].x, l(1.000000)
  14: if_nz r2.x
  15:   eq r2.x, cb2[0].y, l(1.000000)
  16:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  18:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  19:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  24:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  25:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  26:   mul r2.y, r2.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r2.y, r2.y, r3.x
  30:   min r2.x, r3.y, r2.y
  31:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  32:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  34:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  36:   mov r1.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r1.xyzw
  38:   dp4 r3.y, r4.xyzw, r1.xyzw
  39:   dp4 r3.z, r2.xyzw, r1.xyzw
  40: else 
  41:   mov r1.w, l(1.000000)
  42:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  43:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  44:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  45: endif 
  46: add r2.xyz, r3.xyzx, v6.xyzx
  47: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r2.xyz, r0.wwww, r2.xyzx
  54: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  55: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  56: mad o3.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  57: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  58: mov o0.xyzw, r0.xyzw
  59: mov o2.w, l(1.000000)
  60: mov o3.w, l(1.000000)
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add o1.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r0.xyz, r0.xxxx, r1.xyzx
  10: dp3 r1.x, v5.xyzx, v5.xyzx
  11: rsq r1.x, r1.x
  12: mul r1.xyz, r1.xxxx, v5.xyzx
  13: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  14: add r2.x, -cb0[9].y, l(1.000000)
  15: mad r0.w, r2.y, cb0[9].y, r2.x
  16: eq r2.x, cb2[0].x, l(1.000000)
  17: if_nz r2.x
  18:   eq r2.x, cb2[0].y, l(1.000000)
  19:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  20:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  21:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  22:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  23:   mov r3.y, v3.w
  24:   mov r3.z, v4.w
  25:   mov r3.w, v5.w
  26:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  27:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  28:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  29:   mul r2.y, r2.y, l(0.250000)
  30:   mul r3.x, cb2[0].z, l(0.500000)
  31:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  32:   max r2.y, r2.y, r3.x
  33:   min r2.x, r3.y, r2.y
  34:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  35:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  36:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  37:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  38:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  39:   mov r1.w, l(1.000000)
  40:   dp4 r3.x, r3.xyzw, r1.xyzw
  41:   dp4 r3.y, r4.xyzw, r1.xyzw
  42:   dp4 r3.z, r2.xyzw, r1.xyzw
  43: else 
  44:   mov r1.w, l(1.000000)
  45:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  46:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  47:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  48: endif 
  49: add r2.xyz, r3.xyzx, v6.xyzx
  50: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  51: log r2.xyz, r2.xyzx
  52: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  53: exp r2.xyz, r2.xyzx
  54: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  55: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mul r2.xyz, r0.wwww, r2.xyzx
  57: mul o3.xyz, r0.xyzx, r2.xyzx
  58: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  59: mov o0.xyzw, r0.xyzw
  60: mov o2.w, l(1.000000)
  61: mov o3.w, l(1.000000)
  62: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add o1.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r0.xyz, r0.xxxx, r1.xyzx
  10: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r1.x, r1.w, r1.x
  12: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, cb0[8].xxxx
  14: dp2 r1.z, r1.xyxx, r1.xyxx
  15: min r1.z, r1.z, l(1.000000)
  16: add r1.z, -r1.z, l(1.000000)
  17: sqrt r1.z, r1.z
  18: mul r2.xyz, r1.yyyy, v4.xyzx
  19: mad r1.xyw, v3.xyxz, r1.xxxx, r2.xyxz
  20: mad r1.xyz, v5.xyzx, r1.zzzz, r1.xywx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: rsq r1.w, r1.w
  23: mul r1.xyz, r1.wwww, r1.xyzx
  24: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
  25: add r2.x, -cb0[9].y, l(1.000000)
  26: mad r0.w, r2.y, cb0[9].y, r2.x
  27: eq r2.x, cb2[0].x, l(1.000000)
  28: if_nz r2.x
  29:   eq r2.x, cb2[0].y, l(1.000000)
  30:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  31:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  32:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  33:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  34:   mov r3.y, v3.w
  35:   mov r3.z, v4.w
  36:   mov r3.w, v5.w
  37:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  38:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  39:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  40:   mul r2.y, r2.y, l(0.250000)
  41:   mul r3.x, cb2[0].z, l(0.500000)
  42:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  43:   max r2.y, r2.y, r3.x
  44:   min r2.x, r3.y, r2.y
  45:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  46:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  47:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  48:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  49:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  50:   mov r1.w, l(1.000000)
  51:   dp4 r3.x, r3.xyzw, r1.xyzw
  52:   dp4 r3.y, r4.xyzw, r1.xyzw
  53:   dp4 r3.z, r2.xyzw, r1.xyzw
  54: else 
  55:   mov r1.w, l(1.000000)
  56:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  57:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  58:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  59: endif 
  60: add r2.xyz, r3.xyzx, v6.xyzx
  61: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: log r2.xyz, r2.xyzx
  63: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  64: exp r2.xyz, r2.xyzx
  65: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  66: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r2.xyz, r0.wwww, r2.xyzx
  68: mul o3.xyz, r0.xyzx, r2.xyzx
  69: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  70: mov o0.xyzw, r0.xyzw
  71: mov o2.w, l(1.000000)
  72: mov o3.w, l(1.000000)
  73: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 5 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add o1.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r0.xyz, r0.xxxx, r1.xyzx
  10: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r1.x, r1.w, r1.x
  12: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, cb0[8].xxxx
  14: dp2 r1.z, r1.xyxx, r1.xyxx
  15: min r1.z, r1.z, l(1.000000)
  16: add r1.z, -r1.z, l(1.000000)
  17: sqrt r1.z, r1.z
  18: mul r2.xyz, r1.yyyy, v4.xyzx
  19: mad r1.xyw, v3.xyxz, r1.xxxx, r2.xyxz
  20: mad r1.xyz, v5.xyzx, r1.zzzz, r1.xywx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: rsq r1.w, r1.w
  23: mul r1.xyz, r1.wwww, r1.xyzx
  24: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
  25: add r2.x, -cb0[9].y, l(1.000000)
  26: mad r0.w, r2.y, cb0[9].y, r2.x
  27: eq r2.x, cb2[0].x, l(1.000000)
  28: if_nz r2.x
  29:   eq r2.x, cb2[0].y, l(1.000000)
  30:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  31:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  32:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  33:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  34:   mov r3.y, v3.w
  35:   mov r3.z, v4.w
  36:   mov r3.w, v5.w
  37:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  38:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  39:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  40:   mul r2.y, r2.y, l(0.250000)
  41:   mul r3.x, cb2[0].z, l(0.500000)
  42:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  43:   max r2.y, r2.y, r3.x
  44:   min r2.x, r3.y, r2.y
  45:   sample r3.xyzw, r2.xzwx, t4.xyzw, s0
  46:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  47:   sample r4.xyzw, r4.xyzx, t4.xyzw, s0
  48:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  49:   sample r2.xyzw, r2.xyzx, t4.xyzw, s0
  50:   mov r1.w, l(1.000000)
  51:   dp4 r3.x, r3.xyzw, r1.xyzw
  52:   dp4 r3.y, r4.xyzw, r1.xyzw
  53:   dp4 r3.z, r2.xyzw, r1.xyzw
  54: else 
  55:   mov r1.w, l(1.000000)
  56:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  57:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  58:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  59: endif 
  60: add r2.xyz, r3.xyzx, v6.xyzx
  61: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: log r2.xyz, r2.xyzx
  63: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  64: exp r2.xyz, r2.xyzx
  65: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  66: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r2.xyz, r0.wwww, r2.xyzx
  68: sample r3.xyzw, v1.xyxx, t3.xyzw, s4
  69: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  70: mad o3.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  71: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  72: mov o0.xyzw, r0.xyzw
  73: mov o2.w, l(1.000000)
  74: mov o3.w, l(1.000000)
  75: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 42 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: add o1.w, -cb0[8].w, l(1.000000)
   1: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   3: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.xyz, r0.xxxx, r1.xyzx
   7: dp3 r1.x, v5.xyzx, v5.xyzx
   8: rsq r1.x, r1.x
   9: mul r1.xyz, r1.xxxx, v5.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r2.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r2.y, cb0[9].y, r2.x
  13: eq r2.x, cb2[0].x, l(1.000000)
  14: if_nz r2.x
  15:   eq r2.x, cb2[0].y, l(1.000000)
  16:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  18:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  19:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  24:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  25:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  26:   mul r2.y, r2.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r2.y, r2.y, r3.x
  30:   min r2.x, r3.y, r2.y
  31:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  32:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  34:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  36:   mov r1.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r1.xyzw
  38:   dp4 r3.y, r4.xyzw, r1.xyzw
  39:   dp4 r3.z, r2.xyzw, r1.xyzw
  40: else 
  41:   mov r1.w, l(1.000000)
  42:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  43:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  44:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  45: endif 
  46: add r2.xyz, r3.xyzx, v6.xyzx
  47: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r2.xyz, r0.wwww, r2.xyzx
  54: mul o3.xyz, r0.xyzx, r2.xyzx
  55: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  56: mov o0.xyzw, r0.xyzw
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   6: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul o0.xyz, r0.xxxx, r0.yzwy
   9: add o1.w, -cb0[8].w, l(1.000000)
  10: dp3 r0.x, v5.xyzx, v5.xyzx
  11: rsq r0.x, r0.x
  12: mul r0.xyz, r0.xxxx, v5.xyzx
  13: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
  16: mul r0.xyz, r0.xyzx, cb0[10].xyzx
  17: exp o3.xyz, -r0.xyzx
  18: mov o3.w, l(1.000000)
  19: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   8: mul o0.xyz, r0.xxxx, r1.xyzx
   9: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
  10: add r0.x, -cb0[9].y, l(1.000000)
  11: mad o0.w, r0.y, cb0[9].y, r0.x
  12: add o1.w, -cb0[8].w, l(1.000000)
  13: dp3 r0.x, v5.xyzx, v5.xyzx
  14: rsq r0.x, r0.x
  15: mul r0.xyz, r0.xxxx, v5.xyzx
  16: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  19: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   8: mul o0.xyz, r0.xxxx, r1.xyzx
   9: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
  10: add r0.x, -cb0[9].y, l(1.000000)
  11: mad o0.w, r0.y, cb0[9].y, r0.x
  12: add o1.w, -cb0[8].w, l(1.000000)
  13: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
  14: mul r0.x, r0.w, r0.x
  15: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r0.xy, r0.xyxx, cb0[8].xxxx
  17: mul r1.xyz, r0.yyyy, v4.xyzx
  18: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  19: dp2 r0.x, r0.xyxx, r0.xyxx
  20: min r0.x, r0.x, l(1.000000)
  21: add r0.x, -r0.x, l(1.000000)
  22: sqrt r0.x, r0.x
  23: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 26 math, 2 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2
Set 2D Texture "_EmissionMap" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   8: mul o0.xyz, r0.xxxx, r1.xyzx
   9: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
  10: add r0.x, -cb0[9].y, l(1.000000)
  11: mad o0.w, r0.y, cb0[9].y, r0.x
  12: add o1.w, -cb0[8].w, l(1.000000)
  13: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
  14: mul r0.x, r0.w, r0.x
  15: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r0.xy, r0.xyxx, cb0[8].xxxx
  17: mul r1.xyz, r0.yyyy, v4.xyzx
  18: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  19: dp2 r0.x, r0.xyxx, r0.xyxx
  20: min r0.x, r0.x, l(1.000000)
  21: add r0.x, -r0.x, l(1.000000)
  22: sqrt r0.x, r0.x
  23: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: sample r0.xyzw, v1.xyxx, t3.xyzw, s3
  30: mul r0.xyz, r0.xyzx, cb0[10].xyzx
  31: exp o3.xyz, -r0.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used


 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //        d3d11: 39 avg math (25..73)
 // Stats for Fragment shader:
 //        d3d11: 112 avg math (52..189), 5 avg texture (4..9), 4 avg branch (2..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: eq r2.w, cb3[0].x, l(1.000000)
  10: if_nz r2.w
  11:   eq r2.w, cb3[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  13:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  22:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r2.w, r3.y
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: add r3.x, -r0.x, l(1.000000)
  32: dp3 r3.z, v2.xyzx, r2.xyzx
  33: add r3.z, r3.z, r3.z
  34: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  35: mul r5.xyz, r2.wwww, cb0[2].xyzx
  36: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  37: mul r2.w, r2.w, r3.x
  38: mul r2.w, r2.w, l(6.000000)
  39: sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r2.w
  40: add r2.w, r4.w, l(-1.000000)
  41: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  42: mul r2.w, r2.w, cb2[3].x
  43: mul r3.xzw, r4.xxyz, r2.wwww
  44: mul r3.xyz, r3.yyyy, r3.xzwx
  45: dp3 r2.w, -v2.xyzx, r2.xyzx
  46: add r3.w, r2.w, r2.w
  47: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  48: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  49: mov_sat r2.w, r2.w
  50: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  51: add r4.y, -r2.w, l(1.000000)
  52: mul r4.zw, r4.xxxy, r4.xxxy
  53: mul r2.yz, r4.xxyx, r4.xxwx
  54: mul r4.xy, r4.zyzz, r2.yzyy
  55: add r2.y, -r1.w, l(1.000000)
  56: add_sat r0.x, r0.x, r2.y
  57: mov r4.z, cb0[8].w
  58: sample r6.xyzw, r4.xzxx, t2.xyzw, s2
  59: mul r2.y, r6.x, l(16.000000)
  60: mul r2.yzw, r1.xxyz, r2.yyyy
  61: mad r0.yzw, r0.yyzw, r1.wwww, r2.yyzw
  62: mul r2.xyz, r2.xxxx, r5.xyzx
  63: add r4.xzw, -r1.xxyz, r0.xxxx
  64: mad r1.xyz, r4.yyyy, r4.xzwx, r1.xyzx
  65: mul r1.xyz, r1.xyzx, r3.xyzx
  66: mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  67: mov o0.w, l(1.000000)
  68: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 8 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: eq r2.w, cb3[0].x, l(1.000000)
  11: if_nz r2.w
  12:   eq r2.w, cb3[0].y, l(1.000000)
  13:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  14:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  15:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  17:   mov r4.y, v3.w
  18:   mov r4.z, v4.w
  19:   mov r4.w, v5.w
  20:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  21:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  22:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  23:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  24:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  25:   max r3.x, r2.w, r3.y
  26:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  27: else 
  28:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  31: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  32: add r3.x, -r0.x, l(1.000000)
  33: dp3 r3.z, v2.xyzx, r2.xyzx
  34: add r3.z, r3.z, r3.z
  35: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  36: mul r5.xyz, r2.wwww, cb0[2].xyzx
  37: mul r6.xyz, r3.yyyy, v6.xyzx
  38: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  39: mul r2.w, r2.w, r3.x
  40: mul r2.w, r2.w, l(6.000000)
  41: sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, r2.w
  42: add r2.w, r4.w, l(-1.000000)
  43: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  44: mul r2.w, r2.w, cb2[3].x
  45: mul r3.xzw, r4.xxyz, r2.wwww
  46: mul r3.xyz, r3.yyyy, r3.xzwx
  47: dp3 r2.w, -v2.xyzx, r2.xyzx
  48: add r3.w, r2.w, r2.w
  49: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  50: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  51: mov_sat r2.w, r2.w
  52: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  53: add r4.y, -r2.w, l(1.000000)
  54: mul r4.zw, r4.xxxy, r4.xxxy
  55: mul r2.yz, r4.xxyx, r4.xxwx
  56: mul r4.xy, r4.zyzz, r2.yzyy
  57: add r1.w, -r1.w, l(1.000000)
  58: add_sat r0.x, r0.x, r1.w
  59: mov r4.z, cb0[8].w
  60: sample r7.xyzw, r4.xzxx, t2.xyzw, s2
  61: mul r1.w, r7.x, l(16.000000)
  62: mad r2.yzw, r1.wwww, r1.xxyz, r0.yyzw
  63: mul r4.xzw, r2.xxxx, r5.xxyz
  64: add r5.xyz, -r1.xyzx, r0.xxxx
  65: mad r1.xyz, r4.yyyy, r5.xyzx, r1.xyzx
  66: mul r1.xyz, r1.xyzx, r3.xyzx
  67: mad r0.xyz, r6.xyzx, r0.yzwy, r1.xyzx
  68: mad r0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  69: sample r1.xyzw, v1.xyxx, t3.xyzw, s5
  70: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  71: mov o0.w, l(1.000000)
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: mov o5.xyz, r0.xyzx
  32: mul r1.x, r0.y, r0.y
  33: mad r1.x, r0.x, r0.x, -r1.x
  34: mul r2.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  39: mov r0.w, l(1.000000)
  40: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  41: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  42: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  43: add r0.xyz, r1.xyzx, r2.xyzx
  44: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: log r0.xyz, r0.xyzx
  46: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  47: exp r0.xyz, r0.xyzx
  48: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  49: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: mov o6.w, l(0)
  51: mov o7.xyzw, l(0,0,0,0)
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 56 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: eq r2.w, cb3[0].x, l(1.000000)
  14: if_nz r2.w
  15:   eq r2.w, cb3[0].y, l(1.000000)
  16:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  18:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  19:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  20:   mov r4.y, v3.w
  21:   mov r4.z, v4.w
  22:   mov r4.w, v5.w
  23:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  24:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  25:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  26:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  27:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r3.x, r2.w, r3.y
  29:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  30: else 
  31:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  34: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  35: add r3.x, -r0.w, l(1.000000)
  36: dp3 r3.z, v2.xyzx, r2.xyzx
  37: add r3.z, r3.z, r3.z
  38: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  39: mul r5.xyz, r2.wwww, cb0[2].xyzx
  40: mul r6.xyz, r3.yyyy, v6.xyzx
  41: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  42: mul r2.w, r2.w, r3.x
  43: mul r2.w, r2.w, l(6.000000)
  44: sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r2.w
  45: add r2.w, r4.w, l(-1.000000)
  46: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  47: mul r2.w, r2.w, cb2[3].x
  48: mul r3.xzw, r4.xxyz, r2.wwww
  49: mul r3.xyz, r3.yyyy, r3.xzwx
  50: dp3 r2.w, -v2.xyzx, r2.xyzx
  51: add r3.w, r2.w, r2.w
  52: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  53: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  54: mov_sat r2.w, r2.w
  55: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  56: add r4.y, -r2.w, l(1.000000)
  57: mul r4.zw, r4.xxxy, r4.xxxy
  58: mul r2.yz, r4.xxyx, r4.xxwx
  59: mul r4.xy, r4.zyzz, r2.yzyy
  60: add r1.w, -r1.w, l(1.000000)
  61: add_sat r0.w, r0.w, r1.w
  62: mov r4.z, cb0[8].w
  63: sample r7.xyzw, r4.xzxx, t2.xyzw, s2
  64: mul r1.w, r7.x, l(16.000000)
  65: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  66: mul r4.xzw, r2.xxxx, r5.xxyz
  67: add r5.xyz, -r0.xyzx, r0.wwww
  68: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  69: mul r0.xyz, r0.xyzx, r3.xyzx
  70: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  71: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  72: mov o0.w, l(1.000000)
  73: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 52 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mov o4.w, r0.y
  30: mov o5.w, r0.z
  31: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r2.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  39: mul r1.w, v4.w, cb3[9].w
  40: mul o4.xyz, r1.wwww, r1.xyzx
  41: mov o5.xyz, r0.xyzx
  42: mul r1.x, r0.y, r0.y
  43: mad r1.x, r0.x, r0.x, -r1.x
  44: mul r2.xyzw, r0.yzzx, r0.xyzz
  45: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  46: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  47: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  48: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  49: mov r0.w, l(1.000000)
  50: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  51: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  52: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  53: add r0.xyz, r1.xyzx, r2.xyzx
  54: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: log r0.xyz, r0.xyzx
  56: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  57: exp r0.xyz, r0.xyzx
  58: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  59: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mov o6.w, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 62 math, 8 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_BumpMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: dp2 r2.z, r2.xyxx, r2.xyxx
  14: min r2.z, r2.z, l(1.000000)
  15: add r2.z, -r2.z, l(1.000000)
  16: sqrt r2.z, r2.z
  17: mul r3.xyz, r2.yyyy, v4.xyzx
  18: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  19: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  20: eq r2.w, cb3[0].x, l(1.000000)
  21: if_nz r2.w
  22:   eq r2.w, cb3[0].y, l(1.000000)
  23:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  24:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  25:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  26:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  27:   mov r4.y, v3.w
  28:   mov r4.z, v4.w
  29:   mov r4.w, v5.w
  30:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  31:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  32:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  33:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  34:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  35:   max r3.x, r2.w, r3.y
  36:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  37: else 
  38:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  41: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  42: add r3.x, -r0.w, l(1.000000)
  43: dp3 r3.z, v2.xyzx, r2.xyzx
  44: add r3.z, r3.z, r3.z
  45: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  46: mul r5.xyz, r2.wwww, cb0[2].xyzx
  47: mul r6.xyz, r3.yyyy, v6.xyzx
  48: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  49: mul r2.w, r2.w, r3.x
  50: mul r2.w, r2.w, l(6.000000)
  51: sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, r2.w
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  54: mul r2.w, r2.w, cb2[3].x
  55: mul r3.xzw, r4.xxyz, r2.wwww
  56: mul r3.xyz, r3.yyyy, r3.xzwx
  57: dp3 r2.w, -v2.xyzx, r2.xyzx
  58: add r3.w, r2.w, r2.w
  59: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  60: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  61: mov_sat r2.w, r2.w
  62: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  63: add r4.y, -r2.w, l(1.000000)
  64: mul r4.zw, r4.xxxy, r4.xxxy
  65: mul r2.yz, r4.xxyx, r4.xxwx
  66: mul r4.xy, r4.zyzz, r2.yzyy
  67: add r0.w, r0.w, -r1.w
  68: add_sat r0.w, r0.w, l(1.000000)
  69: mov r4.z, cb0[8].w
  70: sample r7.xyzw, r4.xzxx, t3.xyzw, s2
  71: mul r1.w, r7.x, l(16.000000)
  72: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  73: mul r4.xzw, r2.xxxx, r5.xxyz
  74: add r5.xyz, -r0.xyzx, r0.wwww
  75: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  76: mul r0.xyz, r0.xyzx, r3.xyzx
  77: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  78: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  79: mov o0.w, l(1.000000)
  80: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: mov o5.xyz, r0.xyzx
  32: mul r1.x, r0.y, r0.y
  33: mad r1.x, r0.x, r0.x, -r1.x
  34: mul r2.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  39: mov r0.w, l(1.000000)
  40: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  41: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  42: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  43: add r0.xyz, r1.xyzx, r2.xyzx
  44: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: log r0.xyz, r0.xyzx
  46: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  47: exp r0.xyz, r0.xyzx
  48: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  49: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: mov o6.w, l(0)
  51: mov o7.xyzw, l(0,0,0,0)
  52: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: mov o4.w, r1.y
  28: mov o5.w, r1.z
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r3.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  37: mul r1.w, v4.w, cb3[9].w
  38: mul o4.xyz, r1.wwww, r2.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.w, r1.y, r1.y
  41: mad r1.w, r1.x, r1.x, -r1.w
  42: mul r2.xyzw, r1.yzzx, r1.xyzz
  43: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  44: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  45: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  46: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  47: mov o6.w, l(0)
  48: mul r0.y, r0.y, cb1[5].x
  49: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  50: mov o7.zw, r0.zzzw
  51: add o7.xy, r1.zzzz, r1.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 63 math, 8 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_BumpMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set 2D Texture "_EmissionMap" to slot 4 sampler slot 6
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: dp2 r2.z, r2.xyxx, r2.xyxx
  14: min r2.z, r2.z, l(1.000000)
  15: add r2.z, -r2.z, l(1.000000)
  16: sqrt r2.z, r2.z
  17: mul r3.xyz, r2.yyyy, v4.xyzx
  18: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  19: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  20: eq r2.w, cb3[0].x, l(1.000000)
  21: if_nz r2.w
  22:   eq r2.w, cb3[0].y, l(1.000000)
  23:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  24:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  25:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  26:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  27:   mov r4.y, v3.w
  28:   mov r4.z, v4.w
  29:   mov r4.w, v5.w
  30:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  31:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  32:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  33:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  34:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  35:   max r3.x, r2.w, r3.y
  36:   sample r3.xyzw, r3.xzwx, t6.xyzw, s1
  37: else 
  38:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  41: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  42: add r3.x, -r0.w, l(1.000000)
  43: dp3 r3.z, v2.xyzx, r2.xyzx
  44: add r3.z, r3.z, r3.z
  45: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  46: mul r5.xyz, r2.wwww, cb0[2].xyzx
  47: mul r6.xyz, r3.yyyy, v6.xyzx
  48: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  49: mul r2.w, r2.w, r3.x
  50: mul r2.w, r2.w, l(6.000000)
  51: sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, r2.w
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  54: mul r2.w, r2.w, cb2[3].x
  55: mul r3.xzw, r4.xxyz, r2.wwww
  56: mul r3.xyz, r3.yyyy, r3.xzwx
  57: dp3 r2.w, -v2.xyzx, r2.xyzx
  58: add r3.w, r2.w, r2.w
  59: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  60: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  61: mov_sat r2.w, r2.w
  62: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  63: add r4.y, -r2.w, l(1.000000)
  64: mul r4.zw, r4.xxxy, r4.xxxy
  65: mul r2.yz, r4.xxyx, r4.xxwx
  66: mul r4.xy, r4.zyzz, r2.yzyy
  67: add r0.w, r0.w, -r1.w
  68: add_sat r0.w, r0.w, l(1.000000)
  69: mov r4.z, cb0[8].w
  70: sample r7.xyzw, r4.xzxx, t3.xyzw, s2
  71: mul r1.w, r7.x, l(16.000000)
  72: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  73: mul r4.xzw, r2.xxxx, r5.xxyz
  74: add r5.xyz, -r0.xyzx, r0.wwww
  75: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  76: mul r0.xyz, r0.xyzx, r3.xyzx
  77: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  78: mad r0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  79: sample r1.xyzw, v1.xyxx, t4.xyzw, s6
  80: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  81: mov o0.w, l(1.000000)
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: eq r2.w, cb3[0].x, l(1.000000)
  11: if_nz r2.w
  12:   eq r2.w, cb3[0].y, l(1.000000)
  13:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  14:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  15:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  17:   mov r4.y, v3.w
  18:   mov r4.z, v4.w
  19:   mov r4.w, v5.w
  20:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  21:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  22:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  23:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  24:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  25:   max r3.x, r2.w, r3.y
  26:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  27: else 
  28:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  31: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  32: add r3.x, -r0.x, l(1.000000)
  33: dp3 r3.z, v2.xyzx, r2.xyzx
  34: add r3.z, r3.z, r3.z
  35: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  36: mul r5.xyz, r2.wwww, cb0[2].xyzx
  37: mul r6.xyz, r3.yyyy, v6.xyzx
  38: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  39: mul r2.w, r2.w, r3.x
  40: mul r2.w, r2.w, l(6.000000)
  41: sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r2.w
  42: add r2.w, r4.w, l(-1.000000)
  43: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  44: mul r2.w, r2.w, cb2[3].x
  45: mul r3.xzw, r4.xxyz, r2.wwww
  46: mul r3.xyz, r3.yyyy, r3.xzwx
  47: dp3 r2.w, -v2.xyzx, r2.xyzx
  48: add r3.w, r2.w, r2.w
  49: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  50: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  51: mov_sat r2.w, r2.w
  52: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  53: add r4.y, -r2.w, l(1.000000)
  54: mul r4.zw, r4.xxxy, r4.xxxy
  55: mul r2.yz, r4.xxyx, r4.xxwx
  56: mul r4.xy, r4.zyzz, r2.yzyy
  57: add r1.w, -r1.w, l(1.000000)
  58: add_sat r0.x, r0.x, r1.w
  59: mov r4.z, cb0[8].w
  60: sample r7.xyzw, r4.xzxx, t2.xyzw, s2
  61: mul r1.w, r7.x, l(16.000000)
  62: mad r2.yzw, r1.wwww, r1.xxyz, r0.yyzw
  63: mul r4.xzw, r2.xxxx, r5.xxyz
  64: add r5.xyz, -r1.xyzx, r0.xxxx
  65: mad r1.xyz, r4.yyyy, r5.xyzx, r1.xyzx
  66: mul r1.xyz, r1.xyzx, r3.xyzx
  67: mad r0.xyz, r6.xyzx, r0.yzwy, r1.xyzx
  68: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  69: mov o0.w, l(1.000000)
  70: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r3.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r4.w, r5.xyzx, r5.xyzx
  23: sqrt r4.w, r4.w
  24: add r4.w, -r3.w, r4.w
  25: mad r3.w, cb3[25].w, r4.w, r3.w
  26: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  27: eq r4.w, cb6[0].x, l(1.000000)
  28: if_nz r4.w
  29:   eq r4.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s5
  47: add r4.w, r4.w, -r5.x
  48: mad r3.w, r3.w, r4.w, r5.x
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r4.w, -cb0[9].y, l(1.000000)
  51: mad r4.w, r5.y, cb0[9].y, r4.w
  52: add r5.x, -r0.x, l(1.000000)
  53: dp3 r5.y, r3.xyzx, r2.xyzx
  54: add r5.y, r5.y, r5.y
  55: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  56: mul r6.xyz, r3.wwww, cb0[2].xyzx
  57: lt r3.w, l(0.000000), cb5[2].w
  58: if_nz r3.w
  59:   dp3 r3.w, r5.yzwy, r5.yzwy
  60:   rsq r3.w, r3.w
  61:   mul r7.xyz, r3.wwww, r5.yzwy
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r3.w, r8.y, r8.x
  69:   min r3.w, r8.z, r3.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.yzwy
  74: endif 
  75: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  76: mul r3.w, r3.w, r5.x
  77: mul r3.w, r3.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  79: add r6.w, r7.w, l(-1.000000)
  80: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  81: mul r6.w, r6.w, cb5[3].x
  82: mul r8.xyz, r7.xyzx, r6.wwww
  83: lt r7.w, cb5[1].w, l(0.999990)
  84: if_nz r7.w
  85:   lt r7.w, l(0.000000), cb5[6].w
  86:   if_nz r7.w
  87:     dp3 r7.w, r5.yzwy, r5.yzwy
  88:     rsq r7.w, r7.w
  89:     mul r9.xyz, r5.yzwy, r7.wwww
  90:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  91:     div r10.xyz, r10.xyzx, r9.xyzx
  92:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  93:     div r11.xyz, r11.xyzx, r9.xyzx
  94:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  95:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  96:     min r7.w, r10.y, r10.x
  97:     min r7.w, r10.z, r7.w
  98:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
  99:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 100:   endif 
 101:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 102:   add r3.w, r9.w, l(-1.000000)
 103:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 104:   mul r3.w, r3.w, cb5[7].x
 105:   mul r4.xyz, r9.xyzx, r3.wwww
 106:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 107:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 108: endif 
 109: mul r4.xyz, r4.wwww, r8.xyzx
 110: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 111: dp3 r2.w, r5.yzwy, r5.yzwy
 112: max r2.w, r2.w, l(0.001000)
 113: rsq r2.w, r2.w
 114: mul r5.yzw, r2.wwww, r5.yyzw
 115: dp3 r2.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r5.yzwy
 118: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r5.xxxx
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.y, -r3.x, l(1.000000)
 123: mul r3.z, r3.y, r3.y
 124: mul r3.z, r3.z, r3.z
 125: mul r3.y, r3.y, r3.z
 126: mad r3.y, r2.z, r3.y, l(1.000000)
 127: add r3.z, -|r2.w|, l(1.000000)
 128: mul r3.w, r3.z, r3.z
 129: mul r3.w, r3.w, r3.w
 130: mul r3.z, r3.z, r3.w
 131: mad r2.z, r2.z, r3.z, l(1.000000)
 132: mul r2.z, r2.z, r3.y
 133: mul r3.y, r5.x, r5.x
 134: max r3.y, r3.y, l(0.002000)
 135: add r3.w, -r3.y, l(1.000000)
 136: mad r4.w, |r2.w|, r3.w, r3.y
 137: mad r3.w, r3.x, r3.w, r3.y
 138: mul r2.w, |r2.w|, r3.w
 139: mad r2.w, r3.x, r4.w, r2.w
 140: add r2.w, r2.w, l(0.000010)
 141: div r2.w, l(0.500000), r2.w
 142: mul r3.w, r3.y, r3.y
 143: mad r4.w, r2.x, r3.w, -r2.x
 144: mad r2.x, r4.w, r2.x, l(1.000000)
 145: mul r3.w, r3.w, l(0.318310)
 146: mad r2.x, r2.x, r2.x, l(0.000000)
 147: div r2.x, r3.w, r2.x
 148: mul r2.x, r2.x, r2.w
 149: mul r2.x, r2.x, l(3.141593)
 150: max r2.x, r2.x, l(0.000100)
 151: sqrt r2.x, r2.x
 152: mul r2.xz, r3.xxxx, r2.xxzx
 153: mul r2.w, r3.y, l(0.280000)
 154: mad r2.w, -r2.w, r5.x, l(1.000000)
 155: dp3 r3.x, r1.xyzx, r1.xyzx
 156: ne r3.x, r3.x, l(0.000000)
 157: and r3.x, r3.x, l(0x3f800000)
 158: mul r2.x, r2.x, r3.x
 159: add r0.x, r0.x, -r1.w
 160: add_sat r0.x, r0.x, l(1.000000)
 161: mul r3.xyw, r2.zzzz, r6.xyxz
 162: mul r5.xyz, r6.xyzx, r2.xxxx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.x, r1.w, r1.w
 165: mul r2.x, r2.x, r2.x
 166: mul r1.w, r1.w, r2.x
 167: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 169: mul r2.xyz, r2.xyzx, r5.xyzx
 170: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 171: mul r2.xyz, r4.xyzx, r2.wwww
 172: add r3.xyw, -r1.xyxz, r0.xxxx
 173: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 174: mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 175: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 176: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: dp3 r2.w, v2.xyzx, v2.xyzx
  14: rsq r2.w, r2.w
  15: mul r3.xyz, r2.wwww, v2.xyzx
  16: mov r4.x, v3.w
  17: mov r4.y, v4.w
  18: mov r4.z, v5.w
  19: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r3.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  25: dp3 r4.w, r5.xyzx, r5.xyzx
  26: sqrt r4.w, r4.w
  27: add r4.w, -r3.w, r4.w
  28: mad r3.w, cb3[25].w, r4.w, r3.w
  29: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  30: eq r4.w, cb6[0].x, l(1.000000)
  31: if_nz r4.w
  32:   eq r4.w, cb6[0].y, l(1.000000)
  33:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  34:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  35:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  37:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  38:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  40:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r4.w, r5.y
  43:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  48: div r5.xy, v7.xyxx, v7.wwww
  49: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  50: add r4.w, r4.w, -r5.x
  51: mad r3.w, r3.w, r4.w, r5.x
  52: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r4.w, -cb0[9].y, l(1.000000)
  54: mad r4.w, r5.y, cb0[9].y, r4.w
  55: add r5.x, -r0.w, l(1.000000)
  56: dp3 r5.y, r3.xyzx, r2.xyzx
  57: add r5.y, r5.y, r5.y
  58: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  59: mul r6.xyz, r3.wwww, cb0[2].xyzx
  60: lt r3.w, l(0.000000), cb5[2].w
  61: if_nz r3.w
  62:   dp3 r3.w, r5.yzwy, r5.yzwy
  63:   rsq r3.w, r3.w
  64:   mul r7.xyz, r3.wwww, r5.yzwy
  65:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  66:   div r8.xyz, r8.xyzx, r7.xyzx
  67:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  68:   div r9.xyz, r9.xyzx, r7.xyzx
  69:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  70:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  71:   min r3.w, r8.y, r8.x
  72:   min r3.w, r8.z, r3.w
  73:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  74:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  75: else 
  76:   mov r7.xyz, r5.yzwy
  77: endif 
  78: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  79: mul r3.w, r3.w, r5.x
  80: mul r3.w, r3.w, l(6.000000)
  81: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  82: add r6.w, r7.w, l(-1.000000)
  83: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  84: mul r6.w, r6.w, cb5[3].x
  85: mul r8.xyz, r7.xyzx, r6.wwww
  86: lt r7.w, cb5[1].w, l(0.999990)
  87: if_nz r7.w
  88:   lt r7.w, l(0.000000), cb5[6].w
  89:   if_nz r7.w
  90:     dp3 r7.w, r5.yzwy, r5.yzwy
  91:     rsq r7.w, r7.w
  92:     mul r9.xyz, r5.yzwy, r7.wwww
  93:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  94:     div r10.xyz, r10.xyzx, r9.xyzx
  95:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:     min r7.w, r10.y, r10.x
 100:     min r7.w, r10.z, r7.w
 101:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 102:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 103:   endif 
 104:   sample_l r9.xyzw, r5.yzwy, t4.xyzw, s0, r3.w
 105:   add r3.w, r9.w, l(-1.000000)
 106:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 107:   mul r3.w, r3.w, cb5[7].x
 108:   mul r4.xyz, r9.xyzx, r3.wwww
 109:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 110:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 111: endif 
 112: mul r4.xyz, r4.wwww, r8.xyzx
 113: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 114: dp3 r2.w, r5.yzwy, r5.yzwy
 115: max r2.w, r2.w, l(0.001000)
 116: rsq r2.w, r2.w
 117: mul r5.yzw, r2.wwww, r5.yyzw
 118: dp3 r2.w, r2.xyzx, -r3.xyzx
 119: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 120: dp3_sat r2.x, r2.xyzx, r5.yzwy
 121: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 122: mul r2.z, r2.y, r2.y
 123: dp2 r2.z, r2.zzzz, r5.xxxx
 124: add r2.z, r2.z, l(-0.500000)
 125: add r3.y, -r3.x, l(1.000000)
 126: mul r3.z, r3.y, r3.y
 127: mul r3.z, r3.z, r3.z
 128: mul r3.y, r3.y, r3.z
 129: mad r3.y, r2.z, r3.y, l(1.000000)
 130: add r3.z, -|r2.w|, l(1.000000)
 131: mul r3.w, r3.z, r3.z
 132: mul r3.w, r3.w, r3.w
 133: mul r3.z, r3.z, r3.w
 134: mad r2.z, r2.z, r3.z, l(1.000000)
 135: mul r2.z, r2.z, r3.y
 136: mul r3.y, r5.x, r5.x
 137: max r3.y, r3.y, l(0.002000)
 138: add r3.w, -r3.y, l(1.000000)
 139: mad r4.w, |r2.w|, r3.w, r3.y
 140: mad r3.w, r3.x, r3.w, r3.y
 141: mul r2.w, |r2.w|, r3.w
 142: mad r2.w, r3.x, r4.w, r2.w
 143: add r2.w, r2.w, l(0.000010)
 144: div r2.w, l(0.500000), r2.w
 145: mul r3.w, r3.y, r3.y
 146: mad r4.w, r2.x, r3.w, -r2.x
 147: mad r2.x, r4.w, r2.x, l(1.000000)
 148: mul r3.w, r3.w, l(0.318310)
 149: mad r2.x, r2.x, r2.x, l(0.000000)
 150: div r2.x, r3.w, r2.x
 151: mul r2.x, r2.x, r2.w
 152: mul r2.x, r2.x, l(3.141593)
 153: max r2.x, r2.x, l(0.000100)
 154: sqrt r2.x, r2.x
 155: mul r2.xz, r3.xxxx, r2.xxzx
 156: mul r2.w, r3.y, l(0.280000)
 157: mad r2.w, -r2.w, r5.x, l(1.000000)
 158: dp3 r3.x, r0.xyzx, r0.xyzx
 159: ne r3.x, r3.x, l(0.000000)
 160: and r3.x, r3.x, l(0x3f800000)
 161: mul r2.x, r2.x, r3.x
 162: add r0.w, r0.w, -r1.w
 163: add_sat r0.w, r0.w, l(1.000000)
 164: mul r3.xyw, r2.zzzz, r6.xyxz
 165: mul r5.xyz, r6.xyzx, r2.xxxx
 166: add r1.w, -r2.y, l(1.000000)
 167: mul r2.x, r1.w, r1.w
 168: mul r2.x, r2.x, r2.x
 169: mul r1.w, r1.w, r2.x
 170: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 172: mul r2.xyz, r2.xyzx, r5.xyzx
 173: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 174: mul r2.xyz, r4.xyzx, r2.wwww
 175: add r3.xyw, -r0.xyxz, r0.wwww
 176: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 177: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 178: mov o0.w, l(1.000000)
 179: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r2.w, v2.xyzx, v2.xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, v2.xyzx
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r3.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r4.w, r5.xyzx, r5.xyzx
  37: sqrt r4.w, r4.w
  38: add r4.w, -r3.w, r4.w
  39: mad r3.w, cb3[25].w, r4.w, r3.w
  40: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  41: eq r4.w, cb6[0].x, l(1.000000)
  42: if_nz r4.w
  43:   eq r4.w, cb6[0].y, l(1.000000)
  44:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  46:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  48:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  49:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  51:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r4.w, r5.y
  54:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  59: div r5.xy, v7.xyxx, v7.wwww
  60: sample r5.xyzw, r5.xyxx, t2.xyzw, s5
  61: add r4.w, r4.w, -r5.x
  62: mad r3.w, r3.w, r4.w, r5.x
  63: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r4.w, -cb0[9].y, l(1.000000)
  65: mad r4.w, r5.y, cb0[9].y, r4.w
  66: add r5.x, -r0.w, l(1.000000)
  67: dp3 r5.y, r3.xyzx, r2.xyzx
  68: add r5.y, r5.y, r5.y
  69: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  70: mul r6.xyz, r3.wwww, cb0[2].xyzx
  71: lt r3.w, l(0.000000), cb5[2].w
  72: if_nz r3.w
  73:   dp3 r3.w, r5.yzwy, r5.yzwy
  74:   rsq r3.w, r3.w
  75:   mul r7.xyz, r3.wwww, r5.yzwy
  76:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  77:   div r8.xyz, r8.xyzx, r7.xyzx
  78:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  79:   div r9.xyz, r9.xyzx, r7.xyzx
  80:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  81:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  82:   min r3.w, r8.y, r8.x
  83:   min r3.w, r8.z, r3.w
  84:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  85:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  86: else 
  87:   mov r7.xyz, r5.yzwy
  88: endif 
  89: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  90: mul r3.w, r3.w, r5.x
  91: mul r3.w, r3.w, l(6.000000)
  92: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  93: add r6.w, r7.w, l(-1.000000)
  94: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  95: mul r6.w, r6.w, cb5[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb5[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb5[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 116:   add r3.w, r9.w, l(-1.000000)
 117:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 118:   mul r3.w, r3.w, cb5[7].x
 119:   mul r4.xyz, r9.xyzx, r3.wwww
 120:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 121:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 122: endif 
 123: mul r4.xyz, r4.wwww, r8.xyzx
 124: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 125: dp3 r2.w, r5.yzwy, r5.yzwy
 126: max r2.w, r2.w, l(0.001000)
 127: rsq r2.w, r2.w
 128: mul r5.yzw, r2.wwww, r5.yyzw
 129: dp3 r2.w, r2.xyzx, -r3.xyzx
 130: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 131: dp3_sat r2.x, r2.xyzx, r5.yzwy
 132: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 133: mul r2.z, r2.y, r2.y
 134: dp2 r2.z, r2.zzzz, r5.xxxx
 135: add r2.z, r2.z, l(-0.500000)
 136: add r3.y, -r3.x, l(1.000000)
 137: mul r3.z, r3.y, r3.y
 138: mul r3.z, r3.z, r3.z
 139: mul r3.y, r3.y, r3.z
 140: mad r3.y, r2.z, r3.y, l(1.000000)
 141: add r3.z, -|r2.w|, l(1.000000)
 142: mul r3.w, r3.z, r3.z
 143: mul r3.w, r3.w, r3.w
 144: mul r3.z, r3.z, r3.w
 145: mad r2.z, r2.z, r3.z, l(1.000000)
 146: mul r2.z, r2.z, r3.y
 147: mul r3.y, r5.x, r5.x
 148: max r3.y, r3.y, l(0.002000)
 149: add r3.w, -r3.y, l(1.000000)
 150: mad r4.w, |r2.w|, r3.w, r3.y
 151: mad r3.w, r3.x, r3.w, r3.y
 152: mul r2.w, |r2.w|, r3.w
 153: mad r2.w, r3.x, r4.w, r2.w
 154: add r2.w, r2.w, l(0.000010)
 155: div r2.w, l(0.500000), r2.w
 156: mul r3.w, r3.y, r3.y
 157: mad r4.w, r2.x, r3.w, -r2.x
 158: mad r2.x, r4.w, r2.x, l(1.000000)
 159: mul r3.w, r3.w, l(0.318310)
 160: mad r2.x, r2.x, r2.x, l(0.000000)
 161: div r2.x, r3.w, r2.x
 162: mul r2.x, r2.x, r2.w
 163: mul r2.x, r2.x, l(3.141593)
 164: max r2.x, r2.x, l(0.000100)
 165: sqrt r2.x, r2.x
 166: mul r2.xz, r3.xxxx, r2.xxzx
 167: mul r2.w, r3.y, l(0.280000)
 168: mad r2.w, -r2.w, r5.x, l(1.000000)
 169: dp3 r3.x, r0.xyzx, r0.xyzx
 170: ne r3.x, r3.x, l(0.000000)
 171: and r3.x, r3.x, l(0x3f800000)
 172: mul r2.x, r2.x, r3.x
 173: add r0.w, r0.w, -r1.w
 174: add_sat r0.w, r0.w, l(1.000000)
 175: mul r3.xyw, r2.zzzz, r6.xyxz
 176: mul r5.xyz, r6.xyzx, r2.xxxx
 177: add r1.w, -r2.y, l(1.000000)
 178: mul r2.x, r1.w, r1.w
 179: mul r2.x, r2.x, r2.x
 180: mul r1.w, r1.w, r2.x
 181: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 182: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 183: mul r2.xyz, r2.xyzx, r5.xyzx
 184: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 185: mul r2.xyz, r4.xyzx, r2.wwww
 186: add r3.xyw, -r0.xyxz, r0.wwww
 187: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 188: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 189: mov o0.w, l(1.000000)
 190: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 161 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "_EmissionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r2.w, v2.xyzx, v2.xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, v2.xyzx
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r3.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r4.w, r5.xyzx, r5.xyzx
  37: sqrt r4.w, r4.w
  38: add r4.w, -r3.w, r4.w
  39: mad r3.w, cb3[25].w, r4.w, r3.w
  40: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  41: eq r4.w, cb6[0].x, l(1.000000)
  42: if_nz r4.w
  43:   eq r4.w, cb6[0].y, l(1.000000)
  44:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  46:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  48:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  49:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  51:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r4.w, r5.y
  54:   sample r5.xyzw, r5.xzwx, t7.xyzw, s1
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  59: div r5.xy, v7.xyxx, v7.wwww
  60: sample r5.xyzw, r5.xyxx, t2.xyzw, s6
  61: add r4.w, r4.w, -r5.x
  62: mad r3.w, r3.w, r4.w, r5.x
  63: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r4.w, -cb0[9].y, l(1.000000)
  65: mad r4.w, r5.y, cb0[9].y, r4.w
  66: add r5.x, -r0.w, l(1.000000)
  67: dp3 r5.y, r3.xyzx, r2.xyzx
  68: add r5.y, r5.y, r5.y
  69: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  70: mul r6.xyz, r3.wwww, cb0[2].xyzx
  71: lt r3.w, l(0.000000), cb5[2].w
  72: if_nz r3.w
  73:   dp3 r3.w, r5.yzwy, r5.yzwy
  74:   rsq r3.w, r3.w
  75:   mul r7.xyz, r3.wwww, r5.yzwy
  76:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  77:   div r8.xyz, r8.xyzx, r7.xyzx
  78:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  79:   div r9.xyz, r9.xyzx, r7.xyzx
  80:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  81:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  82:   min r3.w, r8.y, r8.x
  83:   min r3.w, r8.z, r3.w
  84:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  85:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  86: else 
  87:   mov r7.xyz, r5.yzwy
  88: endif 
  89: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  90: mul r3.w, r3.w, r5.x
  91: mul r3.w, r3.w, l(6.000000)
  92: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
  93: add r6.w, r7.w, l(-1.000000)
  94: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  95: mul r6.w, r6.w, cb5[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb5[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb5[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
 116:   add r3.w, r9.w, l(-1.000000)
 117:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 118:   mul r3.w, r3.w, cb5[7].x
 119:   mul r4.xyz, r9.xyzx, r3.wwww
 120:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 121:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 122: endif 
 123: mul r4.xyz, r4.wwww, r8.xyzx
 124: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 125: dp3 r2.w, r5.yzwy, r5.yzwy
 126: max r2.w, r2.w, l(0.001000)
 127: rsq r2.w, r2.w
 128: mul r5.yzw, r2.wwww, r5.yyzw
 129: dp3 r2.w, r2.xyzx, -r3.xyzx
 130: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 131: dp3_sat r2.x, r2.xyzx, r5.yzwy
 132: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 133: mul r2.z, r2.y, r2.y
 134: dp2 r2.z, r2.zzzz, r5.xxxx
 135: add r2.z, r2.z, l(-0.500000)
 136: add r3.y, -r3.x, l(1.000000)
 137: mul r3.z, r3.y, r3.y
 138: mul r3.z, r3.z, r3.z
 139: mul r3.y, r3.y, r3.z
 140: mad r3.y, r2.z, r3.y, l(1.000000)
 141: add r3.z, -|r2.w|, l(1.000000)
 142: mul r3.w, r3.z, r3.z
 143: mul r3.w, r3.w, r3.w
 144: mul r3.z, r3.z, r3.w
 145: mad r2.z, r2.z, r3.z, l(1.000000)
 146: mul r2.z, r2.z, r3.y
 147: mul r3.y, r5.x, r5.x
 148: max r3.y, r3.y, l(0.002000)
 149: add r3.w, -r3.y, l(1.000000)
 150: mad r4.w, |r2.w|, r3.w, r3.y
 151: mad r3.w, r3.x, r3.w, r3.y
 152: mul r2.w, |r2.w|, r3.w
 153: mad r2.w, r3.x, r4.w, r2.w
 154: add r2.w, r2.w, l(0.000010)
 155: div r2.w, l(0.500000), r2.w
 156: mul r3.w, r3.y, r3.y
 157: mad r4.w, r2.x, r3.w, -r2.x
 158: mad r2.x, r4.w, r2.x, l(1.000000)
 159: mul r3.w, r3.w, l(0.318310)
 160: mad r2.x, r2.x, r2.x, l(0.000000)
 161: div r2.x, r3.w, r2.x
 162: mul r2.x, r2.x, r2.w
 163: mul r2.x, r2.x, l(3.141593)
 164: max r2.x, r2.x, l(0.000100)
 165: sqrt r2.x, r2.x
 166: mul r2.xz, r3.xxxx, r2.xxzx
 167: mul r2.w, r3.y, l(0.280000)
 168: mad r2.w, -r2.w, r5.x, l(1.000000)
 169: dp3 r3.x, r0.xyzx, r0.xyzx
 170: ne r3.x, r3.x, l(0.000000)
 171: and r3.x, r3.x, l(0x3f800000)
 172: mul r2.x, r2.x, r3.x
 173: add r0.w, r0.w, -r1.w
 174: add_sat r0.w, r0.w, l(1.000000)
 175: mul r3.xyw, r2.zzzz, r6.xyxz
 176: mul r5.xyz, r6.xyzx, r2.xxxx
 177: add r1.w, -r2.y, l(1.000000)
 178: mul r2.x, r1.w, r1.w
 179: mul r2.x, r2.x, r2.x
 180: mul r1.w, r1.w, r2.x
 181: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 182: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 183: mul r2.xyz, r2.xyzx, r5.xyzx
 184: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 185: mul r2.xyz, r4.xyzx, r2.wwww
 186: add r3.xyw, -r0.xyxz, r0.wwww
 187: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 188: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 189: sample r1.xyzw, v1.xyxx, t4.xyzw, s5
 190: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 148 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r3.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r4.w, r5.xyzx, r5.xyzx
  23: sqrt r4.w, r4.w
  24: add r4.w, -r3.w, r4.w
  25: mad r3.w, cb3[25].w, r4.w, r3.w
  26: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  27: eq r4.w, cb6[0].x, l(1.000000)
  28: if_nz r4.w
  29:   eq r4.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  47: add r4.w, r4.w, -r5.x
  48: mad r3.w, r3.w, r4.w, r5.x
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r4.w, -cb0[9].y, l(1.000000)
  51: mad r4.w, r5.y, cb0[9].y, r4.w
  52: add r5.x, -r0.x, l(1.000000)
  53: dp3 r5.y, r3.xyzx, r2.xyzx
  54: add r5.y, r5.y, r5.y
  55: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  56: mul r6.xyz, r3.wwww, cb0[2].xyzx
  57: lt r3.w, l(0.000000), cb5[2].w
  58: if_nz r3.w
  59:   dp3 r3.w, r5.yzwy, r5.yzwy
  60:   rsq r3.w, r3.w
  61:   mul r7.xyz, r3.wwww, r5.yzwy
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r3.w, r8.y, r8.x
  69:   min r3.w, r8.z, r3.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.yzwy
  74: endif 
  75: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  76: mul r3.w, r3.w, r5.x
  77: mul r3.w, r3.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  79: add r6.w, r7.w, l(-1.000000)
  80: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  81: mul r6.w, r6.w, cb5[3].x
  82: mul r8.xyz, r7.xyzx, r6.wwww
  83: lt r7.w, cb5[1].w, l(0.999990)
  84: if_nz r7.w
  85:   lt r7.w, l(0.000000), cb5[6].w
  86:   if_nz r7.w
  87:     dp3 r7.w, r5.yzwy, r5.yzwy
  88:     rsq r7.w, r7.w
  89:     mul r9.xyz, r5.yzwy, r7.wwww
  90:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  91:     div r10.xyz, r10.xyzx, r9.xyzx
  92:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  93:     div r11.xyz, r11.xyzx, r9.xyzx
  94:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  95:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  96:     min r7.w, r10.y, r10.x
  97:     min r7.w, r10.z, r7.w
  98:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
  99:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 100:   endif 
 101:   sample_l r9.xyzw, r5.yzwy, t4.xyzw, s0, r3.w
 102:   add r3.w, r9.w, l(-1.000000)
 103:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 104:   mul r3.w, r3.w, cb5[7].x
 105:   mul r4.xyz, r9.xyzx, r3.wwww
 106:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 107:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 108: endif 
 109: mul r4.xyz, r4.wwww, r8.xyzx
 110: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 111: dp3 r2.w, r5.yzwy, r5.yzwy
 112: max r2.w, r2.w, l(0.001000)
 113: rsq r2.w, r2.w
 114: mul r5.yzw, r2.wwww, r5.yyzw
 115: dp3 r2.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r5.yzwy
 118: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r5.xxxx
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.y, -r3.x, l(1.000000)
 123: mul r3.z, r3.y, r3.y
 124: mul r3.z, r3.z, r3.z
 125: mul r3.y, r3.y, r3.z
 126: mad r3.y, r2.z, r3.y, l(1.000000)
 127: add r3.z, -|r2.w|, l(1.000000)
 128: mul r3.w, r3.z, r3.z
 129: mul r3.w, r3.w, r3.w
 130: mul r3.z, r3.z, r3.w
 131: mad r2.z, r2.z, r3.z, l(1.000000)
 132: mul r2.z, r2.z, r3.y
 133: mul r3.y, r5.x, r5.x
 134: max r3.y, r3.y, l(0.002000)
 135: add r3.w, -r3.y, l(1.000000)
 136: mad r4.w, |r2.w|, r3.w, r3.y
 137: mad r3.w, r3.x, r3.w, r3.y
 138: mul r2.w, |r2.w|, r3.w
 139: mad r2.w, r3.x, r4.w, r2.w
 140: add r2.w, r2.w, l(0.000010)
 141: div r2.w, l(0.500000), r2.w
 142: mul r3.w, r3.y, r3.y
 143: mad r4.w, r2.x, r3.w, -r2.x
 144: mad r2.x, r4.w, r2.x, l(1.000000)
 145: mul r3.w, r3.w, l(0.318310)
 146: mad r2.x, r2.x, r2.x, l(0.000000)
 147: div r2.x, r3.w, r2.x
 148: mul r2.x, r2.x, r2.w
 149: mul r2.x, r2.x, l(3.141593)
 150: max r2.x, r2.x, l(0.000100)
 151: sqrt r2.x, r2.x
 152: mul r2.xz, r3.xxxx, r2.xxzx
 153: mul r2.w, r3.y, l(0.280000)
 154: mad r2.w, -r2.w, r5.x, l(1.000000)
 155: dp3 r3.x, r1.xyzx, r1.xyzx
 156: ne r3.x, r3.x, l(0.000000)
 157: and r3.x, r3.x, l(0x3f800000)
 158: mul r2.x, r2.x, r3.x
 159: add r0.x, r0.x, -r1.w
 160: add_sat r0.x, r0.x, l(1.000000)
 161: mul r3.xyw, r2.zzzz, r6.xyxz
 162: mul r5.xyz, r6.xyzx, r2.xxxx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.x, r1.w, r1.w
 165: mul r2.x, r2.x, r2.x
 166: mul r1.w, r1.w, r2.x
 167: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 169: mul r2.xyz, r2.xyzx, r5.xyzx
 170: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 171: mul r2.xyz, r4.xyzx, r2.wwww
 172: add r3.xyw, -r1.xyxz, r0.xxxx
 173: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 174: mad o0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 177 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r4.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r5.x, r5.xyzx, r5.xyzx
  23: sqrt r5.x, r5.x
  24: add r5.x, -r4.w, r5.x
  25: mad r4.w, cb3[25].w, r5.x, r4.w
  26: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  27: eq r5.x, cb6[0].x, l(1.000000)
  28: if_nz r5.x
  29:   eq r5.y, cb6[0].y, l(1.000000)
  30:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  32:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  33:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  34:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  35:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  36:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  37:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  38:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r6.x, r5.z, r5.y
  40:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  45: div r5.zw, v7.xxxy, v7.wwww
  46: sample r6.xyzw, r5.zwzz, t1.xyzw, s5
  47: add r5.y, r5.y, -r6.x
  48: mad r4.w, r4.w, r5.y, r6.x
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: add r5.z, -r0.x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: max r3.y, r3.y, l(0.002000)
 171: add r3.w, -r3.y, l(1.000000)
 172: mad r4.w, |r2.w|, r3.w, r3.y
 173: mad r3.w, r3.x, r3.w, r3.y
 174: mul r2.w, |r2.w|, r3.w
 175: mad r2.w, r3.x, r4.w, r2.w
 176: add r2.w, r2.w, l(0.000010)
 177: div r2.w, l(0.500000), r2.w
 178: mul r3.w, r3.y, r3.y
 179: mad r4.w, r2.x, r3.w, -r2.x
 180: mad r2.x, r4.w, r2.x, l(1.000000)
 181: mul r3.w, r3.w, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.w, r2.x
 184: mul r2.x, r2.x, r2.w
 185: mul r2.x, r2.x, l(3.141593)
 186: max r2.x, r2.x, l(0.000100)
 187: sqrt r2.x, r2.x
 188: mul r2.xz, r3.xxxx, r2.xxzx
 189: mul r2.w, r3.y, l(0.280000)
 190: mad r2.w, -r2.w, r5.z, l(1.000000)
 191: dp3 r3.x, r1.xyzx, r1.xyzx
 192: ne r3.x, r3.x, l(0.000000)
 193: and r3.x, r3.x, l(0x3f800000)
 194: mul r2.x, r2.x, r3.x
 195: add r0.x, r0.x, -r1.w
 196: add_sat r0.x, r0.x, l(1.000000)
 197: mul r3.xyw, r2.zzzz, r7.xyxz
 198: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 199: mul r5.xyz, r7.xyzx, r2.xxxx
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.x, r1.w, r1.w
 202: mul r2.x, r2.x, r2.x
 203: mul r1.w, r1.w, r2.x
 204: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 206: mul r2.xyz, r2.xyzx, r5.xyzx
 207: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 208: mul r2.xyz, r4.xyzx, r2.wwww
 209: add r3.xyw, -r1.xyxz, r0.xxxx
 210: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 211: mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 212: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 213: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r2.x, v5.xyzx, v5.xyzx
  11: rsq r2.x, r2.x
  12: mul r2.xyz, r2.xxxx, v5.xyzx
  13: dp3 r3.x, v2.xyzx, v2.xyzx
  14: rsq r3.x, r3.x
  15: mul r3.yzw, r3.xxxx, v2.xxyz
  16: mov r4.x, v3.w
  17: mov r4.y, v4.w
  18: mov r4.z, v5.w
  19: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r4.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  25: dp3 r5.x, r5.xyzx, r5.xyzx
  26: sqrt r5.x, r5.x
  27: add r5.x, -r4.w, r5.x
  28: mad r4.w, cb3[25].w, r5.x, r4.w
  29: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  30: eq r5.x, cb6[0].x, l(1.000000)
  31: if_nz r5.x
  32:   eq r5.y, cb6[0].y, l(1.000000)
  33:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  34:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  35:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  36:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  37:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  38:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  39:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  40:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  41:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  42:   max r6.x, r5.z, r5.y
  43:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  44: else 
  45:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  48: div r5.zw, v7.xxxy, v7.wwww
  49: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  50: add r5.y, r5.y, -r6.x
  51: mad r4.w, r4.w, r5.y, r6.x
  52: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r5.y, -cb0[9].y, l(1.000000)
  54: mad r5.y, r6.y, cb0[9].y, r5.y
  55: add r5.z, -r0.w, l(1.000000)
  56: dp3 r5.w, r3.yzwy, r2.xyzx
  57: add r5.w, r5.w, r5.w
  58: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  59: mul r7.xyz, r4.wwww, cb0[2].xyzx
  60: if_nz r5.x
  61:   eq r4.w, cb6[0].y, l(1.000000)
  62:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  63:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  64:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  65:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  66:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  67:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  68:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  69:   mul r4.w, r8.y, l(0.250000)
  70:   mul r5.x, cb6[0].z, l(0.500000)
  71:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  72:   max r4.w, r4.w, r5.x
  73:   min r8.x, r5.w, r4.w
  74:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  75:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  76:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  77:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  78:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  79:   mov r2.w, l(1.000000)
  80:   dp4 r9.x, r9.xyzw, r2.xyzw
  81:   dp4 r9.y, r10.xyzw, r2.xyzw
  82:   dp4 r9.z, r8.xyzw, r2.xyzw
  83: else 
  84:   mov r2.w, l(1.000000)
  85:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  86:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  87:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  88: endif 
  89: add r8.xyz, r9.xyzx, v6.xyzx
  90: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  91: log r8.xyz, r8.xyzx
  92: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  93: exp r8.xyz, r8.xyzx
  94: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  95: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  96: lt r2.w, l(0.000000), cb5[2].w
  97: if_nz r2.w
  98:   dp3 r2.w, r6.xyzx, r6.xyzx
  99:   rsq r2.w, r2.w
 100:   mul r9.xyz, r2.wwww, r6.xyzx
 101:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 102:   div r10.xyz, r10.xyzx, r9.xyzx
 103:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 104:   div r11.xyz, r11.xyzx, r9.xyzx
 105:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 106:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 107:   min r2.w, r10.y, r10.x
 108:   min r2.w, r10.z, r2.w
 109:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 110:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 111: else 
 112:   mov r9.xyz, r6.xyzx
 113: endif 
 114: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 115: mul r2.w, r2.w, r5.z
 116: mul r2.w, r2.w, l(6.000000)
 117: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 118: add r4.w, r9.w, l(-1.000000)
 119: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 120: mul r4.w, r4.w, cb5[3].x
 121: mul r10.xyz, r9.xyzx, r4.wwww
 122: lt r5.x, cb5[1].w, l(0.999990)
 123: if_nz r5.x
 124:   lt r5.x, l(0.000000), cb5[6].w
 125:   if_nz r5.x
 126:     dp3 r5.x, r6.xyzx, r6.xyzx
 127:     rsq r5.x, r5.x
 128:     mul r11.xyz, r5.xxxx, r6.xyzx
 129:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 130:     div r12.xyz, r12.xyzx, r11.xyzx
 131:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 132:     div r13.xyz, r13.xyzx, r11.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r5.x, r12.y, r12.x
 136:     min r5.x, r12.z, r5.x
 137:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 138:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 139:   endif 
 140:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 141:   add r2.w, r6.w, l(-1.000000)
 142:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 143:   mul r2.w, r2.w, cb5[7].x
 144:   mul r4.xyz, r6.xyzx, r2.wwww
 145:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 146:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 147: endif 
 148: mul r4.xyz, r5.yyyy, r10.xyzx
 149: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 150: dp3 r2.w, r6.xyzx, r6.xyzx
 151: max r2.w, r2.w, l(0.001000)
 152: rsq r2.w, r2.w
 153: mul r6.xyz, r2.wwww, r6.xyzx
 154: dp3 r2.w, r2.xyzx, -r3.yzwy
 155: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 156: dp3_sat r2.x, r2.xyzx, r6.xyzx
 157: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 158: mul r2.z, r2.y, r2.y
 159: dp2 r2.z, r2.zzzz, r5.zzzz
 160: add r2.z, r2.z, l(-0.500000)
 161: add r3.y, -r3.x, l(1.000000)
 162: mul r3.z, r3.y, r3.y
 163: mul r3.z, r3.z, r3.z
 164: mul r3.y, r3.y, r3.z
 165: mad r3.y, r2.z, r3.y, l(1.000000)
 166: add r3.z, -|r2.w|, l(1.000000)
 167: mul r3.w, r3.z, r3.z
 168: mul r3.w, r3.w, r3.w
 169: mul r3.z, r3.z, r3.w
 170: mad r2.z, r2.z, r3.z, l(1.000000)
 171: mul r2.z, r2.z, r3.y
 172: mul r3.y, r5.z, r5.z
 173: max r3.y, r3.y, l(0.002000)
 174: add r3.w, -r3.y, l(1.000000)
 175: mad r4.w, |r2.w|, r3.w, r3.y
 176: mad r3.w, r3.x, r3.w, r3.y
 177: mul r2.w, |r2.w|, r3.w
 178: mad r2.w, r3.x, r4.w, r2.w
 179: add r2.w, r2.w, l(0.000010)
 180: div r2.w, l(0.500000), r2.w
 181: mul r3.w, r3.y, r3.y
 182: mad r4.w, r2.x, r3.w, -r2.x
 183: mad r2.x, r4.w, r2.x, l(1.000000)
 184: mul r3.w, r3.w, l(0.318310)
 185: mad r2.x, r2.x, r2.x, l(0.000000)
 186: div r2.x, r3.w, r2.x
 187: mul r2.x, r2.x, r2.w
 188: mul r2.x, r2.x, l(3.141593)
 189: max r2.x, r2.x, l(0.000100)
 190: sqrt r2.x, r2.x
 191: mul r2.xz, r3.xxxx, r2.xxzx
 192: mul r2.w, r3.y, l(0.280000)
 193: mad r2.w, -r2.w, r5.z, l(1.000000)
 194: dp3 r3.x, r0.xyzx, r0.xyzx
 195: ne r3.x, r3.x, l(0.000000)
 196: and r3.x, r3.x, l(0x3f800000)
 197: mul r2.x, r2.x, r3.x
 198: add r0.w, r0.w, -r1.w
 199: add_sat r0.w, r0.w, l(1.000000)
 200: mul r3.xyw, r2.zzzz, r7.xyxz
 201: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 202: mul r5.xyz, r7.xyzx, r2.xxxx
 203: add r1.w, -r2.y, l(1.000000)
 204: mul r2.x, r1.w, r1.w
 205: mul r2.x, r2.x, r2.x
 206: mul r1.w, r1.w, r2.x
 207: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 209: mul r2.xyz, r2.xyzx, r5.xyzx
 210: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 211: mul r2.xyz, r4.xyzx, r2.wwww
 212: add r3.xyw, -r0.xyxz, r0.wwww
 213: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 214: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 215: mov o0.w, l(1.000000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r3.x, v2.xyzx, v2.xyzx
  25: rsq r3.x, r3.x
  26: mul r3.yzw, r3.xxxx, v2.xxyz
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r4.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r5.x, r5.xyzx, r5.xyzx
  37: sqrt r5.x, r5.x
  38: add r5.x, -r4.w, r5.x
  39: mad r4.w, cb3[25].w, r5.x, r4.w
  40: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  41: eq r5.x, cb6[0].x, l(1.000000)
  42: if_nz r5.x
  43:   eq r5.y, cb6[0].y, l(1.000000)
  44:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  46:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  47:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  48:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  49:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  50:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  51:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  52:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r6.x, r5.z, r5.y
  54:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  55: else 
  56:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  59: div r5.zw, v7.xxxy, v7.wwww
  60: sample r6.xyzw, r5.zwzz, t2.xyzw, s5
  61: add r5.y, r5.y, -r6.x
  62: mad r4.w, r4.w, r5.y, r6.x
  63: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r5.y, -cb0[9].y, l(1.000000)
  65: mad r5.y, r6.y, cb0[9].y, r5.y
  66: add r5.z, -r0.w, l(1.000000)
  67: dp3 r5.w, r3.yzwy, r2.xyzx
  68: add r5.w, r5.w, r5.w
  69: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  70: mul r7.xyz, r4.wwww, cb0[2].xyzx
  71: if_nz r5.x
  72:   eq r4.w, cb6[0].y, l(1.000000)
  73:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  74:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  75:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  76:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  77:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  78:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  79:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  80:   mul r4.w, r8.y, l(0.250000)
  81:   mul r5.x, cb6[0].z, l(0.500000)
  82:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  83:   max r4.w, r4.w, r5.x
  84:   min r8.x, r5.w, r4.w
  85:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  86:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  87:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  88:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  89:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  90:   mov r2.w, l(1.000000)
  91:   dp4 r9.x, r9.xyzw, r2.xyzw
  92:   dp4 r9.y, r10.xyzw, r2.xyzw
  93:   dp4 r9.z, r8.xyzw, r2.xyzw
  94: else 
  95:   mov r2.w, l(1.000000)
  96:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  97:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  98:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  99: endif 
 100: add r8.xyz, r9.xyzx, v6.xyzx
 101: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 102: log r8.xyz, r8.xyzx
 103: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
 104: exp r8.xyz, r8.xyzx
 105: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
 106: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: lt r2.w, l(0.000000), cb5[2].w
 108: if_nz r2.w
 109:   dp3 r2.w, r6.xyzx, r6.xyzx
 110:   rsq r2.w, r2.w
 111:   mul r9.xyz, r2.wwww, r6.xyzx
 112:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 113:   div r10.xyz, r10.xyzx, r9.xyzx
 114:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 115:   div r11.xyz, r11.xyzx, r9.xyzx
 116:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 117:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 118:   min r2.w, r10.y, r10.x
 119:   min r2.w, r10.z, r2.w
 120:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 121:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 122: else 
 123:   mov r9.xyz, r6.xyzx
 124: endif 
 125: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 126: mul r2.w, r2.w, r5.z
 127: mul r2.w, r2.w, l(6.000000)
 128: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 129: add r4.w, r9.w, l(-1.000000)
 130: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 131: mul r4.w, r4.w, cb5[3].x
 132: mul r10.xyz, r9.xyzx, r4.wwww
 133: lt r5.x, cb5[1].w, l(0.999990)
 134: if_nz r5.x
 135:   lt r5.x, l(0.000000), cb5[6].w
 136:   if_nz r5.x
 137:     dp3 r5.x, r6.xyzx, r6.xyzx
 138:     rsq r5.x, r5.x
 139:     mul r11.xyz, r5.xxxx, r6.xyzx
 140:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 141:     div r12.xyz, r12.xyzx, r11.xyzx
 142:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 143:     div r13.xyz, r13.xyzx, r11.xyzx
 144:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 145:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 146:     min r5.x, r12.y, r12.x
 147:     min r5.x, r12.z, r5.x
 148:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 149:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 150:   endif 
 151:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 152:   add r2.w, r6.w, l(-1.000000)
 153:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 154:   mul r2.w, r2.w, cb5[7].x
 155:   mul r4.xyz, r6.xyzx, r2.wwww
 156:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 157:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 158: endif 
 159: mul r4.xyz, r5.yyyy, r10.xyzx
 160: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 161: dp3 r2.w, r6.xyzx, r6.xyzx
 162: max r2.w, r2.w, l(0.001000)
 163: rsq r2.w, r2.w
 164: mul r6.xyz, r2.wwww, r6.xyzx
 165: dp3 r2.w, r2.xyzx, -r3.yzwy
 166: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 167: dp3_sat r2.x, r2.xyzx, r6.xyzx
 168: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 169: mul r2.z, r2.y, r2.y
 170: dp2 r2.z, r2.zzzz, r5.zzzz
 171: add r2.z, r2.z, l(-0.500000)
 172: add r3.y, -r3.x, l(1.000000)
 173: mul r3.z, r3.y, r3.y
 174: mul r3.z, r3.z, r3.z
 175: mul r3.y, r3.y, r3.z
 176: mad r3.y, r2.z, r3.y, l(1.000000)
 177: add r3.z, -|r2.w|, l(1.000000)
 178: mul r3.w, r3.z, r3.z
 179: mul r3.w, r3.w, r3.w
 180: mul r3.z, r3.z, r3.w
 181: mad r2.z, r2.z, r3.z, l(1.000000)
 182: mul r2.z, r2.z, r3.y
 183: mul r3.y, r5.z, r5.z
 184: max r3.y, r3.y, l(0.002000)
 185: add r3.w, -r3.y, l(1.000000)
 186: mad r4.w, |r2.w|, r3.w, r3.y
 187: mad r3.w, r3.x, r3.w, r3.y
 188: mul r2.w, |r2.w|, r3.w
 189: mad r2.w, r3.x, r4.w, r2.w
 190: add r2.w, r2.w, l(0.000010)
 191: div r2.w, l(0.500000), r2.w
 192: mul r3.w, r3.y, r3.y
 193: mad r4.w, r2.x, r3.w, -r2.x
 194: mad r2.x, r4.w, r2.x, l(1.000000)
 195: mul r3.w, r3.w, l(0.318310)
 196: mad r2.x, r2.x, r2.x, l(0.000000)
 197: div r2.x, r3.w, r2.x
 198: mul r2.x, r2.x, r2.w
 199: mul r2.x, r2.x, l(3.141593)
 200: max r2.x, r2.x, l(0.000100)
 201: sqrt r2.x, r2.x
 202: mul r2.xz, r3.xxxx, r2.xxzx
 203: mul r2.w, r3.y, l(0.280000)
 204: mad r2.w, -r2.w, r5.z, l(1.000000)
 205: dp3 r3.x, r0.xyzx, r0.xyzx
 206: ne r3.x, r3.x, l(0.000000)
 207: and r3.x, r3.x, l(0x3f800000)
 208: mul r2.x, r2.x, r3.x
 209: add r0.w, r0.w, -r1.w
 210: add_sat r0.w, r0.w, l(1.000000)
 211: mul r3.xyw, r2.zzzz, r7.xyxz
 212: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 213: mul r5.xyz, r7.xyzx, r2.xxxx
 214: add r1.w, -r2.y, l(1.000000)
 215: mul r2.x, r1.w, r1.w
 216: mul r2.x, r2.x, r2.x
 217: mul r1.w, r1.w, r2.x
 218: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 219: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 220: mul r2.xyz, r2.xyzx, r5.xyzx
 221: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 222: mul r2.xyz, r4.xyzx, r2.wwww
 223: add r3.xyw, -r0.xyxz, r0.wwww
 224: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 225: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 226: mov o0.w, l(1.000000)
 227: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 189 math, 15 temp registers, 9 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "_EmissionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r2.z, r2.xyxx, r2.xyxx
  15: min r2.z, r2.z, l(1.000000)
  16: add r2.z, -r2.z, l(1.000000)
  17: sqrt r2.z, r2.z
  18: mul r3.xyz, r2.yyyy, v4.xyzx
  19: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  20: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  21: dp3 r2.w, r2.xyzx, r2.xyzx
  22: rsq r2.w, r2.w
  23: mul r2.xyz, r2.wwww, r2.xyzx
  24: dp3 r3.x, v2.xyzx, v2.xyzx
  25: rsq r3.x, r3.x
  26: mul r3.yzw, r3.xxxx, v2.xxyz
  27: mov r4.x, v3.w
  28: mov r4.y, v4.w
  29: mov r4.z, v5.w
  30: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  31: mov r6.x, cb4[9].z
  32: mov r6.y, cb4[10].z
  33: mov r6.z, cb4[11].z
  34: dp3 r4.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  36: dp3 r5.x, r5.xyzx, r5.xyzx
  37: sqrt r5.x, r5.x
  38: add r5.x, -r4.w, r5.x
  39: mad r4.w, cb3[25].w, r5.x, r4.w
  40: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  41: eq r5.x, cb6[0].x, l(1.000000)
  42: if_nz r5.x
  43:   eq r5.y, cb6[0].y, l(1.000000)
  44:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  46:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  47:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  48:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  49:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  50:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  51:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  52:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r6.x, r5.z, r5.y
  54:   sample r6.xyzw, r6.xzwx, t7.xyzw, s1
  55: else 
  56:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  59: div r5.zw, v7.xxxy, v7.wwww
  60: sample r6.xyzw, r5.zwzz, t2.xyzw, s6
  61: add r5.y, r5.y, -r6.x
  62: mad r4.w, r4.w, r5.y, r6.x
  63: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  64: add r5.y, -cb0[9].y, l(1.000000)
  65: mad r5.y, r6.y, cb0[9].y, r5.y
  66: add r5.z, -r0.w, l(1.000000)
  67: dp3 r5.w, r3.yzwy, r2.xyzx
  68: add r5.w, r5.w, r5.w
  69: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  70: mul r7.xyz, r4.wwww, cb0[2].xyzx
  71: if_nz r5.x
  72:   eq r4.w, cb6[0].y, l(1.000000)
  73:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  74:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  75:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  76:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  77:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  78:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  79:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  80:   mul r4.w, r8.y, l(0.250000)
  81:   mul r5.x, cb6[0].z, l(0.500000)
  82:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  83:   max r4.w, r4.w, r5.x
  84:   min r8.x, r5.w, r4.w
  85:   sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  86:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  87:   sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  88:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  89:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  90:   mov r2.w, l(1.000000)
  91:   dp4 r9.x, r9.xyzw, r2.xyzw
  92:   dp4 r9.y, r10.xyzw, r2.xyzw
  93:   dp4 r9.z, r8.xyzw, r2.xyzw
  94: else 
  95:   mov r2.w, l(1.000000)
  96:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  97:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  98:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  99: endif 
 100: add r8.xyz, r9.xyzx, v6.xyzx
 101: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 102: log r8.xyz, r8.xyzx
 103: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
 104: exp r8.xyz, r8.xyzx
 105: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
 106: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: lt r2.w, l(0.000000), cb5[2].w
 108: if_nz r2.w
 109:   dp3 r2.w, r6.xyzx, r6.xyzx
 110:   rsq r2.w, r2.w
 111:   mul r9.xyz, r2.wwww, r6.xyzx
 112:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 113:   div r10.xyz, r10.xyzx, r9.xyzx
 114:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 115:   div r11.xyz, r11.xyzx, r9.xyzx
 116:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 117:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 118:   min r2.w, r10.y, r10.x
 119:   min r2.w, r10.z, r2.w
 120:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 121:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 122: else 
 123:   mov r9.xyz, r6.xyzx
 124: endif 
 125: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 126: mul r2.w, r2.w, r5.z
 127: mul r2.w, r2.w, l(6.000000)
 128: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
 129: add r4.w, r9.w, l(-1.000000)
 130: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 131: mul r4.w, r4.w, cb5[3].x
 132: mul r10.xyz, r9.xyzx, r4.wwww
 133: lt r5.x, cb5[1].w, l(0.999990)
 134: if_nz r5.x
 135:   lt r5.x, l(0.000000), cb5[6].w
 136:   if_nz r5.x
 137:     dp3 r5.x, r6.xyzx, r6.xyzx
 138:     rsq r5.x, r5.x
 139:     mul r11.xyz, r5.xxxx, r6.xyzx
 140:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 141:     div r12.xyz, r12.xyzx, r11.xyzx
 142:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 143:     div r13.xyz, r13.xyzx, r11.xyzx
 144:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 145:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 146:     min r5.x, r12.y, r12.x
 147:     min r5.x, r12.z, r5.x
 148:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 149:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 150:   endif 
 151:   sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
 152:   add r2.w, r6.w, l(-1.000000)
 153:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 154:   mul r2.w, r2.w, cb5[7].x
 155:   mul r4.xyz, r6.xyzx, r2.wwww
 156:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 157:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 158: endif 
 159: mul r4.xyz, r5.yyyy, r10.xyzx
 160: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 161: dp3 r2.w, r6.xyzx, r6.xyzx
 162: max r2.w, r2.w, l(0.001000)
 163: rsq r2.w, r2.w
 164: mul r6.xyz, r2.wwww, r6.xyzx
 165: dp3 r2.w, r2.xyzx, -r3.yzwy
 166: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 167: dp3_sat r2.x, r2.xyzx, r6.xyzx
 168: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 169: mul r2.z, r2.y, r2.y
 170: dp2 r2.z, r2.zzzz, r5.zzzz
 171: add r2.z, r2.z, l(-0.500000)
 172: add r3.y, -r3.x, l(1.000000)
 173: mul r3.z, r3.y, r3.y
 174: mul r3.z, r3.z, r3.z
 175: mul r3.y, r3.y, r3.z
 176: mad r3.y, r2.z, r3.y, l(1.000000)
 177: add r3.z, -|r2.w|, l(1.000000)
 178: mul r3.w, r3.z, r3.z
 179: mul r3.w, r3.w, r3.w
 180: mul r3.z, r3.z, r3.w
 181: mad r2.z, r2.z, r3.z, l(1.000000)
 182: mul r2.z, r2.z, r3.y
 183: mul r3.y, r5.z, r5.z
 184: max r3.y, r3.y, l(0.002000)
 185: add r3.w, -r3.y, l(1.000000)
 186: mad r4.w, |r2.w|, r3.w, r3.y
 187: mad r3.w, r3.x, r3.w, r3.y
 188: mul r2.w, |r2.w|, r3.w
 189: mad r2.w, r3.x, r4.w, r2.w
 190: add r2.w, r2.w, l(0.000010)
 191: div r2.w, l(0.500000), r2.w
 192: mul r3.w, r3.y, r3.y
 193: mad r4.w, r2.x, r3.w, -r2.x
 194: mad r2.x, r4.w, r2.x, l(1.000000)
 195: mul r3.w, r3.w, l(0.318310)
 196: mad r2.x, r2.x, r2.x, l(0.000000)
 197: div r2.x, r3.w, r2.x
 198: mul r2.x, r2.x, r2.w
 199: mul r2.x, r2.x, l(3.141593)
 200: max r2.x, r2.x, l(0.000100)
 201: sqrt r2.x, r2.x
 202: mul r2.xz, r3.xxxx, r2.xxzx
 203: mul r2.w, r3.y, l(0.280000)
 204: mad r2.w, -r2.w, r5.z, l(1.000000)
 205: dp3 r3.x, r0.xyzx, r0.xyzx
 206: ne r3.x, r3.x, l(0.000000)
 207: and r3.x, r3.x, l(0x3f800000)
 208: mul r2.x, r2.x, r3.x
 209: add r0.w, r0.w, -r1.w
 210: add_sat r0.w, r0.w, l(1.000000)
 211: mul r3.xyw, r2.zzzz, r7.xyxz
 212: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 213: mul r5.xyz, r7.xyzx, r2.xxxx
 214: add r1.w, -r2.y, l(1.000000)
 215: mul r2.x, r1.w, r1.w
 216: mul r2.x, r2.x, r2.x
 217: mul r1.w, r1.w, r2.x
 218: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 219: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 220: mul r2.xyz, r2.xyzx, r5.xyzx
 221: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 222: mul r2.xyz, r4.xyzx, r2.wwww
 223: add r3.xyw, -r0.xyxz, r0.wwww
 224: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 225: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 226: sample r1.xyzw, v1.xyxx, t4.xyzw, s5
 227: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 228: mov o0.w, l(1.000000)
 229: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 176 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r4.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r5.x, r5.xyzx, r5.xyzx
  23: sqrt r5.x, r5.x
  24: add r5.x, -r4.w, r5.x
  25: mad r4.w, cb3[25].w, r5.x, r4.w
  26: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  27: eq r5.x, cb6[0].x, l(1.000000)
  28: if_nz r5.x
  29:   eq r5.y, cb6[0].y, l(1.000000)
  30:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  32:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  33:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  34:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  35:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  36:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  37:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  38:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r6.x, r5.z, r5.y
  40:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  41: else 
  42:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  45: div r5.zw, v7.xxxy, v7.wwww
  46: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  47: add r5.y, r5.y, -r6.x
  48: mad r4.w, r4.w, r5.y, r6.x
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: add r5.z, -r0.x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: max r3.y, r3.y, l(0.002000)
 171: add r3.w, -r3.y, l(1.000000)
 172: mad r4.w, |r2.w|, r3.w, r3.y
 173: mad r3.w, r3.x, r3.w, r3.y
 174: mul r2.w, |r2.w|, r3.w
 175: mad r2.w, r3.x, r4.w, r2.w
 176: add r2.w, r2.w, l(0.000010)
 177: div r2.w, l(0.500000), r2.w
 178: mul r3.w, r3.y, r3.y
 179: mad r4.w, r2.x, r3.w, -r2.x
 180: mad r2.x, r4.w, r2.x, l(1.000000)
 181: mul r3.w, r3.w, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.w, r2.x
 184: mul r2.x, r2.x, r2.w
 185: mul r2.x, r2.x, l(3.141593)
 186: max r2.x, r2.x, l(0.000100)
 187: sqrt r2.x, r2.x
 188: mul r2.xz, r3.xxxx, r2.xxzx
 189: mul r2.w, r3.y, l(0.280000)
 190: mad r2.w, -r2.w, r5.z, l(1.000000)
 191: dp3 r3.x, r1.xyzx, r1.xyzx
 192: ne r3.x, r3.x, l(0.000000)
 193: and r3.x, r3.x, l(0x3f800000)
 194: mul r2.x, r2.x, r3.x
 195: add r0.x, r0.x, -r1.w
 196: add_sat r0.x, r0.x, l(1.000000)
 197: mul r3.xyw, r2.zzzz, r7.xyxz
 198: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 199: mul r5.xyz, r7.xyzx, r2.xxxx
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.x, r1.w, r1.w
 202: mul r2.x, r2.x, r2.x
 203: mul r1.w, r1.w, r2.x
 204: add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
 206: mul r2.xyz, r2.xyzx, r5.xyzx
 207: mad r0.yzw, r0.yyzw, r3.xxyw, r2.xxyz
 208: mul r2.xyz, r4.xyzx, r2.wwww
 209: add r3.xyw, -r1.xyxz, r0.xxxx
 210: mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
 211: mad o0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL _EMISSION 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 53 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "_EmissionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: eq r2.w, cb3[0].x, l(1.000000)
  10: if_nz r2.w
  11:   eq r2.w, cb3[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  13:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  22:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r2.w, r3.y
  25:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: add r3.x, -r0.x, l(1.000000)
  32: dp3 r3.z, v2.xyzx, r2.xyzx
  33: add r3.z, r3.z, r3.z
  34: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  35: mul r5.xyz, r2.wwww, cb0[2].xyzx
  36: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  37: mul r2.w, r2.w, r3.x
  38: mul r2.w, r2.w, l(6.000000)
  39: sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, r2.w
  40: add r2.w, r4.w, l(-1.000000)
  41: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  42: mul r2.w, r2.w, cb2[3].x
  43: mul r3.xzw, r4.xxyz, r2.wwww
  44: mul r3.xyz, r3.yyyy, r3.xzwx
  45: dp3 r2.w, -v2.xyzx, r2.xyzx
  46: add r3.w, r2.w, r2.w
  47: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  48: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  49: mov_sat r2.w, r2.w
  50: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  51: add r4.y, -r2.w, l(1.000000)
  52: mul r4.zw, r4.xxxy, r4.xxxy
  53: mul r2.yz, r4.xxyx, r4.xxwx
  54: mul r4.xy, r4.zyzz, r2.yzyy
  55: add r0.x, r0.x, -r1.w
  56: add_sat r0.x, r0.x, l(1.000000)
  57: mov r4.z, cb0[8].w
  58: sample r6.xyzw, r4.xzxx, t2.xyzw, s2
  59: mul r2.y, r6.x, l(16.000000)
  60: mul r2.yzw, r1.xxyz, r2.yyyy
  61: mad r0.yzw, r0.yyzw, r1.wwww, r2.yyzw
  62: mul r2.xyz, r2.xxxx, r5.xyzx
  63: add r4.xzw, -r1.xxyz, r0.xxxx
  64: mad r1.xyz, r4.yyyy, r4.xzwx, r1.xyzx
  65: mul r1.xyz, r1.xyzx, r3.xyzx
  66: mad r0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  67: sample r1.xyzw, v1.xyxx, t3.xyzw, s5
  68: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  69: mov o0.w, l(1.000000)
  70: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: dp3 r2.x, v5.xyzx, v5.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.xyz, r2.xxxx, v5.xyzx
  12: eq r2.w, cb3[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb3[0].y, l(1.000000)
  15:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  17:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  18:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  19:   mov r4.y, v3.w
  20:   mov r4.z, v4.w
  21:   mov r4.w, v5.w
  22:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  23:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  24:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  25:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  26:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r3.x, r2.w, r3.y
  28:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  33: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  34: add r3.x, -r0.w, l(1.000000)
  35: dp3 r3.z, v2.xyzx, r2.xyzx
  36: add r3.z, r3.z, r3.z
  37: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  38: mul r5.xyz, r2.wwww, cb0[2].xyzx
  39: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  40: mul r2.w, r2.w, r3.x
  41: mul r2.w, r2.w, l(6.000000)
  42: sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r2.w
  43: add r2.w, r4.w, l(-1.000000)
  44: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  45: mul r2.w, r2.w, cb2[3].x
  46: mul r3.xzw, r4.xxyz, r2.wwww
  47: mul r3.xyz, r3.yyyy, r3.xzwx
  48: dp3 r2.w, -v2.xyzx, r2.xyzx
  49: add r3.w, r2.w, r2.w
  50: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  51: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  52: mov_sat r2.w, r2.w
  53: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  54: add r4.y, -r2.w, l(1.000000)
  55: mul r4.zw, r4.xxxy, r4.xxxy
  56: mul r2.yz, r4.xxyx, r4.xxwx
  57: mul r4.xy, r4.zyzz, r2.yzyy
  58: add r2.y, -r1.w, l(1.000000)
  59: add_sat r0.w, r0.w, r2.y
  60: mov r4.z, cb0[8].w
  61: sample r6.xyzw, r4.xzxx, t2.xyzw, s2
  62: mul r2.y, r6.x, l(16.000000)
  63: mul r2.yzw, r0.xxyz, r2.yyyy
  64: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  65: mul r2.xyz, r2.xxxx, r5.xyzx
  66: add r4.xzw, -r0.xxyz, r0.wwww
  67: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  68: mul r0.xyz, r0.xyzx, r3.xyzx
  69: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  70: mov o0.w, l(1.000000)
  71: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 60 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_BumpMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  10: mul r2.x, r2.w, r2.x
  11: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: dp2 r2.z, r2.xyxx, r2.xyxx
  13: min r2.z, r2.z, l(1.000000)
  14: add r2.z, -r2.z, l(1.000000)
  15: sqrt r2.z, r2.z
  16: mul r3.xyz, r2.yyyy, v4.xyzx
  17: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  18: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  19: eq r2.w, cb3[0].x, l(1.000000)
  20: if_nz r2.w
  21:   eq r2.w, cb3[0].y, l(1.000000)
  22:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  23:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  24:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  25:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  26:   mov r4.y, v3.w
  27:   mov r4.z, v4.w
  28:   mov r4.w, v5.w
  29:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  30:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  31:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  32:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  33:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  34:   max r3.x, r2.w, r3.y
  35:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  36: else 
  37:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  40: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  41: add r3.x, -r0.w, l(1.000000)
  42: dp3 r3.z, v2.xyzx, r2.xyzx
  43: add r3.z, r3.z, r3.z
  44: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  45: mul r5.xyz, r2.wwww, cb0[2].xyzx
  46: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  47: mul r2.w, r2.w, r3.x
  48: mul r2.w, r2.w, l(6.000000)
  49: sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, r2.w
  50: add r2.w, r4.w, l(-1.000000)
  51: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  52: mul r2.w, r2.w, cb2[3].x
  53: mul r3.xzw, r4.xxyz, r2.wwww
  54: mul r3.xyz, r3.yyyy, r3.xzwx
  55: dp3 r2.w, -v2.xyzx, r2.xyzx
  56: add r3.w, r2.w, r2.w
  57: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  58: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  59: mov_sat r2.w, r2.w
  60: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  61: add r4.y, -r2.w, l(1.000000)
  62: mul r4.zw, r4.xxxy, r4.xxxy
  63: mul r2.yz, r4.xxyx, r4.xxwx
  64: mul r4.xy, r4.zyzz, r2.yzyy
  65: add r0.w, r0.w, -r1.w
  66: add_sat r0.w, r0.w, l(1.000000)
  67: mov r4.z, cb0[8].w
  68: sample r6.xyzw, r4.xzxx, t3.xyzw, s2
  69: mul r2.y, r6.x, l(16.000000)
  70: mul r2.yzw, r0.xxyz, r2.yyyy
  71: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  72: mul r2.xyz, r2.xxxx, r5.xyzx
  73: add r4.xzw, -r0.xxyz, r0.wwww
  74: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  75: mul r0.xyz, r0.xyzx, r3.xyzx
  76: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  77: mov o0.w, l(1.000000)
  78: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL _EMISSION 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 61 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_BumpMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set 2D Texture "_EmissionMap" to slot 4 sampler slot 6
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  10: mul r2.x, r2.w, r2.x
  11: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: dp2 r2.z, r2.xyxx, r2.xyxx
  13: min r2.z, r2.z, l(1.000000)
  14: add r2.z, -r2.z, l(1.000000)
  15: sqrt r2.z, r2.z
  16: mul r3.xyz, r2.yyyy, v4.xyzx
  17: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  18: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  19: eq r2.w, cb3[0].x, l(1.000000)
  20: if_nz r2.w
  21:   eq r2.w, cb3[0].y, l(1.000000)
  22:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  23:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  24:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  25:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  26:   mov r4.y, v3.w
  27:   mov r4.z, v4.w
  28:   mov r4.w, v5.w
  29:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  30:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  31:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  32:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  33:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  34:   max r3.x, r2.w, r3.y
  35:   sample r3.xyzw, r3.xzwx, t6.xyzw, s1
  36: else 
  37:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  40: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  41: add r3.x, -r0.w, l(1.000000)
  42: dp3 r3.z, v2.xyzx, r2.xyzx
  43: add r3.z, r3.z, r3.z
  44: mad r4.xyz, r2.xyzx, -r3.zzzz, v2.xyzx
  45: mul r5.xyz, r2.wwww, cb0[2].xyzx
  46: mad r2.w, -r3.x, l(0.700000), l(1.700000)
  47: mul r2.w, r2.w, r3.x
  48: mul r2.w, r2.w, l(6.000000)
  49: sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, r2.w
  50: add r2.w, r4.w, l(-1.000000)
  51: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  52: mul r2.w, r2.w, cb2[3].x
  53: mul r3.xzw, r4.xxyz, r2.wwww
  54: mul r3.xyz, r3.yyyy, r3.xzwx
  55: dp3 r2.w, -v2.xyzx, r2.xyzx
  56: add r3.w, r2.w, r2.w
  57: mad r4.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  58: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  59: mov_sat r2.w, r2.w
  60: dp3 r4.x, r4.xyzx, cb1[0].xyzx
  61: add r4.y, -r2.w, l(1.000000)
  62: mul r4.zw, r4.xxxy, r4.xxxy
  63: mul r2.yz, r4.xxyx, r4.xxwx
  64: mul r4.xy, r4.zyzz, r2.yzyy
  65: add r0.w, r0.w, -r1.w
  66: add_sat r0.w, r0.w, l(1.000000)
  67: mov r4.z, cb0[8].w
  68: sample r6.xyzw, r4.xzxx, t3.xyzw, s2
  69: mul r2.y, r6.x, l(16.000000)
  70: mul r2.yzw, r0.xxyz, r2.yyyy
  71: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  72: mul r2.xyz, r2.xxxx, r5.xyzx
  73: add r4.xzw, -r0.xxyz, r0.wwww
  74: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  75: mul r0.xyz, r0.xyzx, r3.xyzx
  76: mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  77: sample r1.xyzw, v1.xyxx, t4.xyzw, s6
  78: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  79: mov o0.w, l(1.000000)
  80: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.x, r2.xyzx, r2.xyzx
  33: rsq r0.x, r0.x
  34: mul r2.xyz, r0.xxxx, r2.xyzx
  35: mul r3.xyz, r1.yzxy, r2.zxyz
  36: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  37: mov o5.xyz, r2.xyzx
  38: mul r0.x, v4.w, cb2[9].w
  39: mul o4.xyz, r0.xxxx, r1.xyzx
  40: mov o4.w, r0.y
  41: mov o5.w, r0.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r1.xyzx, r1.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r1.xyzx
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r1.xyzx, r1.xyzx
  29: rsq r0.w, r0.w
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r0.w, r1.y, r1.y
  33: mad r0.w, r1.x, r1.x, -r0.w
  34: mul r2.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  39: mov r1.w, l(1.000000)
  40: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  41: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  42: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  43: add r2.xyz, r2.xyzx, r3.xyzx
  44: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: log r2.xyz, r2.xyzx
  46: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  47: exp r2.xyz, r2.xyzx
  48: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  49: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  51: mul r4.xyzw, r1.yyyy, r3.xyzw
  52: mul r3.xyzw, r3.xyzw, r3.xyzw
  53: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  54: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  55: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  56: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  57: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  58: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  59: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  60: rsq r3.xyzw, r0.xyzw
  61: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  62: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  63: mul r1.xyzw, r1.xyzw, r3.xyzw
  64: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  65: mul r0.xyzw, r0.xyzw, r1.xyzw
  66: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  67: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  68: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  69: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  70: add o6.xyz, r2.xyzx, r0.xyzx
  71: mov o6.w, l(0)
  72: mov o7.xyzw, l(0,0,0,0)
  73: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 73 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  18: dp3 r0.w, r1.xyzx, r1.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r1.xyzx
  21: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mov o3.w, r0.x
  29: mul r0.w, v4.w, cb3[9].w
  30: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r1.w, r2.xyzx, r2.xyzx
  34: rsq r1.w, r1.w
  35: mul r2.xyz, r1.wwww, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mul o4.xyz, r0.wwww, r1.xyzx
  39: mov o4.w, r0.y
  40: mov o5.w, r0.z
  41: mov o5.xyz, r2.xyzx
  42: mul r0.w, r2.y, r2.y
  43: mad r0.w, r2.x, r2.x, -r0.w
  44: mul r1.xyzw, r2.yzzx, r2.xyzz
  45: dp4 r3.x, cb2[42].xyzw, r1.xyzw
  46: dp4 r3.y, cb2[43].xyzw, r1.xyzw
  47: dp4 r3.z, cb2[44].xyzw, r1.xyzw
  48: mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  49: mov r2.w, l(1.000000)
  50: dp4 r3.x, cb2[39].xyzw, r2.xyzw
  51: dp4 r3.y, cb2[40].xyzw, r2.xyzw
  52: dp4 r3.z, cb2[41].xyzw, r2.xyzw
  53: add r1.xyz, r1.xyzx, r3.xyzx
  54: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: log r1.xyz, r1.xyzx
  56: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  57: exp r1.xyz, r1.xyzx
  58: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  59: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  61: mul r4.xyzw, r2.yyyy, r3.xyzw
  62: mul r3.xyzw, r3.xyzw, r3.xyzw
  63: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  64: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  65: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  66: mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
  67: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  68: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  69: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  70: rsq r3.xyzw, r0.xyzw
  71: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  72: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  73: mul r2.xyzw, r2.xyzw, r3.xyzw
  74: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: mul r0.xyzw, r0.xyzw, r2.xyzw
  76: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  77: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  78: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  79: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  80: add o6.xyz, r1.xyzx, r0.xyzx
  81: mov o6.w, l(0)
  82: mov o7.xyzw, l(0,0,0,0)
  83: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r1.xyzx, r1.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r1.xyzx
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r1.xyzx, r1.xyzx
  29: rsq r0.w, r0.w
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r0.w, r1.y, r1.y
  33: mad r0.w, r1.x, r1.x, -r0.w
  34: mul r2.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  39: mov r1.w, l(1.000000)
  40: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  41: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  42: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  43: add r2.xyz, r2.xyzx, r3.xyzx
  44: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: log r2.xyz, r2.xyzx
  46: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  47: exp r2.xyz, r2.xyzx
  48: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  49: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  51: mul r4.xyzw, r1.yyyy, r3.xyzw
  52: mul r3.xyzw, r3.xyzw, r3.xyzw
  53: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  54: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  55: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  56: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  57: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  58: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  59: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  60: rsq r3.xyzw, r0.xyzw
  61: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  62: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  63: mul r1.xyzw, r1.xyzw, r3.xyzw
  64: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  65: mul r0.xyzw, r0.xyzw, r1.xyzw
  66: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  67: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  68: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  69: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  70: add o6.xyz, r2.xyzx, r0.xyzx
  71: mov o6.w, l(0)
  72: mov o7.xyzw, l(0,0,0,0)
  73: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 65 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mov o3.w, r1.x
  27: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r1.w, r3.xyzx, r3.xyzx
  31: rsq r1.w, r1.w
  32: mul r3.xyz, r1.wwww, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mul r1.w, v4.w, cb3[9].w
  36: mul o4.xyz, r1.wwww, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mov o5.xyz, r3.xyzx
  40: add r2.xyzw, -r1.xxxx, cb2[3].xyzw
  41: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  42: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  43: mul r5.xyzw, r3.yyyy, r4.xyzw
  44: mul r4.xyzw, r4.xyzw, r4.xyzw
  45: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  46: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  47: mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
  48: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  49: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  50: rsq r4.xyzw, r1.xyzw
  51: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  52: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  53: mul r2.xyzw, r2.xyzw, r4.xyzw
  54: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mul r1.xyzw, r1.xyzw, r2.xyzw
  56: mul r2.xyz, r1.yyyy, cb2[8].xyzx
  57: mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
  58: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
  59: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  60: mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  61: mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  62: mul r1.w, r3.y, r3.y
  63: mad r1.w, r3.x, r3.x, -r1.w
  64: mul r3.xyzw, r3.yzzx, r3.xyzz
  65: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  66: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  67: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  68: mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  69: mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  70: mov o6.w, l(0)
  71: mul r0.y, r0.y, cb1[5].x
  72: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  73: mov o7.zw, r0.zzzw
  74: add o7.xy, r1.zzzz, r1.xwxx
  75: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.x, r2.xyzx, r2.xyzx
  33: rsq r0.x, r0.x
  34: mul r2.xyz, r0.xxxx, r2.xyzx
  35: mul r3.xyz, r1.yzxy, r2.zxyz
  36: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  37: mov o5.xyz, r2.xyzx
  38: mul r0.x, v4.w, cb2[9].w
  39: mul o4.xyz, r0.xxxx, r1.xyzx
  40: mov o4.w, r0.y
  41: mov o5.w, r0.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 35 avg math (26..44)
 // Stats for Fragment shader:
 //        d3d11: 53 avg math (32..112), 4 avg texture (3..6), 1 avg branch (0..2)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r2.wwww, t1.xyzw, s3
  32: mul r1.w, r1.w, r3.x
  33: mul r3.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, -v2.xyzx, r2.xyzx
  35: add r1.w, r1.w, r1.w
  36: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r1.w, r2.xyzx, r5.xyzx
  41: dp3 r2.x, r4.xyzx, r5.xyzx
  42: mul r2.x, r2.x, r2.x
  43: mul r2.x, r2.x, r2.x
  44: mov r2.y, cb0[8].w
  45: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  46: mul r2.x, r2.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r2.xxxx
  48: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  49: mul r1.xyz, r1.wwww, r3.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r0.xyzx
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 34 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: dp3 r1.w, v5.xyzx, v5.xyzx
   9: rsq r1.w, r1.w
  10: mul r2.xyz, r1.wwww, v5.xyzx
  11: eq r1.w, cb2[0].x, l(1.000000)
  12: if_nz r1.w
  13:   eq r1.w, cb2[0].y, l(1.000000)
  14:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  16:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  17:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  18:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  19:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  20:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  21:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  22:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r3.x, r1.w, r2.w
  24:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  25: else 
  26:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  29: mul r3.xyz, r1.wwww, cb0[2].xyzx
  30: dp3 r1.w, -v2.xyzx, r2.xyzx
  31: add r1.w, r1.w, r1.w
  32: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  33: mov r5.x, v3.w
  34: mov r5.y, v4.w
  35: mov r5.z, v5.w
  36: dp3_sat r1.w, r2.xyzx, r5.xyzx
  37: dp3 r2.x, r4.xyzx, r5.xyzx
  38: mul r2.x, r2.x, r2.x
  39: mul r2.x, r2.x, r2.x
  40: mov r2.y, cb0[8].w
  41: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  42: mul r2.x, r2.x, l(16.000000)
  43: mul r0.xyz, r0.xyzx, r2.xxxx
  44: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  45: mul r1.xyz, r1.wwww, r3.xyzx
  46: mul o0.xyz, r0.xyzx, r1.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  29: mov o6.xyz, r0.xyzx
  30: mov o3.w, r2.x
  31: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[9].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mov o7.xyzw, l(0,0,0,0)
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: eq r1.w, cb2[0].x, l(1.000000)
  19: if_nz r1.w
  20:   eq r1.w, cb2[0].y, l(1.000000)
  21:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  23:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  24:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  25:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  26:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  27:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  28:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  29:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r3.x, r1.w, r2.w
  31:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  32: else 
  33:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  36: mul r3.xyz, r1.wwww, cb0[2].xyzx
  37: dp3 r1.w, -v2.xyzx, r2.xyzx
  38: add r1.w, r1.w, r1.w
  39: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  40: mov r5.x, v3.w
  41: mov r5.y, v4.w
  42: mov r5.z, v5.w
  43: dp3_sat r1.w, r2.xyzx, r5.xyzx
  44: dp3 r2.x, r4.xyzx, r5.xyzx
  45: mul r2.x, r2.x, r2.x
  46: mul r2.x, r2.x, r2.x
  47: mov r2.y, cb0[8].w
  48: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  49: mul r2.x, r2.x, l(16.000000)
  50: mul r0.xyz, r0.xyzx, r2.xxxx
  51: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  52: mul r1.xyz, r1.wwww, r3.xyzx
  53: mul o0.xyz, r0.xyzx, r1.xyzx
  54: mov o0.w, l(1.000000)
  55: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r0.xyzx
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: eq r1.w, cb2[0].x, l(1.000000)
   9: if_nz r1.w
  10:   eq r1.w, cb2[0].y, l(1.000000)
  11:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  12:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  13:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  15:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  16:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  18:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r1.w, r2.w
  21:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  26: mul r3.xyz, r1.wwww, cb0[2].xyzx
  27: dp3 r1.w, -v2.xyzx, r2.xyzx
  28: add r1.w, r1.w, r1.w
  29: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  30: mov r5.x, v3.w
  31: mov r5.y, v4.w
  32: mov r5.z, v5.w
  33: dp3_sat r1.w, r2.xyzx, r5.xyzx
  34: dp3 r2.x, r4.xyzx, r5.xyzx
  35: mul r2.x, r2.x, r2.x
  36: mul r2.x, r2.x, r2.x
  37: mov r2.y, cb0[8].w
  38: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  39: mul r2.x, r2.x, l(16.000000)
  40: mul r0.xyz, r0.xyzx, r2.xxxx
  41: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  42: mul r1.xyz, r1.wwww, r3.xyzx
  43: mul o0.xyz, r0.xyzx, r1.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: dp3 r1.w, v5.xyzx, v5.xyzx
   9: rsq r1.w, r1.w
  10: mul r2.xyz, r1.wwww, v5.xyzx
  11: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  12: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  13: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  14: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  15: eq r1.w, cb2[0].x, l(1.000000)
  16: if_nz r1.w
  17:   eq r1.w, cb2[0].y, l(1.000000)
  18:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  19:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  20:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  22:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  23:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  25:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r1.w, r2.w
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  33: lt r2.w, l(0.000000), r3.z
  34: and r2.w, r2.w, l(0x3f800000)
  35: div r4.xy, r3.xyxx, r3.wwww
  36: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  37: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  38: mul r2.w, r2.w, r4.w
  39: dp3 r3.x, r3.xyzx, r3.xyzx
  40: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  41: mul r2.w, r2.w, r3.x
  42: mul r1.w, r1.w, r2.w
  43: mul r3.xyz, r1.wwww, cb0[2].xyzx
  44: dp3 r1.w, -v2.xyzx, r2.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  47: mov r5.x, v3.w
  48: mov r5.y, v4.w
  49: mov r5.z, v5.w
  50: dp3_sat r1.w, r2.xyzx, r5.xyzx
  51: dp3 r2.x, r4.xyzx, r5.xyzx
  52: mul r2.x, r2.x, r2.x
  53: mul r2.x, r2.x, r2.x
  54: mov r2.y, cb0[8].w
  55: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  56: mul r2.x, r2.x, l(16.000000)
  57: mul r0.xyz, r0.xyzx, r2.xxxx
  58: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  59: mul r1.xyz, r1.wwww, r3.xyzx
  60: mul o0.xyz, r0.xyzx, r1.xyzx
  61: mov o0.w, l(1.000000)
  62: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  49: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  50: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  51: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  19: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  20: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  21: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  22: eq r1.w, cb2[0].x, l(1.000000)
  23: if_nz r1.w
  24:   eq r1.w, cb2[0].y, l(1.000000)
  25:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  26:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  27:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  28:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  29:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  30:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  31:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  32:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  33:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  34:   max r4.x, r1.w, r2.w
  35:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  36: else 
  37:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  40: lt r2.w, l(0.000000), r3.z
  41: and r2.w, r2.w, l(0x3f800000)
  42: div r4.xy, r3.xyxx, r3.wwww
  43: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  44: sample r4.xyzw, r4.xyxx, t2.xyzw, s4
  45: mul r2.w, r2.w, r4.w
  46: dp3 r3.x, r3.xyzx, r3.xyzx
  47: sample r3.xyzw, r3.xxxx, t3.xyzw, s5
  48: mul r2.w, r2.w, r3.x
  49: mul r1.w, r1.w, r2.w
  50: mul r3.xyz, r1.wwww, cb0[2].xyzx
  51: dp3 r1.w, -v2.xyzx, r2.xyzx
  52: add r1.w, r1.w, r1.w
  53: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: dp3_sat r1.w, r2.xyzx, r5.xyzx
  58: dp3 r2.x, r4.xyzx, r5.xyzx
  59: mul r2.x, r2.x, r2.x
  60: mul r2.x, r2.x, r2.x
  61: mov r2.y, cb0[8].w
  62: sample r2.xyzw, r2.xyxx, t4.xyzw, s1
  63: mul r2.x, r2.x, l(16.000000)
  64: mul r0.xyz, r0.xyzx, r2.xxxx
  65: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  66: mul r1.xyz, r1.wwww, r3.xyzx
  67: mul o0.xyz, r0.xyzx, r1.xyzx
  68: mov o0.w, l(1.000000)
  69: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   9: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: lt r2.w, l(0.000000), r3.z
  31: and r2.w, r2.w, l(0x3f800000)
  32: div r4.xy, r3.xyxx, r3.wwww
  33: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  35: mul r2.w, r2.w, r4.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  38: mul r2.w, r2.w, r3.x
  39: mul r1.w, r1.w, r2.w
  40: mul r3.xyz, r1.wwww, cb0[2].xyzx
  41: dp3 r1.w, -v2.xyzx, r2.xyzx
  42: add r1.w, r1.w, r1.w
  43: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: dp3_sat r1.w, r2.xyzx, r5.xyzx
  48: dp3 r2.x, r4.xyzx, r5.xyzx
  49: mul r2.x, r2.x, r2.x
  50: mul r2.x, r2.x, r2.x
  51: mov r2.y, cb0[8].w
  52: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  53: mul r2.x, r2.x, l(16.000000)
  54: mul r0.xyz, r0.xyzx, r2.xxxx
  55: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  56: mul r1.xyz, r1.wwww, r3.xyzx
  57: mul o0.xyz, r0.xyzx, r1.xyzx
  58: mov o0.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: dp3 r1.w, v5.xyzx, v5.xyzx
   9: rsq r1.w, r1.w
  10: mul r2.xyz, r1.wwww, v5.xyzx
  11: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  12: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  13: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  14: add r3.xyz, r3.xyzx, cb0[14].xyzx
  15: eq r1.w, cb2[0].x, l(1.000000)
  16: if_nz r1.w
  17:   eq r1.w, cb2[0].y, l(1.000000)
  18:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  19:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  20:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  22:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  23:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  25:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r1.w, r2.w
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  33: dp3 r2.w, r3.xyzx, r3.xyzx
  34: sample r4.xyzw, r2.wwww, t1.xyzw, s4
  35: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  36: mul r2.w, r3.w, r4.x
  37: mul r1.w, r1.w, r2.w
  38: mul r3.xyz, r1.wwww, cb0[2].xyzx
  39: dp3 r1.w, -v2.xyzx, r2.xyzx
  40: add r1.w, r1.w, r1.w
  41: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  42: mov r5.x, v3.w
  43: mov r5.y, v4.w
  44: mov r5.z, v5.w
  45: dp3_sat r1.w, r2.xyzx, r5.xyzx
  46: dp3 r2.x, r4.xyzx, r5.xyzx
  47: mul r2.x, r2.x, r2.x
  48: mul r2.x, r2.x, r2.x
  49: mov r2.y, cb0[8].w
  50: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  51: mul r2.x, r2.x, l(16.000000)
  52: mul r0.xyz, r0.xyzx, r2.xxxx
  53: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  54: mul r1.xyz, r1.wwww, r3.xyzx
  55: mul o0.xyz, r0.xyzx, r1.xyzx
  56: mov o0.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  19: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  20: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  21: add r3.xyz, r3.xyzx, cb0[14].xyzx
  22: eq r1.w, cb2[0].x, l(1.000000)
  23: if_nz r1.w
  24:   eq r1.w, cb2[0].y, l(1.000000)
  25:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  26:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  27:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  28:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  29:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  30:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  31:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  32:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  33:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  34:   max r4.x, r1.w, r2.w
  35:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  36: else 
  37:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  40: dp3 r2.w, r3.xyzx, r3.xyzx
  41: sample r4.xyzw, r2.wwww, t2.xyzw, s5
  42: sample r3.xyzw, r3.xyzx, t3.xyzw, s4
  43: mul r2.w, r3.w, r4.x
  44: mul r1.w, r1.w, r2.w
  45: mul r3.xyz, r1.wwww, cb0[2].xyzx
  46: dp3 r1.w, -v2.xyzx, r2.xyzx
  47: add r1.w, r1.w, r1.w
  48: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  49: mov r5.x, v3.w
  50: mov r5.y, v4.w
  51: mov r5.z, v5.w
  52: dp3_sat r1.w, r2.xyzx, r5.xyzx
  53: dp3 r2.x, r4.xyzx, r5.xyzx
  54: mul r2.x, r2.x, r2.x
  55: mul r2.x, r2.x, r2.x
  56: mov r2.y, cb0[8].w
  57: sample r2.xyzw, r2.xyxx, t4.xyzw, s1
  58: mul r2.x, r2.x, l(16.000000)
  59: mul r0.xyz, r0.xyzx, r2.xxxx
  60: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  61: mul r1.xyz, r1.wwww, r3.xyzx
  62: mul o0.xyz, r0.xyzx, r1.xyzx
  63: mov o0.w, l(1.000000)
  64: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r2.wwww, t1.xyzw, s4
  32: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  33: mul r2.w, r3.w, r4.x
  34: mul r1.w, r1.w, r2.w
  35: mul r3.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, -v2.xyzx, r2.xyzx
  37: add r1.w, r1.w, r1.w
  38: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r1.w, r2.xyzx, r5.xyzx
  43: dp3 r2.x, r4.xyzx, r5.xyzx
  44: mul r2.x, r2.x, r2.x
  45: mul r2.x, r2.x, r2.x
  46: mov r2.y, cb0[8].w
  47: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  48: mul r2.x, r2.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r2.xxxx
  50: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  51: mul r1.xyz, r1.wwww, r3.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: mov r2.w, l(0)
  25: mov o3.xyzw, r2.wwwx
  26: mov o4.xyzw, r2.wwwy
  27: mov o5.w, r2.z
  28: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r1.w, r1.xyzx, r1.xyzx
  32: rsq r1.w, r1.w
  33: mul o5.xyz, r1.wwww, r1.xyzx
  34: mul r1.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mov o8.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: dp3 r1.w, v5.xyzx, v5.xyzx
   9: rsq r1.w, r1.w
  10: mul r2.xyz, r1.wwww, v5.xyzx
  11: mul r3.xy, v6.yyyy, cb0[12].xyxx
  12: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  13: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  14: add r3.xy, r3.xyxx, cb0[14].xyxx
  15: eq r1.w, cb2[0].x, l(1.000000)
  16: if_nz r1.w
  17:   eq r1.w, cb2[0].y, l(1.000000)
  18:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  19:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  20:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  22:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  23:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  25:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r1.w, r2.w
  28:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  33: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  34: mul r1.w, r1.w, r3.w
  35: mul r3.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, -v2.xyzx, r2.xyzx
  37: add r1.w, r1.w, r1.w
  38: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r1.w, r2.xyzx, r5.xyzx
  43: dp3 r2.x, r4.xyzx, r5.xyzx
  44: mul r2.x, r2.x, r2.x
  45: mul r2.x, r2.x, r2.x
  46: mov r2.y, cb0[8].w
  47: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  48: mul r2.x, r2.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r2.xxxx
  50: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  51: mul r1.xyz, r1.wwww, r3.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 41 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  30: mov o6.xyz, r1.xyzx
  31: mov o3.w, r3.x
  32: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r1.w, r1.xyzx, r1.xyzx
  36: rsq r1.w, r1.w
  37: mul r1.xyz, r1.wwww, r1.xyzx
  38: mul r4.xyz, r2.yzxy, r1.zxyz
  39: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  40: mov o5.xyz, r1.xyzx
  41: mul r1.x, v4.w, cb3[9].w
  42: mul o4.xyz, r1.xxxx, r2.xyzx
  43: mov o4.w, r3.y
  44: mov o5.w, r3.z
  45: mul r1.xy, r0.yyyy, cb0[12].xyxx
  46: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  47: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  48: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  49: mov o8.xyzw, l(0,0,0,0)
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: mul r3.xy, v6.yyyy, cb0[12].xyxx
  19: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  20: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  21: add r3.xy, r3.xyxx, cb0[14].xyxx
  22: eq r1.w, cb2[0].x, l(1.000000)
  23: if_nz r1.w
  24:   eq r1.w, cb2[0].y, l(1.000000)
  25:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  26:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  27:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  28:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  29:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  30:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  31:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  32:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  33:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  34:   max r4.x, r1.w, r2.w
  35:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  36: else 
  37:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  40: sample r3.xyzw, r3.xyxx, t2.xyzw, s4
  41: mul r1.w, r1.w, r3.w
  42: mul r3.xyz, r1.wwww, cb0[2].xyzx
  43: dp3 r1.w, -v2.xyzx, r2.xyzx
  44: add r1.w, r1.w, r1.w
  45: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  46: mov r5.x, v3.w
  47: mov r5.y, v4.w
  48: mov r5.z, v5.w
  49: dp3_sat r1.w, r2.xyzx, r5.xyzx
  50: dp3 r2.x, r4.xyzx, r5.xyzx
  51: mul r2.x, r2.x, r2.x
  52: mul r2.x, r2.x, r2.x
  53: mov r2.y, cb0[8].w
  54: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  55: mul r2.x, r2.x, l(16.000000)
  56: mul r0.xyz, r0.xyzx, r2.xxxx
  57: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  58: mul r1.xyz, r1.wwww, r3.xyzx
  59: mul o0.xyz, r0.xyzx, r1.xyzx
  60: mov o0.w, l(1.000000)
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: mov r2.w, l(0)
  25: mov o3.xyzw, r2.wwwx
  26: mov o4.xyzw, r2.wwwy
  27: mov o5.w, r2.z
  28: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r1.w, r1.xyzx, r1.xyzx
  32: rsq r1.w, r1.w
  33: mul o5.xyz, r1.wwww, r1.xyzx
  34: mul r1.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mov o8.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xy, v6.yyyy, cb0[12].xyxx
   9: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  10: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  11: add r3.xy, r3.xyxx, cb0[14].xyxx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  31: mul r1.w, r1.w, r3.w
  32: mul r3.xyz, r1.wwww, cb0[2].xyzx
  33: dp3 r1.w, -v2.xyzx, r2.xyzx
  34: add r1.w, r1.w, r1.w
  35: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r1.w, r2.xyzx, r5.xyzx
  40: dp3 r2.x, r4.xyzx, r5.xyzx
  41: mul r2.x, r2.x, r2.x
  42: mul r2.x, r2.x, r2.x
  43: mov r2.y, cb0[8].w
  44: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  45: mul r2.x, r2.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r2.xxxx
  47: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  48: mul r1.xyz, r1.wwww, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   5: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   6: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: dp3 r0.w, v5.xyzx, v5.xyzx
   8: rsq r0.w, r0.w
   9: mul r2.xyz, r0.wwww, v5.xyzx
  10: dp3 r0.w, -v2.xyzx, r2.xyzx
  11: add r0.w, r0.w, r0.w
  12: mad r3.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: dp3 r0.w, r3.xyzx, r4.xyzx
  17: dp3_sat r1.w, r2.xyzx, r4.xyzx
  18: mul r0.w, r0.w, r0.w
  19: mul r2.x, r0.w, r0.w
  20: mov r2.y, cb0[8].w
  21: sample r2.xyzw, r2.xyxx, t3.xyzw, s0
  22: mul r0.w, r2.x, l(16.000000)
  23: mul r1.xyz, r1.xyzx, r0.wwww
  24: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  25: mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
  26: mul r2.xyzw, v6.yyyy, cb0[12].xyzw
  27: mad r2.xyzw, cb0[11].xyzw, v6.xxxx, r2.xyzw
  28: mad r2.xyzw, cb0[13].xyzw, v6.zzzz, r2.xyzw
  29: add r2.xyzw, r2.xyzw, cb0[14].xyzw
  30: div r1.xy, r2.xyxx, r2.wwww
  31: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  32: sample r3.xyzw, r1.xyxx, t1.xyzw, s3
  33: lt r0.w, l(0.000000), r2.z
  34: dp3 r1.x, r2.xyzx, r2.xyzx
  35: sample r2.xyzw, r1.xxxx, t2.xyzw, s4
  36: and r0.w, r0.w, l(0x3f800000)
  37: mul r0.w, r3.w, r0.w
  38: mul r0.w, r2.x, r0.w
  39: mul r2.xyzw, v6.yyyy, cb1[9].xyzw
  40: mad r2.xyzw, cb1[8].xyzw, v6.xxxx, r2.xyzw
  41: mad r2.xyzw, cb1[10].xyzw, v6.zzzz, r2.xyzw
  42: add r2.xyzw, r2.xyzw, cb1[11].xyzw
  43: div r1.xyz, r2.xyzx, r2.wwww
  44: sample_c_lz r1.x, r1.xyxx, t4.xxxx, s1, r1.z
  45: add r1.y, -cb1[24].x, l(1.000000)
  46: mad r1.x, r1.x, r1.y, cb1[24].x
  47: mul r0.w, r0.w, r1.x
  48: mul r1.xyz, r0.wwww, cb0[2].xyzx
  49: mul r1.xyz, r1.wwww, r1.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  49: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  50: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  51: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   5: mul r1.x, r1.w, r1.x
   6: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mul r2.xyz, r1.yyyy, v4.xyzx
   8: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
   9: dp2 r0.w, r1.xyxx, r1.xyxx
  10: min r0.w, r0.w, l(1.000000)
  11: add r0.w, -r0.w, l(1.000000)
  12: sqrt r0.w, r0.w
  13: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  14: dp3 r0.w, -v2.xyzx, r1.xyzx
  15: add r0.w, r0.w, r0.w
  16: mad r2.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  17: mov r3.x, v3.w
  18: mov r3.y, v4.w
  19: mov r3.z, v5.w
  20: dp3 r0.w, r2.xyzx, r3.xyzx
  21: dp3_sat r1.x, r1.xyzx, r3.xyzx
  22: mul r0.w, r0.w, r0.w
  23: mul r2.x, r0.w, r0.w
  24: mov r2.y, cb0[8].w
  25: sample r2.xyzw, r2.xyxx, t4.xyzw, s0
  26: mul r0.w, r2.x, l(16.000000)
  27: mad r1.yzw, r0.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  28: mul r0.xyz, r0.xyzx, cb0[4].xyzx
  29: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  30: mul r1.yzw, r0.wwww, r1.yyzw
  31: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  32: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  33: mul r2.xyzw, v6.yyyy, cb0[12].xyzw
  34: mad r2.xyzw, cb0[11].xyzw, v6.xxxx, r2.xyzw
  35: mad r2.xyzw, cb0[13].xyzw, v6.zzzz, r2.xyzw
  36: add r2.xyzw, r2.xyzw, cb0[14].xyzw
  37: div r1.yz, r2.xxyx, r2.wwww
  38: add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  39: sample r3.xyzw, r1.yzyy, t2.xyzw, s4
  40: lt r0.w, l(0.000000), r2.z
  41: dp3 r1.y, r2.xyzx, r2.xyzx
  42: sample r2.xyzw, r1.yyyy, t3.xyzw, s5
  43: and r0.w, r0.w, l(0x3f800000)
  44: mul r0.w, r3.w, r0.w
  45: mul r0.w, r2.x, r0.w
  46: mul r2.xyzw, v6.yyyy, cb1[9].xyzw
  47: mad r2.xyzw, cb1[8].xyzw, v6.xxxx, r2.xyzw
  48: mad r2.xyzw, cb1[10].xyzw, v6.zzzz, r2.xyzw
  49: add r2.xyzw, r2.xyzw, cb1[11].xyzw
  50: div r1.yzw, r2.xxyz, r2.wwww
  51: sample_c_lz r1.y, r1.yzyy, t5.xxxx, s1, r1.w
  52: add r1.z, -cb1[24].x, l(1.000000)
  53: mad r1.y, r1.y, r1.z, cb1[24].x
  54: mul r0.w, r0.w, r1.y
  55: mul r1.yzw, r0.wwww, cb0[2].xxyz
  56: mul r1.xyz, r1.xxxx, r1.yzwy
  57: mul o0.xyz, r0.xyzx, r1.xyzx
  58: mov o0.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 39 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: mov r1.y, cb0[8].w
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  41: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  43: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r2.xyz, r0.wwww, r2.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r2.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r3.w, r4.xyzx, r4.xyzx
  23: sqrt r3.w, r3.w
  24: add r3.w, -r2.w, r3.w
  25: mad r2.w, cb3[25].w, r3.w, r2.w
  26: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  27: eq r3.w, cb5[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r3.w, r4.y
  40:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  45: div r4.xy, v7.xyxx, v7.wwww
  46: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  47: add r3.w, r3.w, -r4.x
  48: mad r2.w, r2.w, r3.w, r4.x
  49: mul r4.xyz, r2.wwww, cb0[2].xyzx
  50: add r0.w, -r0.w, l(1.000000)
  51: mov r5.x, v3.w
  52: mov r5.y, v4.w
  53: mov r5.z, v5.w
  54: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  55: dp3 r1.w, r6.xyzx, r6.xyzx
  56: max r1.w, r1.w, l(0.001000)
  57: rsq r1.w, r1.w
  58: mul r6.xyz, r1.wwww, r6.xyzx
  59: dp3 r1.w, r2.xyzx, -r3.xyzx
  60: dp3_sat r2.w, r2.xyzx, r5.xyzx
  61: dp3_sat r2.x, r2.xyzx, r6.xyzx
  62: dp3_sat r2.y, r5.xyzx, r6.xyzx
  63: mul r2.z, r2.y, r2.y
  64: dp2 r2.z, r2.zzzz, r0.wwww
  65: add r2.z, r2.z, l(-0.500000)
  66: add r3.x, -r2.w, l(1.000000)
  67: mul r3.y, r3.x, r3.x
  68: mul r3.y, r3.y, r3.y
  69: mul r3.x, r3.x, r3.y
  70: mad r3.x, r2.z, r3.x, l(1.000000)
  71: add r3.y, -|r1.w|, l(1.000000)
  72: mul r3.z, r3.y, r3.y
  73: mul r3.z, r3.z, r3.z
  74: mul r3.y, r3.y, r3.z
  75: mad r2.z, r2.z, r3.y, l(1.000000)
  76: mul r2.z, r2.z, r3.x
  77: mul r2.z, r2.w, r2.z
  78: mul r0.w, r0.w, r0.w
  79: max r0.w, r0.w, l(0.002000)
  80: add r3.x, -r0.w, l(1.000000)
  81: mad r3.y, |r1.w|, r3.x, r0.w
  82: mad r3.x, r2.w, r3.x, r0.w
  83: mul r1.w, |r1.w|, r3.x
  84: mad r1.w, r2.w, r3.y, r1.w
  85: add r1.w, r1.w, l(0.000010)
  86: div r1.w, l(0.500000), r1.w
  87: mul r0.w, r0.w, r0.w
  88: mad r3.x, r2.x, r0.w, -r2.x
  89: mad r2.x, r3.x, r2.x, l(1.000000)
  90: mul r0.w, r0.w, l(0.318310)
  91: mad r2.x, r2.x, r2.x, l(0.000000)
  92: div r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, r1.w
  94: mul r0.w, r0.w, l(3.141593)
  95: max r0.w, r0.w, l(0.000100)
  96: sqrt r0.w, r0.w
  97: mul r0.w, r2.w, r0.w
  98: dp3 r1.w, r0.xyzx, r0.xyzx
  99: ne r1.w, r1.w, l(0.000000)
 100: and r1.w, r1.w, l(0x3f800000)
 101: mul r0.w, r0.w, r1.w
 102: mul r2.xzw, r2.zzzz, r4.xxyz
 103: mul r3.xyz, r4.xyzx, r0.wwww
 104: add r0.w, -r2.y, l(1.000000)
 105: mul r1.w, r0.w, r0.w
 106: mul r1.w, r1.w, r1.w
 107: mul r0.w, r0.w, r1.w
 108: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 109: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 110: mul r0.xyz, r0.xyzx, r3.xyzx
 111: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 112: mov o0.w, l(1.000000)
 113: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  28: mov r5.x, cb4[9].z
  29: mov r5.y, cb4[10].z
  30: mov r5.z, cb4[11].z
  31: dp3 r2.w, r4.xyzx, r5.xyzx
  32: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  33: dp3 r3.w, r4.xyzx, r4.xyzx
  34: sqrt r3.w, r3.w
  35: add r3.w, -r2.w, r3.w
  36: mad r2.w, cb3[25].w, r3.w, r2.w
  37: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  38: eq r3.w, cb5[0].x, l(1.000000)
  39: if_nz r3.w
  40:   eq r3.w, cb5[0].y, l(1.000000)
  41:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  42:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  43:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  44:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  45:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  46:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  47:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  48:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  49:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  50:   max r4.x, r3.w, r4.y
  51:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  52: else 
  53:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  56: div r4.xy, v7.xyxx, v7.wwww
  57: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  58: add r3.w, r3.w, -r4.x
  59: mad r2.w, r2.w, r3.w, r4.x
  60: mul r4.xyz, r2.wwww, cb0[2].xyzx
  61: add r0.w, -r0.w, l(1.000000)
  62: mov r5.x, v3.w
  63: mov r5.y, v4.w
  64: mov r5.z, v5.w
  65: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  66: dp3 r1.w, r6.xyzx, r6.xyzx
  67: max r1.w, r1.w, l(0.001000)
  68: rsq r1.w, r1.w
  69: mul r6.xyz, r1.wwww, r6.xyzx
  70: dp3 r1.w, r2.xyzx, -r3.xyzx
  71: dp3_sat r2.w, r2.xyzx, r5.xyzx
  72: dp3_sat r2.x, r2.xyzx, r6.xyzx
  73: dp3_sat r2.y, r5.xyzx, r6.xyzx
  74: mul r2.z, r2.y, r2.y
  75: dp2 r2.z, r2.zzzz, r0.wwww
  76: add r2.z, r2.z, l(-0.500000)
  77: add r3.x, -r2.w, l(1.000000)
  78: mul r3.y, r3.x, r3.x
  79: mul r3.y, r3.y, r3.y
  80: mul r3.x, r3.x, r3.y
  81: mad r3.x, r2.z, r3.x, l(1.000000)
  82: add r3.y, -|r1.w|, l(1.000000)
  83: mul r3.z, r3.y, r3.y
  84: mul r3.z, r3.z, r3.z
  85: mul r3.y, r3.y, r3.z
  86: mad r2.z, r2.z, r3.y, l(1.000000)
  87: mul r2.z, r2.z, r3.x
  88: mul r2.z, r2.w, r2.z
  89: mul r0.w, r0.w, r0.w
  90: max r0.w, r0.w, l(0.002000)
  91: add r3.x, -r0.w, l(1.000000)
  92: mad r3.y, |r1.w|, r3.x, r0.w
  93: mad r3.x, r2.w, r3.x, r0.w
  94: mul r1.w, |r1.w|, r3.x
  95: mad r1.w, r2.w, r3.y, r1.w
  96: add r1.w, r1.w, l(0.000010)
  97: div r1.w, l(0.500000), r1.w
  98: mul r0.w, r0.w, r0.w
  99: mad r3.x, r2.x, r0.w, -r2.x
 100: mad r2.x, r3.x, r2.x, l(1.000000)
 101: mul r0.w, r0.w, l(0.318310)
 102: mad r2.x, r2.x, r2.x, l(0.000000)
 103: div r0.w, r0.w, r2.x
 104: mul r0.w, r0.w, r1.w
 105: mul r0.w, r0.w, l(3.141593)
 106: max r0.w, r0.w, l(0.000100)
 107: sqrt r0.w, r0.w
 108: mul r0.w, r2.w, r0.w
 109: dp3 r1.w, r0.xyzx, r0.xyzx
 110: ne r1.w, r1.w, l(0.000000)
 111: and r1.w, r1.w, l(0x3f800000)
 112: mul r0.w, r0.w, r1.w
 113: mul r2.xzw, r2.zzzz, r4.xxyz
 114: mul r3.xyz, r4.xyzx, r0.wwww
 115: add r0.w, -r2.y, l(1.000000)
 116: mul r1.w, r0.w, r0.w
 117: mul r1.w, r1.w, r1.w
 118: mul r0.w, r0.w, r1.w
 119: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 120: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 121: mul r0.xyz, r0.xyzx, r3.xyzx
 122: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 123: mov o0.w, l(1.000000)
 124: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 95 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  14: mov r5.x, cb4[9].z
  15: mov r5.y, cb4[10].z
  16: mov r5.z, cb4[11].z
  17: dp3 r2.w, r4.xyzx, r5.xyzx
  18: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  19: dp3 r3.w, r4.xyzx, r4.xyzx
  20: sqrt r3.w, r3.w
  21: add r3.w, -r2.w, r3.w
  22: mad r2.w, cb3[25].w, r3.w, r2.w
  23: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  24: eq r3.w, cb5[0].x, l(1.000000)
  25: if_nz r3.w
  26:   eq r3.w, cb5[0].y, l(1.000000)
  27:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  28:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  29:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  31:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  32:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  33:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  34:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  35:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r4.x, r3.w, r4.y
  37:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  38: else 
  39:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  42: div r4.xy, v7.xyxx, v7.wwww
  43: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  44: add r3.w, r3.w, -r4.x
  45: mad r2.w, r2.w, r3.w, r4.x
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: add r0.x, -r0.x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.xxxx
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r0.x, r0.x, r0.x
  76: max r0.x, r0.x, l(0.002000)
  77: add r3.x, -r0.x, l(1.000000)
  78: mad r3.y, |r1.w|, r3.x, r0.x
  79: mad r3.x, r2.w, r3.x, r0.x
  80: mul r1.w, |r1.w|, r3.x
  81: mad r1.w, r2.w, r3.y, r1.w
  82: add r1.w, r1.w, l(0.000010)
  83: div r1.w, l(0.500000), r1.w
  84: mul r0.x, r0.x, r0.x
  85: mad r3.x, r2.x, r0.x, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r0.x, r0.x, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r0.x, r0.x, r2.x
  90: mul r0.x, r0.x, r1.w
  91: mul r0.x, r0.x, l(3.141593)
  92: max r0.x, r0.x, l(0.000100)
  93: sqrt r0.x, r0.x
  94: mul r0.x, r2.w, r0.x
  95: dp3 r1.w, r1.xyzx, r1.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xzw, r2.zzzz, r4.xxyz
 100: mul r3.xyz, r4.xyzx, r0.xxxx
 101: add r0.x, -r2.y, l(1.000000)
 102: mul r1.w, r0.x, r0.x
 103: mul r1.w, r1.w, r1.w
 104: mul r0.x, r0.x, r1.w
 105: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 107: mul r1.xyz, r1.xyzx, r3.xyzx
 108: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 102 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: dp3 r1.w, v5.xyzx, v5.xyzx
  11: rsq r1.w, r1.w
  12: mul r2.xyz, r1.wwww, v5.xyzx
  13: dp3 r1.w, v2.xyzx, v2.xyzx
  14: rsq r1.w, r1.w
  15: mul r3.xyz, r1.wwww, v2.xyzx
  16: mul r4.xy, v6.yyyy, cb0[12].xyxx
  17: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  18: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  19: add r4.xy, r4.xyxx, cb0[14].xyxx
  20: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  21: mov r6.x, cb4[9].z
  22: mov r6.y, cb4[10].z
  23: mov r6.z, cb4[11].z
  24: dp3 r2.w, r5.xyzx, r6.xyzx
  25: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  26: dp3 r3.w, r5.xyzx, r5.xyzx
  27: sqrt r3.w, r3.w
  28: add r3.w, -r2.w, r3.w
  29: mad r2.w, cb3[25].w, r3.w, r2.w
  30: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  31: eq r3.w, cb5[0].x, l(1.000000)
  32: if_nz r3.w
  33:   eq r3.w, cb5[0].y, l(1.000000)
  34:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  35:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  36:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  37:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  38:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  39:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  40:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  41:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  42:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  43:   max r5.x, r3.w, r4.z
  44:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  45: else 
  46:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  49: div r4.zw, v8.xxxy, v8.wwww
  50: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  51: add r3.w, r3.w, -r5.x
  52: mad r2.w, r2.w, r3.w, r5.x
  53: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  54: mul r2.w, r2.w, r4.w
  55: mul r4.xyz, r2.wwww, cb0[2].xyzx
  56: add r0.w, -r0.w, l(1.000000)
  57: mov r5.x, v3.w
  58: mov r5.y, v4.w
  59: mov r5.z, v5.w
  60: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  61: dp3 r1.w, r6.xyzx, r6.xyzx
  62: max r1.w, r1.w, l(0.001000)
  63: rsq r1.w, r1.w
  64: mul r6.xyz, r1.wwww, r6.xyzx
  65: dp3 r1.w, r2.xyzx, -r3.xyzx
  66: dp3_sat r2.w, r2.xyzx, r5.xyzx
  67: dp3_sat r2.x, r2.xyzx, r6.xyzx
  68: dp3_sat r2.y, r5.xyzx, r6.xyzx
  69: mul r2.z, r2.y, r2.y
  70: dp2 r2.z, r2.zzzz, r0.wwww
  71: add r2.z, r2.z, l(-0.500000)
  72: add r3.x, -r2.w, l(1.000000)
  73: mul r3.y, r3.x, r3.x
  74: mul r3.y, r3.y, r3.y
  75: mul r3.x, r3.x, r3.y
  76: mad r3.x, r2.z, r3.x, l(1.000000)
  77: add r3.y, -|r1.w|, l(1.000000)
  78: mul r3.z, r3.y, r3.y
  79: mul r3.z, r3.z, r3.z
  80: mul r3.y, r3.y, r3.z
  81: mad r2.z, r2.z, r3.y, l(1.000000)
  82: mul r2.z, r2.z, r3.x
  83: mul r2.z, r2.w, r2.z
  84: mul r0.w, r0.w, r0.w
  85: max r0.w, r0.w, l(0.002000)
  86: add r3.x, -r0.w, l(1.000000)
  87: mad r3.y, |r1.w|, r3.x, r0.w
  88: mad r3.x, r2.w, r3.x, r0.w
  89: mul r1.w, |r1.w|, r3.x
  90: mad r1.w, r2.w, r3.y, r1.w
  91: add r1.w, r1.w, l(0.000010)
  92: div r1.w, l(0.500000), r1.w
  93: mul r0.w, r0.w, r0.w
  94: mad r3.x, r2.x, r0.w, -r2.x
  95: mad r2.x, r3.x, r2.x, l(1.000000)
  96: mul r0.w, r0.w, l(0.318310)
  97: mad r2.x, r2.x, r2.x, l(0.000000)
  98: div r0.w, r0.w, r2.x
  99: mul r0.w, r0.w, r1.w
 100: mul r0.w, r0.w, l(3.141593)
 101: max r0.w, r0.w, l(0.000100)
 102: sqrt r0.w, r0.w
 103: mul r0.w, r2.w, r0.w
 104: dp3 r1.w, r0.xyzx, r0.xyzx
 105: ne r1.w, r1.w, l(0.000000)
 106: and r1.w, r1.w, l(0x3f800000)
 107: mul r0.w, r0.w, r1.w
 108: mul r2.xzw, r2.zzzz, r4.xxyz
 109: mul r3.xyz, r4.xyzx, r0.wwww
 110: add r0.w, -r2.y, l(1.000000)
 111: mul r1.w, r0.w, r0.w
 112: mul r1.w, r1.w, r1.w
 113: mul r0.w, r0.w, r1.w
 114: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 116: mul r0.xyz, r0.xyzx, r3.xyzx
 117: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 118: mov o0.w, l(1.000000)
 119: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mul r3.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
  22: mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
  23: dp3 r2.w, r3.xyzx, r3.xyzx
  24: rsq r2.w, r2.w
  25: mul r3.xyz, r2.wwww, r3.xyzx
  26: mov o3.xyz, r3.xyzx
  27: mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  28: mov o6.xyz, r2.xyzx
  29: mov o3.w, r4.x
  30: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r2.w, r2.xyzx, r2.xyzx
  34: rsq r2.w, r2.w
  35: mul r2.xyz, r2.wwww, r2.xyzx
  36: mul r5.xyz, r3.yzxy, r2.zxyz
  37: mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r2.x, v4.w, cb3[9].w
  40: mul o4.xyz, r2.xxxx, r3.xyzx
  41: mov o4.w, r4.y
  42: mov o5.w, r4.z
  43: mul r2.xy, r0.yyyy, cb0[12].xyxx
  44: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  45: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  46: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  47: mul r0.x, r1.y, cb1[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o8.zw, r1.zzzw
  51: add o8.xy, r0.zzzz, r0.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 112 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _BumpScale at 128
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: add r0.w, -cb0[8].w, l(1.000000)
   6: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mul r1.xyz, r1.wwww, r1.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: mul r2.x, r2.w, r2.x
  12: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  13: mul r2.xy, r2.xyxx, cb0[8].xxxx
  14: dp2 r1.w, r2.xyxx, r2.xyxx
  15: min r1.w, r1.w, l(1.000000)
  16: add r1.w, -r1.w, l(1.000000)
  17: sqrt r1.w, r1.w
  18: mul r2.yzw, r2.yyyy, v4.xxyz
  19: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  20: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  21: dp3 r1.w, r2.xyzx, r2.xyzx
  22: rsq r1.w, r1.w
  23: mul r2.xyz, r1.wwww, r2.xyzx
  24: dp3 r1.w, v2.xyzx, v2.xyzx
  25: rsq r1.w, r1.w
  26: mul r3.xyz, r1.wwww, v2.xyzx
  27: mul r4.xy, v6.yyyy, cb0[12].xyxx
  28: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  29: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  30: add r4.xy, r4.xyxx, cb0[14].xyxx
  31: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  32: mov r6.x, cb4[9].z
  33: mov r6.y, cb4[10].z
  34: mov r6.z, cb4[11].z
  35: dp3 r2.w, r5.xyzx, r6.xyzx
  36: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  37: dp3 r3.w, r5.xyzx, r5.xyzx
  38: sqrt r3.w, r3.w
  39: add r3.w, -r2.w, r3.w
  40: mad r2.w, cb3[25].w, r3.w, r2.w
  41: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  42: eq r3.w, cb5[0].x, l(1.000000)
  43: if_nz r3.w
  44:   eq r3.w, cb5[0].y, l(1.000000)
  45:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  46:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  47:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  49:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  50:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  52:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r3.w, r4.z
  55:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  60: div r4.zw, v8.xxxy, v8.wwww
  61: sample r5.xyzw, r4.zwzz, t2.xyzw, s3
  62: add r3.w, r3.w, -r5.x
  63: mad r2.w, r2.w, r3.w, r5.x
  64: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  65: mul r2.w, r2.w, r4.w
  66: mul r4.xyz, r2.wwww, cb0[2].xyzx
  67: add r0.w, -r0.w, l(1.000000)
  68: mov r5.x, v3.w
  69: mov r5.y, v4.w
  70: mov r5.z, v5.w
  71: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  72: dp3 r1.w, r6.xyzx, r6.xyzx
  73: max r1.w, r1.w, l(0.001000)
  74: rsq r1.w, r1.w
  75: mul r6.xyz, r1.wwww, r6.xyzx
  76: dp3 r1.w, r2.xyzx, -r3.xyzx
  77: dp3_sat r2.w, r2.xyzx, r5.xyzx
  78: dp3_sat r2.x, r2.xyzx, r6.xyzx
  79: dp3_sat r2.y, r5.xyzx, r6.xyzx
  80: mul r2.z, r2.y, r2.y
  81: dp2 r2.z, r2.zzzz, r0.wwww
  82: add r2.z, r2.z, l(-0.500000)
  83: add r3.x, -r2.w, l(1.000000)
  84: mul r3.y, r3.x, r3.x
  85: mul r3.y, r3.y, r3.y
  86: mul r3.x, r3.x, r3.y
  87: mad r3.x, r2.z, r3.x, l(1.000000)
  88: add r3.y, -|r1.w|, l(1.000000)
  89: mul r3.z, r3.y, r3.y
  90: mul r3.z, r3.z, r3.z
  91: mul r3.y, r3.y, r3.z
  92: mad r2.z, r2.z, r3.y, l(1.000000)
  93: mul r2.z, r2.z, r3.x
  94: mul r2.z, r2.w, r2.z
  95: mul r0.w, r0.w, r0.w
  96: max r0.w, r0.w, l(0.002000)
  97: add r3.x, -r0.w, l(1.000000)
  98: mad r3.y, |r1.w|, r3.x, r0.w
  99: mad r3.x, r2.w, r3.x, r0.w
 100: mul r1.w, |r1.w|, r3.x
 101: mad r1.w, r2.w, r3.y, r1.w
 102: add r1.w, r1.w, l(0.000010)
 103: div r1.w, l(0.500000), r1.w
 104: mul r0.w, r0.w, r0.w
 105: mad r3.x, r2.x, r0.w, -r2.x
 106: mad r2.x, r3.x, r2.x, l(1.000000)
 107: mul r0.w, r0.w, l(0.318310)
 108: mad r2.x, r2.x, r2.x, l(0.000000)
 109: div r0.w, r0.w, r2.x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r0.w, l(3.141593)
 112: max r0.w, r0.w, l(0.000100)
 113: sqrt r0.w, r0.w
 114: mul r0.w, r2.w, r0.w
 115: dp3 r1.w, r0.xyzx, r0.xyzx
 116: ne r1.w, r1.w, l(0.000000)
 117: and r1.w, r1.w, l(0x3f800000)
 118: mul r0.w, r0.w, r1.w
 119: mul r2.xzw, r2.zzzz, r4.xxyz
 120: mul r3.xyz, r4.xyzx, r0.wwww
 121: add r0.w, -r2.y, l(1.000000)
 122: mul r1.w, r0.w, r0.w
 123: mul r1.w, r1.w, r1.w
 124: mul r0.w, r0.w, r1.w
 125: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 127: mul r0.xyz, r0.xyzx, r3.xyzx
 128: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   3: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.yzw, r0.yyzw, r1.wwww
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r2.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r3.w, r5.xyzx, r5.xyzx
  24: sqrt r3.w, r3.w
  25: add r3.w, -r2.w, r3.w
  26: mad r2.w, cb3[25].w, r3.w, r2.w
  27: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  28: eq r3.w, cb5[0].x, l(1.000000)
  29: if_nz r3.w
  30:   eq r3.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r3.w, r4.z
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  46: div r4.zw, v8.xxxy, v8.wwww
  47: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  48: add r3.w, r3.w, -r5.x
  49: mad r2.w, r2.w, r3.w, r5.x
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: add r0.x, -r0.x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.xxxx
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r0.x, r0.x, r0.x
  82: max r0.x, r0.x, l(0.002000)
  83: add r3.x, -r0.x, l(1.000000)
  84: mad r3.y, |r1.w|, r3.x, r0.x
  85: mad r3.x, r2.w, r3.x, r0.x
  86: mul r1.w, |r1.w|, r3.x
  87: mad r1.w, r2.w, r3.y, r1.w
  88: add r1.w, r1.w, l(0.000010)
  89: div r1.w, l(0.500000), r1.w
  90: mul r0.x, r0.x, r0.x
  91: mad r3.x, r2.x, r0.x, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r0.x, r0.x, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r0.x, r0.x, r2.x
  96: mul r0.x, r0.x, r1.w
  97: mul r0.x, r0.x, l(3.141593)
  98: max r0.x, r0.x, l(0.000100)
  99: sqrt r0.x, r0.x
 100: mul r0.x, r2.w, r0.x
 101: dp3 r1.w, r1.xyzx, r1.xyzx
 102: ne r1.w, r1.w, l(0.000000)
 103: and r1.w, r1.w, l(0x3f800000)
 104: mul r0.x, r0.x, r1.w
 105: mul r2.xzw, r2.zzzz, r4.xxyz
 106: mul r3.xyz, r4.xyzx, r0.xxxx
 107: add r0.x, -r2.y, l(1.000000)
 108: mul r1.w, r0.x, r0.x
 109: mul r1.w, r1.w, r1.w
 110: mul r0.x, r0.x, r1.w
 111: add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
 113: mul r1.xyz, r1.xyzx, r3.xyzx
 114: mad o0.xyz, r0.yzwy, r2.xzwx, r1.xyzx
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 39 math, 5 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   5: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   6: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: dp3 r0.w, v5.xyzx, v5.xyzx
   8: rsq r0.w, r0.w
   9: mul r2.xyz, r0.wwww, v5.xyzx
  10: dp3 r0.w, -v2.xyzx, r2.xyzx
  11: add r0.w, r0.w, r0.w
  12: mad r3.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: dp3 r0.w, r3.xyzx, r4.xyzx
  17: dp3_sat r1.w, r2.xyzx, r4.xyzx
  18: mul r0.w, r0.w, r0.w
  19: mul r2.x, r0.w, r0.w
  20: mov r2.y, cb0[8].w
  21: sample r2.xyzw, r2.xyxx, t2.xyzw, s0
  22: mul r0.w, r2.x, l(16.000000)
  23: mul r1.xyz, r1.xyzx, r0.wwww
  24: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  25: mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
  26: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  27: max r0.w, |r1.y|, |r1.x|
  28: max r0.w, |r1.z|, r0.w
  29: add r0.w, r0.w, -cb1[2].z
  30: max r0.w, r0.w, l(0.000010)
  31: mul r0.w, r0.w, cb1[2].w
  32: div r0.w, cb1[2].y, r0.w
  33: add r0.w, r0.w, -cb1[2].x
  34: add r0.w, -r0.w, l(1.000000)
  35: sample_c_lz r0.w, r1.xyzx, t3.xxxx, s1, r0.w
  36: add r1.x, -cb2[24].x, l(1.000000)
  37: mad r0.w, r0.w, r1.x, cb2[24].x
  38: mul r1.xyz, v6.yyyy, cb0[12].xyzx
  39: mad r1.xyz, cb0[11].xyzx, v6.xxxx, r1.xyzx
  40: mad r1.xyz, cb0[13].xyzx, v6.zzzz, r1.xyzx
  41: add r1.xyz, r1.xyzx, cb0[14].xyzx
  42: dp3 r1.x, r1.xyzx, r1.xyzx
  43: sample r2.xyzw, r1.xxxx, t1.xyzw, s3
  44: mul r0.w, r0.w, r2.x
  45: mul r1.xyz, r0.wwww, cb0[2].xyzx
  46: mul r1.xyz, r1.wwww, r1.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 4 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   5: mul r1.x, r1.w, r1.x
   6: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mul r2.xyz, r1.yyyy, v4.xyzx
   8: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
   9: dp2 r0.w, r1.xyxx, r1.xyxx
  10: min r0.w, r0.w, l(1.000000)
  11: add r0.w, -r0.w, l(1.000000)
  12: sqrt r0.w, r0.w
  13: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  14: dp3 r0.w, -v2.xyzx, r1.xyzx
  15: add r0.w, r0.w, r0.w
  16: mad r2.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  17: mov r3.x, v3.w
  18: mov r3.y, v4.w
  19: mov r3.z, v5.w
  20: dp3 r0.w, r2.xyzx, r3.xyzx
  21: dp3_sat r1.x, r1.xyzx, r3.xyzx
  22: mul r0.w, r0.w, r0.w
  23: mul r2.x, r0.w, r0.w
  24: mov r2.y, cb0[8].w
  25: sample r2.xyzw, r2.xyxx, t3.xyzw, s0
  26: mul r0.w, r2.x, l(16.000000)
  27: mad r1.yzw, r0.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  28: mul r0.xyz, r0.xyzx, cb0[4].xyzx
  29: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  30: mul r1.yzw, r0.wwww, r1.yyzw
  31: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  32: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  33: add r1.yzw, v6.xxyz, -cb1[1].xxyz
  34: max r0.w, |r1.z|, |r1.y|
  35: max r0.w, |r1.w|, r0.w
  36: add r0.w, r0.w, -cb1[2].z
  37: max r0.w, r0.w, l(0.000010)
  38: mul r0.w, r0.w, cb1[2].w
  39: div r0.w, cb1[2].y, r0.w
  40: add r0.w, r0.w, -cb1[2].x
  41: add r0.w, -r0.w, l(1.000000)
  42: sample_c_lz r0.w, r1.yzwy, t4.xxxx, s1, r0.w
  43: add r1.y, -cb2[24].x, l(1.000000)
  44: mad r0.w, r0.w, r1.y, cb2[24].x
  45: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  46: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  47: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  48: add r1.yzw, r1.yyzw, cb0[14].xxyz
  49: dp3 r1.y, r1.yzwy, r1.yzwy
  50: sample r2.xyzw, r1.yyyy, t2.xyzw, s4
  51: mul r0.w, r0.w, r2.x
  52: mul r1.yzw, r0.wwww, cb0[2].xxyz
  53: mul r1.xyz, r1.xxxx, r1.yzwy
  54: mul o0.xyz, r0.xyzx, r1.xyzx
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t3.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: mov r1.y, cb0[8].w
  35: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  36: mul r0.w, r1.x, l(16.000000)
  37: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  38: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  40: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: mul r2.xyz, r0.wwww, r2.xyzx
  42: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  43: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  44: mul o0.xyz, r0.xyzx, r1.xyzx
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 40 math, 5 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   5: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   6: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: dp3 r0.w, v5.xyzx, v5.xyzx
   8: rsq r0.w, r0.w
   9: mul r2.xyz, r0.wwww, v5.xyzx
  10: dp3 r0.w, -v2.xyzx, r2.xyzx
  11: add r0.w, r0.w, r0.w
  12: mad r3.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: dp3 r0.w, r3.xyzx, r4.xyzx
  17: dp3_sat r1.w, r2.xyzx, r4.xyzx
  18: mul r0.w, r0.w, r0.w
  19: mul r2.x, r0.w, r0.w
  20: mov r2.y, cb0[8].w
  21: sample r2.xyzw, r2.xyxx, t3.xyzw, s0
  22: mul r0.w, r2.x, l(16.000000)
  23: mul r1.xyz, r1.xyzx, r0.wwww
  24: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  25: mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
  26: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  27: max r0.w, |r1.y|, |r1.x|
  28: max r0.w, |r1.z|, r0.w
  29: add r0.w, r0.w, -cb1[2].z
  30: max r0.w, r0.w, l(0.000010)
  31: mul r0.w, r0.w, cb1[2].w
  32: div r0.w, cb1[2].y, r0.w
  33: add r0.w, r0.w, -cb1[2].x
  34: add r0.w, -r0.w, l(1.000000)
  35: sample_c_lz r0.w, r1.xyzx, t4.xxxx, s1, r0.w
  36: add r1.x, -cb2[24].x, l(1.000000)
  37: mad r0.w, r0.w, r1.x, cb2[24].x
  38: mul r1.xyz, v6.yyyy, cb0[12].xyzx
  39: mad r1.xyz, cb0[11].xyzx, v6.xxxx, r1.xyzx
  40: mad r1.xyz, cb0[13].xyzx, v6.zzzz, r1.xyzx
  41: add r1.xyz, r1.xyzx, cb0[14].xyzx
  42: dp3 r2.x, r1.xyzx, r1.xyzx
  43: sample r3.xyzw, r1.xyzx, t2.xyzw, s3
  44: sample r2.xyzw, r2.xxxx, t1.xyzw, s4
  45: mul r1.x, r3.w, r2.x
  46: mul r0.w, r0.w, r1.x
  47: mul r1.xyz, r0.wwww, cb0[2].xyzx
  48: mul r1.xyz, r1.wwww, r1.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 46 math, 4 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   2: lt r0.w, r0.w, l(0.000000)
   3: discard_nz r0.w
   4: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   5: mul r1.x, r1.w, r1.x
   6: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mul r2.xyz, r1.yyyy, v4.xyzx
   8: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
   9: dp2 r0.w, r1.xyxx, r1.xyxx
  10: min r0.w, r0.w, l(1.000000)
  11: add r0.w, -r0.w, l(1.000000)
  12: sqrt r0.w, r0.w
  13: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  14: dp3 r0.w, -v2.xyzx, r1.xyzx
  15: add r0.w, r0.w, r0.w
  16: mad r2.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  17: mov r3.x, v3.w
  18: mov r3.y, v4.w
  19: mov r3.z, v5.w
  20: dp3 r0.w, r2.xyzx, r3.xyzx
  21: dp3_sat r1.x, r1.xyzx, r3.xyzx
  22: mul r0.w, r0.w, r0.w
  23: mul r2.x, r0.w, r0.w
  24: mov r2.y, cb0[8].w
  25: sample r2.xyzw, r2.xyxx, t4.xyzw, s0
  26: mul r0.w, r2.x, l(16.000000)
  27: mad r1.yzw, r0.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  28: mul r0.xyz, r0.xyzx, cb0[4].xyzx
  29: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  30: mul r1.yzw, r0.wwww, r1.yyzw
  31: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  32: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  33: add r1.yzw, v6.xxyz, -cb1[1].xxyz
  34: max r0.w, |r1.z|, |r1.y|
  35: max r0.w, |r1.w|, r0.w
  36: add r0.w, r0.w, -cb1[2].z
  37: max r0.w, r0.w, l(0.000010)
  38: mul r0.w, r0.w, cb1[2].w
  39: div r0.w, cb1[2].y, r0.w
  40: add r0.w, r0.w, -cb1[2].x
  41: add r0.w, -r0.w, l(1.000000)
  42: sample_c_lz r0.w, r1.yzwy, t5.xxxx, s1, r0.w
  43: add r1.y, -cb2[24].x, l(1.000000)
  44: mad r0.w, r0.w, r1.y, cb2[24].x
  45: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  46: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  47: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  48: add r1.yzw, r1.yyzw, cb0[14].xxyz
  49: dp3 r2.x, r1.yzwy, r1.yzwy
  50: sample r3.xyzw, r1.yzwy, t3.xyzw, s4
  51: sample r2.xyzw, r2.xxxx, t2.xyzw, s5
  52: mul r1.y, r3.w, r2.x
  53: mul r0.w, r0.w, r1.y
  54: mul r1.yzw, r0.wwww, cb0[2].xxyz
  55: mul r1.xyz, r1.xxxx, r1.yzwy
  56: mul o0.xyz, r0.xyzx, r1.xyzx
  57: mov o0.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t2.xyzw, s3
  18: sample r1.xyzw, r1.xxxx, t1.xyzw, s4
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: mov r1.y, cb0[8].w
  37: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  38: mul r0.w, r1.x, l(16.000000)
  39: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  40: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  41: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  42: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mul r2.xyz, r0.wwww, r2.xyzx
  44: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  45: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  46: mul o0.xyz, r0.xyzx, r1.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: dp3 r1.w, v5.xyzx, v5.xyzx
   9: rsq r1.w, r1.w
  10: mul r2.xyz, r1.wwww, v5.xyzx
  11: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  12: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  13: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  14: add r3.xyz, r3.xyzx, cb0[14].xyzx
  15: eq r1.w, cb2[0].x, l(1.000000)
  16: if_nz r1.w
  17:   eq r1.w, cb2[0].y, l(1.000000)
  18:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  19:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  20:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  22:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  23:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  25:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r1.w, r2.w
  28:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  33: dp3 r2.w, r3.xyzx, r3.xyzx
  34: sample r3.xyzw, r2.wwww, t1.xyzw, s3
  35: mul r1.w, r1.w, r3.x
  36: mul r3.xyz, r1.wwww, cb0[2].xyzx
  37: dp3 r1.w, -v2.xyzx, r2.xyzx
  38: add r1.w, r1.w, r1.w
  39: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  40: mov r5.x, v3.w
  41: mov r5.y, v4.w
  42: mov r5.z, v5.w
  43: dp3_sat r1.w, r2.xyzx, r5.xyzx
  44: dp3 r2.x, r4.xyzx, r5.xyzx
  45: mul r2.x, r2.x, r2.x
  46: mul r2.x, r2.x, r2.x
  47: mov r2.y, cb0[8].w
  48: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  49: mul r2.x, r2.x, l(16.000000)
  50: mul r0.xyz, r0.xyzx, r2.xxxx
  51: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  52: mul r1.xyz, r1.wwww, r3.xyzx
  53: mul o0.xyz, r0.xyzx, r1.xyzx
  54: mov o0.w, l(1.000000)
  55: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Cutoff at 80
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.w, r0.w, cb0[4].w, -cb0[5].x
   3: lt r0.w, r0.w, l(0.000000)
   4: discard_nz r0.w
   5: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   6: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   7: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   8: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  19: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  20: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  21: add r3.xyz, r3.xyzx, cb0[14].xyzx
  22: eq r1.w, cb2[0].x, l(1.000000)
  23: if_nz r1.w
  24:   eq r1.w, cb2[0].y, l(1.000000)
  25:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  26:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  27:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  28:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  29:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  30:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  31:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  32:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  33:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  34:   max r4.x, r1.w, r2.w
  35:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  36: else 
  37:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  40: dp3 r2.w, r3.xyzx, r3.xyzx
  41: sample r3.xyzw, r2.wwww, t2.xyzw, s4
  42: mul r1.w, r1.w, r3.x
  43: mul r3.xyz, r1.wwww, cb0[2].xyzx
  44: dp3 r1.w, -v2.xyzx, r2.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  47: mov r5.x, v3.w
  48: mov r5.y, v4.w
  49: mov r5.z, v5.w
  50: dp3_sat r1.w, r2.xyzx, r5.xyzx
  51: dp3 r2.x, r4.xyzx, r5.xyzx
  52: mul r2.x, r2.x, r2.x
  53: mul r2.x, r2.x, r2.x
  54: mov r2.y, cb0[8].w
  55: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  56: mul r2.x, r2.x, l(16.000000)
  57: mul r0.xyz, r0.xyzx, r2.xxxx
  58: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  59: mul r1.xyz, r1.wwww, r3.xyzx
  60: mul o0.xyz, r0.xyzx, r1.xyzx
  61: mov o0.w, l(1.000000)
  62: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (27..32)
 // Stats for Fragment shader:
 //        d3d11: 2 math, 1 texture
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb2[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Cutoff at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[2].w, -cb0[3].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _ALPHATEST_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb2[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb2[5].y, r0.x, r0.z
  33: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Cutoff at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[2].w, -cb0[3].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


 }
}
CustomEditor "AutodeskInteractiveShaderGUI"
Fallback "VertexLit"
}